[
     {
          "head": {
               "n": "0",
               "text": "abstract",
               "type": "abstract"
          },
          "paragraphs": [
               "Since its introduction in the year 1998 by Watts and Strogatz, the clustering-coefficient has become a frequently used tool for analyzing graphs. In 2002 the transitivity was proposed by Newman, Strogatz and Watts as an alternative to the clustering-coefficient. However, as we illustrate by several examples both parameters may differ vastly. On the other hand, an extension of the definitions to weighted versions provides the formal relation between them. As many networks considered in complex systems are huge, the efficient computation of such network parameters is crucial. Several algorithms with polynomial running time can be derived from results known in graph theory. The main contribution of this work is a new fast approximation algorithm for the weighted clustering-coefficient which also gives very efficient approximation algorithms for the clustering-coefficient and the transitivity. We namely present an algorithm with running time in O(1) for the clustering-coefficient, respectively with running time in O(n) for the transitivity. By an experimental study we demonstrate the performance of the proposed algorithms on real-world data as well as on generated graphs. These results also support the assumption that normally the values of clustering-coefficient and transitivity differ considerably."
          ],
          "paper_id": "2191bbe0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 0,
          "fromPaper": "Approximating Clustering-Coefficient and Transitivity *"
     },
     {
          "head": {
               "text": "I. INTRODUCTION",
               "type": "introduction"
          },
          "paragraphs": [
               "Recently, there is growing interest in understanding the structure, dynamics and evolution of large networks like the Internet, the World Wide Web, technological and biological networks or social networks. One way of analyzing specific properties of networks consists in computing and comparing certain local or global network indices like degree distribution and connectedness. Algorithmic aspects in network analysis concern the correct and fast computation of such indices. Vertex indices are often easily computable in polynomial time. However, if networks are large even polynomial running times that are e.g. cubic in the number of nodes are not acceptable.",
               "A frequently used tool for analyzing graphs is the clustering-coefficient introduced in respectively transitivity proposed in . This paper concentrates on the algorithmic aspects of computing those indices. First, we illustrate that clustering-coefficient and transitivity may differ considerably. However, an extension of the definitions to weighted versions provides the formal relation between them. The main contribution of this work is a new fast approximation algorithm for the weighted clustering-coefficient which also gives very efficient approximation algorithms for the clustering-coefficient and for transitivity. An experimental study demonstrates the performance of the proposed algorithms on real-world data as well as on generated graphs. These results also support the assumption that the values of clustering-coefficient and transitivity differ in general."
          ],
          "paper_id": "2191bbe0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 1,
          "fromPaper": "Approximating Clustering-Coefficient and Transitivity *"
     },
     {
          "head": {
               "text": "A. Basic Definitions",
               "type": "modelling"
          },
          "paragraphs": [
               "Let G = (V, E) be a undirected, simple (no self-loops, no multiple edges) graph (network) with a set of nodes (vertices) V and a set of edges E. We use the symbol n for the number of nodes and the symbol m for the number of edges. The degree d(v) := |{uV : there is{v, u}E}| of node v is defined to be the number of nodes in V that are adjacent to v.",
               "We use Landau's O-Notation to compare asymptotic behavior of functions, e.g. the running time of algorithms. Let g, f be functions from N to R then O (g(n)) := {f (n) : there are positive constants c, N such that 0f (n)c g(n) for all nN }, ? (g(n)) := {f (n) : there are positive constants c, N such that 0c g(n)f (n) for all nN } and",
               "B. The Clustering-Coefficient * The authors gratefully acknowledge financial support from DFG under grant WA 654/13-2 and from the European Commission within FET Open Project COSIN The clustering-coefficient was introduced by Watts and Strogatz in the context of social network analysis. Given three actors u, v and w with mutual relations between v and u as well as between v and w, it is supposed to represent the likeliness that u and w are also related. We formalize this notion by defining for vV m(v) := |{{u, w}E : {v, u}E and {v, w}E}| and t(v) := d(v)(d(v) ? 1)/2. We call m(v) the number of opposite edges of v, and t(v) the number of potential opposite edges of v. For a node v with d(v)2, the clustering-coefficient is defined as TABLE I: Behavior of density, clustering-coefficient and transitivity for different classes of graphs. The last row points to the section in the appendix where the construction of the graph families is described.",
               "Then the clustering-coefficient of graph G = (V, E) is defined as",
               "where V is the set of nodes v with d(v)2. It should be mentioned that there is some variation in the literature with respect to nodes of degree less than two. Sometimes, c(v) is defined to be either zero or one for such nodes v. Alternatively, nodes of degree less than two are not taken into account for the computation of C(G). However, the choice of the definition is important as can be seen from the results of our experiments for the ASgraph in Sec. IV, Tab. IV. "
          ],
          "paper_id": "2191bbe0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 2,
          "fromPaper": "Approximating Clustering-Coefficient and Transitivity *"
     },
     {
          "head": {
               "text": "C. The Transitivity",
               "type": "modelling"
          },
          "paragraphs": [
               "The transitivity was introduced by Newman, Watts and Strogatz in where it was claimed to be equal to the clustering-coefficient.",
               "We use the symbol(G) for the number of triangles in graph G. A triple= (V, E) of a graph G = (V, E) is a three node subgraph with V= {v 1 , v 2 , v 3 } ? V and E= {{v 1 , v 2 }, {v 2 , v 3 }} ? E, where v 2 is the center of the triple. We will use(G) to denote the number of triples in graph G. Note that each triangle contains exactly three triples. Motivated by this property, Newman, Watts and Strogatz defined the transitivity for a graph as C and T . Considering the analogous generalization of the transitivity will be useful for the approximation algorithm introduced in Sec. III C."
          ],
          "paper_id": "2191bbe0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 3,
          "fromPaper": "Approximating Clustering-Coefficient and Transitivity *"
     },
     {
          "head": {
               "text": "A. The Difference between Values of C and T",
               "type": "modelling"
          },
          "paragraphs": [
               "The smallest graph with differing values for C and T is depicted in . Tab. I shows the values for C, T and the density D := m/ n 2 for some graph families whose construction is described in App. C. That is, one can construct graphs for which the values of T and C differ as much as possible, independent from the density of the graph.",
               "B. Generalization of the Clustering-Coefficient with Weights",
               "If the graph is clear from context, we simply use C, T ,and t."
          ],
          "paper_id": "2191bbe0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 4,
          "fromPaper": "Approximating Clustering-Coefficient and Transitivity *"
     },
     {
          "head": {
               "text": "II. EXTENDING THE DEFINITIONS AND THE RELATION BETWEEN T AND C",
               "type": "modelling"
          },
          "paragraphs": [
               "As already mentioned in , T and C are different. Actually, we show that the values of T and C differ significantly for some networks of various density. By extending the definition of the clustering-coefficient to a weighted version, we can derive a formal relation between",
               "The definition of the clustering-coefficient does not consider the fact that, depending on the network, some nodes might be more important than others. This might be specified by a weight function that is either induced by the graph structure or given explicitly. For a weight function w : VR + we define the weighted clusteringcoefficient to be",
               "vV vV",
               "This definition maintains the property that C w is within the range between zero and one. Two implicit weight functions w are immediate, the degree-based weight w(v) = d(v), and the number of potential opposite edges w(v) = t(v). In the second case, t(v) simply cancels out in each additive term of the numerator, and we get Proof of Lemma 1 For a node weight function w, let :=",
               "where v is the center of triple. Further, letv be the set of triples with center v. Then accordingly t(v) = |v | andv X() = m(v). By appropriate transformation we get C w = T .",
               "We return to the definition of the transitivity. Each potential opposite edge has a one-to-one correspondence to one triple. Therefore, the sum of numbers of potential opposite edges over all nodes is equal to the number of triples in a graph, i.e. t(v) =. Furthermore m(v) = 3, because each triangle implies exactly three opposite edges. We now recognize that the transitivity is just the weighted clustering-coefficient with respect to the number of potential opposite edges Note that for w = t, i.e.1, T = T and for w1, i.e. = 1/t(v), T = C, where again v is assumed to be the center of triple.",
               "We observe that nodes of degree less than two cannot be center of any triple and thus do not contribute to T . Accordingly, the convention to ignore nodes of degree less than two for the definition of the clustering-coefficient is more convenient. Altogether, the notion of the weighted transitivity can be viewed as the most general definition from which the unweighted transitivity as well as the weighted clustering-coefficient can be derived as special cases.",
               "III. ALGORITHMS",
               "An equivalent formulation of Eq. 5 was already presented in . The following properties are immediate."
          ],
          "paper_id": "2191bbe0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 5,
          "fromPaper": "Approximating Clustering-Coefficient and Transitivity *"
     },
     {
          "head": {
               "text": "A. Relation to Other Problems in Graph Theory",
               "type": "modelling"
          },
          "paragraphs": [
               "Corollary 1 For graphs where",
               "? all nodes have the same degree, or",
               "? all nodes have the same clustering-coefficient",
               "The first property is quite interesting with respect to the small-world networks of Watts and Strogatz where node degrees do not differ much."
          ],
          "paper_id": "2191bbe0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 6,
          "fromPaper": "Approximating Clustering-Coefficient and Transitivity *"
     },
     {
          "head": {
               "text": "C. Generalization of the Transitivity with Weights",
               "type": "modelling"
          },
          "paragraphs": [
               "Letbe the set of all triples in a graph G, then(G) = ||. Further consider the mapping X :{0, 1}, where X() equals one if there is an edge between the outer nodes of the triple, and zero otherwise. Then we can rewrite the transitivity as"
          ],
          "paper_id": "2191bbe0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 7,
          "fromPaper": "Approximating Clustering-Coefficient and Transitivity *"
     },
     {
          "head": {
               "text": "���ʦ�",
               "type": "modelling"
          },
          "paragraphs": [
               "This equation is similar to the definition of the clusteringcoefficient in Eq. 1. Again we can consider a weight function :R + and define",
               "We now consider the efficient computation of the weighted clustering-coefficient C w . Let us assume that for each node v the weight w(v) can be computed in constant time. First note that t(v) can be computed in constant time for each node, provided that the degree d(v) is known. Otherwise, the degree of all nodes can be computed in a preprocessing step in linear time if the graph is represented appropriately, e.g. by adjacency lists. It remains to compute the number of opposite edges m(v) for each node v. As already mentioned in Sec. II B, this is equivalent to computing the number of triangles containing node v.",
               "Note that the transitivity requires only to compute the total number of triangles in a graph. For the (weighted) clustering-coefficient, however, the number of triangles containing node v have to be computed locally for each node v. Hence, it might be possible to compute the transitivity more efficiently than the clustering-coefficient. It is an open question if such an algorithm exists. All algorithms known so far for counting all triangles in a graph can be modified to count also locally for all nodes the triangles containing that node without additional running time. ",
               "The pseudo-code is presented in Alg. 1. As it is the case for a lot of randomized algorithms, Alg. 1 is quite simple. However, its time complexity and correctness is less obvious.",
               "2. An Alternative O(n 3 )-Algorithm",
               "Algorithm 1: C w -Approximation",
               "For each node simply check if edges connecting two adjacent nodes exist. Since there are d"
          ],
          "paper_id": "2191bbe0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 8,
          "fromPaper": "Approximating Clustering-Coefficient and Transitivity *"
     },
     {
          "head": {
               "text": "IV. IMPLEMENTATION AND EXPERIMENTS",
               "type": "experiment"
          },
          "paragraphs": [
               "Corollary 2 For a fixed error bound and a fixed probability parameter, the clustering-coefficient C and the transitivity T can be approximated in linear time within the interval Crespectively Twith probability "
          ],
          "paper_id": "2191bbe0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 9,
          "fromPaper": "Approximating Clustering-Coefficient and Transitivity *"
     },
     {
          "head": {
               "text": "D. Sublinear Approximation Algorithms",
               "type": "experiment"
          },
          "paragraphs": [
               "With the evolution of massive networks the study of sublinear algorithms gained interest. Such algorithms process only parts of the input graph. However, there is usually a requirement to preprocess the input in order to obtain a suitable representation of the graph resp. compute an appropriate data structure. This takes at least linear time. However, once the preprocessing is performed, several sublinear algorithms might be applied using the same data structures.",
               "In the following, we assume that a random sampling of a node, random sampling of adjacent nodes and the test of the presence of an edge can be done in constant time. The first two conditions can be easily satisfied by using arrays for nodes and adjacency lists. The third one requires more advanced data structures, e.g. a matrix for dense graph or hash-maps for sparse graphs. We further assume the error bound and the probability parameterto be fixed and that w(v) is computable in O(1) time.",
               "We use abbreviations ayz for our implementation of the ayz-Algorithm, n3 for the implementation of the alternative O(n 3 )-algorithm, and approx for our implementation of Alg. 1.",
               "Our implementations are publicly available from http: //i11www.ira.uka.de/algo/people/schank/cct. The programs should compile and run on any recent Linuxbased or similar operating system."
          ],
          "paper_id": "2191bbe0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 10,
          "fromPaper": "Approximating Clustering-Coefficient and Transitivity *"
     },
     {
          "head": {
               "text": "B. Experiments",
               "type": "experiment"
          },
          "paragraphs": [
               "Corollary 3 Under the above assumptions the weighted clustering-coefficient C w can be approximated in O(n) time.",
               "This statement follows directly from the proof of Theorem 1. If we further assume that the nodes of degree We computed the clustering-coefficient C and transitivity T . In order to enable comparison to previous results we also give the values of C 0 where c(v) = 0 for d(v)1, and C 1 where c(v) = 1 for d(v)1. The parameters of approx were set to = 0.001 and= 10 10 . The running time is always measured without reading and building the graph in memory, which corresponds to the sublinearity of the algorithms mentioned in Sec. III D. The approx algorithm needs some amount of random bits, which were taken from the device /dev/urandom. The running time was measured with the getrusage() function. The binaries were compiled with gnu cplusplus compiler version 3.3 and optimization level -O3. The experiments were finally carried out on a 2.4 GHz Intel-Xeon (we used only one of the two processors) based machine running a Linux-based operating system. All graphs considered did fit in main memory.  The computation of the clustering coefficient was already done in . Our value for T deviates by 0.033 from the result given in see Tab. II.",
               "It can be clearly seen in Tab. III that approx, running in about two minutes, beats n3 and ayz which both run for about one hour. There is no substantial difference in running time between n3 and ayz. The reason is the almost complete absence of high degree nodes. ayz and n3 will have the same running time if all nodes have degree less thanm, see [AYZ97] for details. The AS graph is a prominent example of the necessity to specify the way the clustering-coefficient for nodes of degree less than two is defined. As can be seen in table IV the difference between C 0 and C 1 is 0.321. Tab. V contains the running times. It takes more than one minute to calculate the approximation whereas ayz runs less than a second. This shows the negative effects of the number of samples being independent of the input size of the graph. "
          ],
          "paper_id": "2191bbe0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 11,
          "fromPaper": "Approximating Clustering-Coefficient and Transitivity *"
     },
     {
          "head": {
               "n": "3.",
               "text": "Graph-Generator",
               "type": "experiment"
          },
          "paragraphs": [
               "In the following we present results of the running times on graphs generated by an implementation of Alg. 2. For each step of n a new graph was created and than the algorithms were applied on this graph.",
               "The plots in show that approx is much faster compared to ayz or n3 for the generated graphs for growing n. The difference is more pronounced for denser graphs (high d and o parameters). The abbreviation gen is used for our implementation of the generator algorithm 2. It can be seen that approx becomes even faster then gen at some point. This fits again to the mentioned sublinearity of approx. There are some spikes in which seem to repeat within a certain range of number of nodes. They actually happen within a fixed range of number of edges and are caused by rebuilding the internal data structure of the edge-hash-map. "
          ],
          "paper_id": "2191bbe0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 12,
          "fromPaper": "Approximating Clustering-Coefficient and Transitivity *"
     },
     {
          "head": {
               "text": "0.7",
               "type": "experiment"
          },
          "paragraphs": [
               "We wish to thank Ulrik Brandes, Marco G?rtler and Christoph Gulden for fruitful discussions and for hinting to relevant work. We further wish to thank studentworkers Matthias Broghammer and Lars Volkhard which were involved in the implementation of the algorithms. and some error bound Hoeffding's bound states:",
               "This bound is refered to in the literature also as the Chernoff-Hoeffding or simply as one of the Chernoff bounds."
          ],
          "paper_id": "2191bbe0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 13,
          "fromPaper": "Approximating Clustering-Coefficient and Transitivity *"
     },
     {
          "head": {
               "text": "APPENDIX C: EXAMPLE GRAPH FAMILIES",
               "type": "experiment"
          },
          "paragraphs": [
               "The following graph families give examples for the divergence of D, C and T . For each example we consider the family of graphs for nand evaluate the parameters.",
               "return G"
          ],
          "paper_id": "2191bbe0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 14,
          "fromPaper": "Approximating Clustering-Coefficient and Transitivity *"
     },
     {
          "head": {
               "n": "1.",
               "text": "sparse, C �� 0 and T �� 0",
               "type": "experiment"
          },
          "paragraphs": [
               "Our goal was to produce simple graphs according to the preferential attachment rule with non vanishing clustering-coefficient by a fast and simple algorithm. The running time of Alg. 2 is in O ). The final number of edges is in ?(N d) and in O 2 ). shows the clustering-coefficient and transitivity for the generator with d = 10 and several values for o. The clustering-coefficient is adjustable where T seems to approach zero for n.",
               "The rings of n nodes and n edges. Let X i be independent real random variables bounded by 0X iM for all i. With P denoting the probability, E denoting the expectation, k the number of samples",
               "The graph family of n + 2 nodes as in . Here:= n; t = 2(n 2 ? n)/2 + n = n 2 ; C = n/(n + 2), hence D0, C1 and T0 for n."
          ],
          "paper_id": "2191bbe0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 15,
          "fromPaper": "Approximating Clustering-Coefficient and Transitivity *"
     }
]