[
     {
          "head": {
               "n": "0",
               "text": "abstract",
               "type": "abstract"
          },
          "paragraphs": [
               "The coordination of dynamic task allocation based on available resources is very challenging in disaster domains under time, space and communication constraints. In addition, it is also very hard or even impossible to achieve tasks allocation by using a centralised manner with the global knowledge of the working environment. This paper presents a novel decentralised coordination approach for dynamic task allocation by considering space, time and communication constraints in a disaster domain, and workloads and priorities of different tasks. In this approach, a group formation mechanism is proposed to help agents with limited communication range to achieve effective task allocation in a group through cooperation. The overall task allocation is achieved through distributed coordination in each dynamic group without a central control mechanism to reflect real life situations in the disaster domain. The experiment results show that the proposed approach outperforms other decentralised approaches, in disaster domains under space, time and communication constrains. Abstract. The coordination of dynamic task allocation based on available resources is very challenging in disaster domains under time, space and communication constraints. In addition, it is also very hard or even impossible to achieve tasks allocation by using a centralised manner with the global knowledge of the working environment. This paper presents a novel decentralised coordination approach for dynamic task allocation by considering space, time and communication constraints in a disaster domain, and workloads and priorities of different tasks. In this approach, a group formation mechanism is proposed to help agents with limited communication range to achieve effective task allocation in a group through cooperation. The overall task allocation is achieved through distributed coordination in each dynamic group without a central control mechanism to reflect real life situations in the disaster domain. The experiment results show that the proposed approach outperforms other decentralised approaches, in disaster domains under space, time and communication constrains."
          ],
          "paper_id": "238ffce0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 0,
          "fromPaper": "Decentralised task allocation under space, time and communication constraints for disaster domain Publication Details Decentralised task allocation under space, time and communication constraints for disaster domain Decentralised Task Allocation under Space, Time and Communication Constraints for Disaster Domain"
     },
     {
          "head": {
               "n": "1",
               "text": "Introduction",
               "type": "introduction"
          },
          "paragraphs": [
               "Nowadays, agent-based coordination for task allocation has been widely applied in many domains such as disaster rescue, space exploration and distributed computing, etc , , . The main objective of task allocation is to allocate the most suitable resources (usually agents) to different tasks in a rational way. In addition to the main objective, there are different new requirements and constraints, which are requested for the efficient coordination of task allocation in different application domains. This paper focuses task allocation problems in disaster domains.",
               "Normally, a disaster domain has the following major constraints for task allocation. 1) Space constraints. In a disaster domain, tasks are discovered at different locations. Hence, agents need to move to the location of tasks, which will consume time. 2) Time constraints. In a disaster domain, the objectives of task allocation include locating and saving survivors in debris, extinguishing a fire before it spreads, etc. Under such circumstances, each task has a deadline and the task should be done before the deadline (i.e. when the survivor is alive or the building is still stand). 3) Communication constraints. Due to the destruction of local infrastructures and other conditions in a disaster area, rescue agents have difficulties to communicate with each other. 4) Task Urgency. Different tasks have different degrees of urgencies. The most urgent tasks need to be finished before the deadlines, and the least urgent tasks can be disregarded during task allocation if resources are not sufficient. In many existing approaches , , the researchers emphasised on finishing tasks as many as possible before the deadline, but did not consider the degree of urgency of tasks. For example, supposing there are two collapsed buildings, one with 10 survivors and the other with 10 tons of goods stored in it. When allocating agents for these two buildings, saving the 10 survivors would take precedence over rescuing 10 tons of goods if the available resources were not sufficient to do both. The degree of urgency of each task is obviously a key issue that should be considered.",
               "To handle the above constraints and issues, various models, mechanisms and approaches have been proposed to assist coordinating task allocation in a disaster domain each having its own approach , , , . A number of centralised approaches , have been developed to coordinate task allocation in a diaster domain. The centralised approaches can ensure an optimal allocation solution if a central controller can have global knowledge of overall tasks and agents in the domain. However, in most disaster domains, it is hard for a central controller to have that kind of knowledge due to the dynamics of the agents and tasks, as well as time and communication constraints.",
               "To overcome the limitations of centralised approaches, some decentralised approaches , have been developed to deal with the coordination of task allocation in a diaster domain. One of the famous models is the F-max-sum algorithm proposed by Ramchurn et al. . The F-max-sum algorithm requires message passing between agents to achieve task allocation. If communication quality and range are limited, it is hard for agents to get enough messages from each other to get accurate results so the F-max-sum algorithm cannot work well. In addition, the F-max-sum algorithm does not consider the different urgencies of tasks. Furthermore, in most of the current research, the communication constraints only refer to the number of messages passing between agents and few of them consider the communication range of agents.",
               "In order to meet the challenges of task allocation in disaster domains, a novel decentralised coordination approach for dynamic task allocation is proposed in this paper. Our approach employs a token passing mechanism to assist neighbouring agents to communicate with each other under communication constraints and to form groups in a decentralised manner. The contributions of the proposed approach are that (1) our approach considers space, time and communication constraints to reflect the real situation in a disaster domain; (2) our approach considers the degree of urgency and the workload of each task as well as the dynamic nature of a disaster environment so as to meet the conditions of the environment; (3) in our approach, a novel group formation mechanism is developed to help agent to form groups despite communication limits; and (4) a comprehensive utility function is designed to help the coordinator to find the best task allocation for the group.",
               "The rest of paper is organized as follows. The problem is formulated and definitions are given in Section 2. The basic procedure of our approach is introduced in Section 3. The experiment and analysis are given in Section 4. Some related work about task allocation is introduced and analyzed in Section 5. The paper is concluded in Section 6."
          ],
          "paper_id": "238ffce0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 1,
          "fromPaper": "Decentralised task allocation under space, time and communication constraints for disaster domain Publication Details Decentralised task allocation under space, time and communication constraints for disaster domain Decentralised Task Allocation under Space, Time and Communication Constraints for Disaster Domain"
     },
     {
          "head": {
               "n": "2",
               "text": "Problem Description and Definition",
               "type": "modelling"
          },
          "paragraphs": [
               "In general, agent-based task allocation models the problem as there is a set of tasks and a set of agents. A task set contains m tasks, which can be described as {T 1 , T 2 , T 3 , ..., T m }, where T i represents the i th task and 1im. An agent set contains n agents, which can be denoted as {A 1 , A 2 , A 3 , ..., A n }, where A j represents the j th task and 1jn.",
               "In our approach, we give the following definitions to describe the problem in details. Definition 1: A Task (T i ) can be defined as a six-tuple T i =<T N o, DLine i , W Load i , Loc i , Emg i , T Sta i >, where T N o is the ID of task T i , DLine i is the deadline of T i (e.g. the time point until which the survivor can remain alive or a building remain standing), where Dline i, W Load i is the workload of T i , which represents how many work units must be done in order for T i to be completed, Loc i is the location of T i , Emg i is the degree of urgency of T i , where Emg i, in which 1 and 10 represent the lowest and the highest degrees of urgency, respectively, and T Sta i is the status of T i , as either 'available', 'working', 'finished' or 'expired'. Definition 2: An Agent (A j ) can be defined as a six-tuple",
               "where AN o is the ID of A j , U ti j is the working efficiency of A j . U ti j represents how many units of workload that A j can perform per time unit. Loc j is the current location of A j , M Sp j represents the moving speed of A j , which represents how far A j can move per time unit, Comm j is the communication and scan range of A j , and ASta j is the status of A j , which can be ether 'available' or 'working'.",
               "The main objective of weighted task allocation is to find an arrangement of agents to tasks to maximize the weight sum of total finished tasks, which is described as:",
               "Apart from the main objective, the cost of agents for finishing tasks should be minimized and this includes 1) minimizing the traveling time and distance of agents for finishing tasks and 2) minimizing the working time for agents to finish tasks.",
               "As mentioned before, we employed a token passing mechanism to help agent efficiently pass information about tasks and agents. There are two types of tokens in our approach: task tokens (T T oken k ) and agent tokens (AT oken j ), both of which are created by agents. The two kinds of tokens are defined by Definition 3 and Definition 4, respectively. Definition 3: A Task Token (T T oken k ) can be defined as a six-tuple,",
               "where AN o is the ID of the agent, which creates the T T oken k , T N o is the ID of the task represented by T T oken k , DLine k is the deadline of the task, represented by T T oken k , W Load k is the workload of the task represented by T T oken k , Loc i is the location of the task represented by T T oken k and Emg k is the degree of the urgency of the task represented by T T oken k . Definition 4: An Agent Token (AT oken j ) can be defined as a four-tuple AT oken j =< AN o, U ti j , Loc j , M Sp j >, where AN o is the ID of the agent represented by AT oken j , U ti j is the working efficiency of A j , Loc j is the current location of A j and M Sp j represents the moving speed of A j .",
               "An agent A j can have two different roles, a coordinator or/and a resource provider (an agent can be a coordinator, a resource provider or both). Definition 5: A Coordinator is an agent, which is in charge of allocating agents to tasks.",
               "Definition 6: A Resource Provider is an agent, which has the requested resource requested by a task and can finish the task before the deadline .",
               "Since communication range limitation is a common problem in disaster domains, we assume that agents can only discover the information about tasks and communicate with other agents close to its location within a limited communication range. Definition 7: A Neighbour of A j is an agent that can directly communicate with A j . In other words, a neighbour of A j is an agent within A j 's communication range, i.e. Comm j (see Definition 2)."
          ],
          "paper_id": "238ffce0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 2,
          "fromPaper": "Decentralised task allocation under space, time and communication constraints for disaster domain Publication Details Decentralised task allocation under space, time and communication constraints for disaster domain Decentralised Task Allocation under Space, Time and Communication Constraints for Disaster Domain"
     },
     {
          "head": {
               "n": "3",
               "text": "The Basic Processes of Our Approach",
               "type": "modelling"
          },
          "paragraphs": [
               "Our approach consists of five looped steps, which are 1) task token creation, 2) group formation, 3) token passing, 4) task allocation and 5) allocation solution return. After one loop of five steps, if there are available agents and tasks in the domain, these five steps will be repeated again according to the current location of available tasks and agents."
          ],
          "paper_id": "238ffce0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 3,
          "fromPaper": "Decentralised task allocation under space, time and communication constraints for disaster domain Publication Details Decentralised task allocation under space, time and communication constraints for disaster domain Decentralised Task Allocation under Space, Time and Communication Constraints for Disaster Domain"
     },
     {
          "head": {
               "n": "3.1",
               "text": "Task Token Creation",
               "type": "modelling"
          },
          "paragraphs": [
               "In this step, each available agent A j (i.e. ASta j = 'available', see Definition 2) scans the area within its communication range (Comm j ). Once, A j finds an available task",
               "creates an agent token AT oken j (see Definition 4) for itself."
          ],
          "paper_id": "238ffce0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 4,
          "fromPaper": "Decentralised task allocation under space, time and communication constraints for disaster domain Publication Details Decentralised task allocation under space, time and communication constraints for disaster domain Decentralised Task Allocation under Space, Time and Communication Constraints for Disaster Domain"
     },
     {
          "head": {
               "n": "3.2",
               "text": "Group Formation",
               "type": "modelling"
          },
          "paragraphs": [
               "After task tokens are created, agents will form groups and are allocated tasks within groups. Due to communication range constraints, agents can only communicate with their neighbours (see Definition 7). In order to make decisions for task allocation based on available resources as much as possible, the group formation mechanism is designed to connect as many agents as possible within the domain. The objective of the group formation mechanism is to link agents with their neighbouers and form a tree, in which the coordinator of the group is the root node. In the mechanism, we defined three 'neighbour related' variables for each agent, including, the parent agent (PA), the coordinator (C) and the number of neighbors of the coordinator (NNC). For example, for an agent A j , the three variables of A j is denoted as A j .PA, A j .C and A j .NNC, respectively. The group formation mechanism is conducted based on an iteration process.",
               "The group formation mechanism is described by Algorithm 1. At the beginning of the iteration, the three variables of each agent (i.e. A j ) are initialised as follow: A j .PA is set to A j , A j .C is set to A j and A j .NNC is set to the number of neighbours of A j (since A j is the coordinator of itself) (see line 2). Each agent (e.g. A j ) repeats the following three steps.",
               "Step 1: A j finds an agent (e.g. A u ) which has the highest value of the variable NNC (i.e. A u .NNC) among neighbours of A j (including A j itself) (see line 5); Step 2: the variables of A j (A j .PA, A j .C and A j .NNC) are updated as follow: A j .PA is set to A u , A l .C is set to A u .C and A j .NNC is set to A u .NNC (see line 6);",
               "Step 3: After above two steps, each neighbour of A j (e.g. A l ), compares its coordinator (A l .C) with the coordinator of A j (A j .C). If an different coordinator has been found (A l .C = A j .C), the variables of A l (A l .PA, A l .C and A l .NNC) are updated as follow: A l .PA is set to A j , A l .C is set to A j .C and A l .NNC is set to A j .NNC (see lines 8 to 9). The above three steps (lines 4 to 9) will be repeated by each agent until no further updating for three variables of any agent. "
          ],
          "paper_id": "238ffce0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 5,
          "fromPaper": "Decentralised task allocation under space, time and communication constraints for disaster domain Publication Details Decentralised task allocation under space, time and communication constraints for disaster domain Decentralised Task Allocation under Space, Time and Communication Constraints for Disaster Domain"
     },
     {
          "head": {
               "n": "3.3",
               "text": "Token Passing",
               "type": "modelling"
          },
          "paragraphs": [
               "In this step, each agent A j first gets task tokens (see Definition 3) and agent tokens (see Definition 4) (created in the task token creation step) from its child agents. Different agents in the same group can create task tokens for the same task. For example, A u and A u+1 are child agents of A j and they create task tokens",
               "It is can be seen that except for the first item i.e. the agent who created the token, the two task tokens created by A u and A u+1 are exactly the same. In this situation, A j combines the two tokens together (T T oken k+1 is abandoned and only T T oken k is kept). After this, A j passes the combined task token/tokens and agent tokens that A j received and AT oken j to the parent agent of A j . Finally, all of task tokens and agent tokens are passed to the coordinator of the group.  shows an example of token passing. There are four agents: A 1 , A 2 , A 3 and A 4 , in the example. A 1 is the parent agent of A 2 (A 2 .PA=A 1 ), A 2 is the parent agent of A 3 and A 4 (A 3 .PA=A 2 and A 4 .PA=A 2 ). There are three tasks in the example: T 1 , T 2 and T 3 , T 1 and T 2 can be directly found by A 3 and T 2 and T 3 can be directly found by A 4 . After the task token creation step, A 3 creates two task tokens (see, Definition 3) for T 1 and T 2 , which can be represented as '(A 3 , T 1 , ...)' and '(A 3 , T 2 , ...)', respectively, while A 4 also creates two task tokens (see, Definition 3) for T 2 and T 3 , which can be represented as '(A 4 , T 2 ,... )' and '(A 4 , T 3 , ...)', respectively. Then, the task tokens with the agent tokens (see, Definition 4) of A 3 and A 4 are passed to A 2 . After checking the task tokens getting from A 3 and A 4 , A 2 discovers that task tokens '(A 3 , T 2 , ...)' and '(A 4 , T 2 , ...)' have been created for the same task by two different agents. Therefore, A 2 combines the task tokens '(A 3 , T 2 ,... )' and '(A 4 , T 2 ,... )' to '(A 3 , T 2 , ...)'. After combination of task tokens, A 2 passes its agent tokens (A 2 , A 3 and A 4 ) and the combined task token ('(A 3 , T 2 , ...)') and its other task tokens ('(A 3 , T 1 , ...)'and '(A 4 , T 3 , ...)') to A 1 ."
          ],
          "paper_id": "238ffce0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 6,
          "fromPaper": "Decentralised task allocation under space, time and communication constraints for disaster domain Publication Details Decentralised task allocation under space, time and communication constraints for disaster domain Decentralised Task Allocation under Space, Time and Communication Constraints for Disaster Domain"
     },
     {
          "head": {
               "n": "3.4",
               "text": "Task allocation",
               "type": "modelling"
          },
          "paragraphs": [
               "This step is the core of the approach. In this step, a coordinator tries to find the best allocation solution for the group according to available tasks and agents in the group. In our approach, the allocation solution of a group is represented by an n-tuple Alloc =<",
               "where, AN o j is the ID of the j th agent of the group and T N o j is the ID of the task to which the j th agent of the group is allocated. If the j th agent of the group is not allocated to any task, the T N o j is ?. Since finding the best allocation solution is an NP-hard problem (the proof process can be found in ), our approach employs heuristics. The heuristics for finding the best allocation solution can be implemented in two sub-steps 1) useless allocation elimination and 2) utility calculation"
          ],
          "paper_id": "238ffce0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 7,
          "fromPaper": "Decentralised task allocation under space, time and communication constraints for disaster domain Publication Details Decentralised task allocation under space, time and communication constraints for disaster domain Decentralised Task Allocation under Space, Time and Communication Constraints for Disaster Domain"
     },
     {
          "head": {
               "text": "Useless Allocation Elimination",
               "type": "modelling"
          },
          "paragraphs": [
               "Based on the combinatorics, the number of combination for a group with m number of tasks and n number of agents is m n+1 . Among these allocations, there are allocations where the allocated agents cannot be sure to finish the task in time (before deadline). For example, in a group, one of allocation solution is Alloc a =< A 1T 1 , A 2T 2 , A 3T 1 >. After calculation, if we find that A 1 and A 3 cannot finish T 1 according to the status of A 1 , A 2 and T 1 , this allocation solution is useless and should be eliminated to make the following calculation more efficient. The process of this elimination can be described as follows. First, the coordinator gets m n+1 allocation solutions of the group. Second, for each task T i existing in the allocation solution Alloc, we calculate the maximum workload of agents allocated to T i , which can perform before the deadline of T i . If an allocation solution exists for task T i which cannot be finished by allocated agents before deadline, the Alloc a is eliminated."
          ],
          "paper_id": "238ffce0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 8,
          "fromPaper": "Decentralised task allocation under space, time and communication constraints for disaster domain Publication Details Decentralised task allocation under space, time and communication constraints for disaster domain Decentralised Task Allocation under Space, Time and Communication Constraints for Disaster Domain"
     },
     {
          "head": {
               "text": "Utility Calculation",
               "type": "modelling"
          },
          "paragraphs": [
               "In this sub-step, the coordinator calculates the utility of each useful allocation solution and chooses the allocation solution with the highest utility value as the best allocation solution for the group. To judge an allocation solution depends ont only on how many tasks that can be finished, but also on the benefits received from finishing the tasks and the cost of finishing the tasks. In our approach, the utility of an allocation solution Alloc a is affected by two factors, which are (1) the benefits received from finishing the task and (2) the cost of finishing the tasks.",
               "With the two factors above, the utility of an allocation solution Alloc a can be calculated by the following formula.",
               "The benefits received from finishing tasks involves two factors: 1) the degree of urgency of the task and 2) the time saved by finishing the task. The benefits of an allocation solution Alloc is the sum of the benefits of all finished tasks in Alloc a , which is calculated as follows.",
               "where Emg i , W Load i , DLine i are the degree of urgency, the workload and the deadline of T i in Alloc a and F T ime i is the predicted finishing time of T i in Alloc a . The cost for finishing tasks in our approach includes 1) the traveling time of each agent moving from its current location to the location of the its allocated task and 2) the time each agent spends on finishing the allocated task. Therefore, the cost of an allocation solution Alloc a is the sum of the cost of agents in Alloc a , the cost of traveling and of finishing tasks, which can be calculated by Equation 4 as follows.",
               "t=0 where U ti j is the working efficiency of A j , F T ime i is the predicted finishing time of T i in Alloc a , which A j is allocated to and CurT ime is the current time when the coordinator calculates the utility function of Alloc a . F T ime i can be calculated as follows:",
               "where W load i is the workload of T i in Alloc a , CurT ime is the current time point when the coordinator calculates the utility function of Alloc a ,StaT ime is the start time of the system begin to work, U ti j is the j th agent, which is allocated to T i in Alloc a and T ime(T i , A j ) is the traveling time from the current location of A j to the location of T i ."
          ],
          "paper_id": "238ffce0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 9,
          "fromPaper": "Decentralised task allocation under space, time and communication constraints for disaster domain Publication Details Decentralised task allocation under space, time and communication constraints for disaster domain Decentralised Task Allocation under Space, Time and Communication Constraints for Disaster Domain"
     },
     {
          "head": {
               "n": "3.5",
               "text": "Allocation Return",
               "type": "modelling"
          },
          "paragraphs": [
               "In this step, the coordinator sends the chosen allocation solution to the agents in the group. Once an agent received an allocation, it will do the following things. First, the tokens of allocated tasks (which it can definitely finish) is eliminated from the agent token pool. Second, the allocation is passed to the neighbours of the agent and the status of the agent is changed from 'available' to 'working'. Finally, the agent moves to the location of the task and starts working on it. When the first agent reaches the location of a task, it changes the status of the task from 'available' to 'working'. After finished the task, all of agents, which worked on the task, change their status from 'working' to 'available' and the status of the task is also changed from 'working' to 'finished'."
          ],
          "paper_id": "238ffce0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 10,
          "fromPaper": "Decentralised task allocation under space, time and communication constraints for disaster domain Publication Details Decentralised task allocation under space, time and communication constraints for disaster domain Decentralised Task Allocation under Space, Time and Communication Constraints for Disaster Domain"
     },
     {
          "head": {
               "n": "4",
               "text": "Experiment and Analysis",
               "type": "experiment"
          },
          "paragraphs": [
               "Two experiments are conducted to evaluate the performance of our approach. Experiment 1 is to evaluate the performance of our approach among agents with different ranges of communication. The benchmark of Experiment 1 is the F-max-sum algorithm proposed by Ramdchurn et al. . The F-max-sum is a decentralised task allocation mechanism. Experiment 2 is to evaluate how the degree of urgency of tasks impact on the performance of our approach. Two experiments are demonstrated and analysed in detail in the following two subsections, respectively."
          ],
          "paper_id": "238ffce0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 11,
          "fromPaper": "Decentralised task allocation under space, time and communication constraints for disaster domain Publication Details Decentralised task allocation under space, time and communication constraints for disaster domain Decentralised Task Allocation under Space, Time and Communication Constraints for Disaster Domain"
     },
     {
          "head": {
               "n": "4.1",
               "text": "Experiment 1",
               "type": "experiment"
          },
          "paragraphs": [
               "The purpose of this experiment is to test the impact of the different communication ranges on the performance of the proposed approach."
          ],
          "paper_id": "238ffce0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 12,
          "fromPaper": "Decentralised task allocation under space, time and communication constraints for disaster domain Publication Details Decentralised task allocation under space, time and communication constraints for disaster domain Decentralised Task Allocation under Space, Time and Communication Constraints for Disaster Domain"
     },
     {
          "head": {
               "text": "Experimental Settings",
               "type": "experiment"
          },
          "paragraphs": [
               "In Experiment 1, 100 tasks (in which 50 tasks already exist at the beginning of the experiment and 50 new tasks are discovered between 0 to 100 time units) and 10 agents with different initial locations in a 5050 areas are employed. Since the degree of urgency of each task is not being tested in Experiment 1, the degree of urgency of all of tasks is set to 1. In addition, all tasks have a workload of between 10 to 60 work units and must be finished before the deadline between 5 to 100 time units. Agents can only finish 1 work unit or move 1 distance per time unit. The settings of Experiment 1 are shown in In this experiment, we use three scenarios to represent three different kinds of communication ranges, shown in This setting tries to simulate tree different communication conditions, i.e. 'isolated', 'limited' and 'full' communication. The two approaches (i.e. the proposed approach and the benchmark approach) use their utility functions to choose that which tasks should be finished and which tasks should be abandoned. In addition, the Manhattan distance is employed to calculate the distance between two locations in the experiment. The group formation mechanism is affected by three factors: the number of agents in the domain, the communication range of agents and the size of the domain. From the definition of the Manhattan distance, in an mm size domain, if the communication range of agent A j is c, the possibility that another agent is the neighbour of A j is calculated as follows.",
               "With increasing communication range or agent numbers and decreasing domain size, more agents can find neighbours and form groups.",
               "Since the F-max-sum does not consider the communication range, we assume that agents in both approaches consider communication range. In most situations, agents need to cooperate to complete tasks. The two approaches are compared with three different communication ranges between agents 10, 20 and 50 in the three scenarios, respectively. In Scenario 1 (10 communication range), according to Equation 6, in an 5050 area, the possibility of two agents being neighbour of each other is 8.84%, which is an extreme \"lonely\" setting for 10 agents. In Scenario 2 (20 communication range), the possibility of two agents being neighbour of each other is 33.6%. This is a relatively good setting for 10 agents, because there is increased possibility for agents to form groups and there will also be some agents that cannot connect with other agents. In Scenario 3 (50 communication range), there is no communication range constraints between agents and all agents can communicate with each other directly."
          ],
          "paper_id": "238ffce0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 13,
          "fromPaper": "Decentralised task allocation under space, time and communication constraints for disaster domain Publication Details Decentralised task allocation under space, time and communication constraints for disaster domain Decentralised Task Allocation under Space, Time and Communication Constraints for Disaster Domain"
     },
     {
          "head": {
               "text": "Experimental Results and Analysis",
               "type": "experiment"
          },
          "paragraphs": [
               "The experimental results for three scenarios are shown in ., respectively. The X-axis of three figures represents the consumed time units. The Y-axis of three figures indicates the number of tasks that have been finished. Scenario 1: Since the communication range for each agent is only 10, in this scenario, it is hard for agents to work cooperatively (i.e. each agent is isolated). All of the agents in both approaches work independently. From ., we can see that there are nearly the same finished workloads between the two approaches. Scenario 2: The communication range for each agent is 20, in the scenario, and according to Equation 6, the probability for two agents in the domain to be neighbours is around 33%, so the communication capacity is limited. ., we can see that our approach has better performance than the benchmark approach. That is because when agents form groups, the coordinator in our approach can collect the task and agent in-formation from the members of the group and find the most suitable allocation solution for the group. However, the benchmark approach is limited by communication range and agents can not have full knowledge for all of tasks. Hence, agents can not offer the comprehensive messages to other agents and this affects the decision making of agents to achieve good performance in the domain. . demonstrates that our approach is equal to a centralised approach and the F-max-sum algorithm can also achieve the highest efficiency with the full communication capacity, so the performance of the two approaches is nearly the same.",
               "From the experimental results produced from three scenarios, it can be seen that the communication range has a bigger impact on the F-max-sum algorithm for task allocation than that of in our approach. The reason is that the F-max-sum algorithm requests good communication capacity between agents, so decision making for each agent in an area is limited if an agent can not offer comprehensive information of itself to other agents. In our approach, since the group formation algorithm can help the coordinator to find much information in a domain, the coordinator can reduce the impact of the limited communication range on task allocation and make the most suitable decision for the group. Therefore, our approach performs better than the benchmark approach when there is limited communication range."
          ],
          "paper_id": "238ffce0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 14,
          "fromPaper": "Decentralised task allocation under space, time and communication constraints for disaster domain Publication Details Decentralised task allocation under space, time and communication constraints for disaster domain Decentralised Task Allocation under Space, Time and Communication Constraints for Disaster Domain"
     },
     {
          "head": {
               "n": "4.2",
               "text": "Experiment 2",
               "type": "experiment"
          },
          "paragraphs": [
               "The purpose of this experiment is to test the impact of different degrees of urgencies of individual tasks on task allocation. Experiment settings In Experiment 2, 100 tasks and 10 agents with different initial locations in a 5050 domains are employed. All of the tasks have workloads between 10 to 60 work units, which must be finished before the deadline between 5 to 100 time units. Agents in the domain can only finish 1 work unit or move 1 distance per time unit and have a fixed communication range of 20. To evaluate the impact of degree of urgency, our approach is conducted twice. First time, the degree of urgency of all tasks is 5, which indicates that there is no difference between the degree of urgency of all agents, while in the second time, the degree of urgency of all tasks varied between 1 and 9 with normal distribution. The settings of the experiment are shown in  "
          ],
          "paper_id": "238ffce0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 15,
          "fromPaper": "Decentralised task allocation under space, time and communication constraints for disaster domain Publication Details Decentralised task allocation under space, time and communication constraints for disaster domain Decentralised Task Allocation under Space, Time and Communication Constraints for Disaster Domain"
     },
     {
          "head": {
               "text": "Experimental Results and Analysis",
               "type": "experiment"
          },
          "paragraphs": [
               "The experimental results of Experiment 2 are shown in . In , the Xaxis is the consumed time units, while Y-axis is the sum of the task workloads that have been finished. In , the X-axis is the consumed time units, while Y-axis is the sum of weighted workloads of the tasks that have been finished. From ., it can be seen that the proposed approach can finish more workload, when the degree of urgency of the tasks are similar. This is because when the degrees of urgency are similar for all tasks, the coordinator allocates agents to tasks only according to the workload of each task and the distance between agents and tasks. Form ., we can see that the proposed approach can finish more weighted workload, when the degree of urgency of the tasks is different. The reason for this situation is that the proposed approach consider the degree of regency of tasks in its utility calculation function.",
               "From , we can see that if we differentiate the degrees of urgency of tasks in the domain, the proposed approach tries to allocate the more urgent tasks before the less urgent tasks, which is reasonable."
          ],
          "paper_id": "238ffce0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 16,
          "fromPaper": "Decentralised task allocation under space, time and communication constraints for disaster domain Publication Details Decentralised task allocation under space, time and communication constraints for disaster domain Decentralised Task Allocation under Space, Time and Communication Constraints for Disaster Domain"
     },
     {
          "head": {
               "n": "4.3",
               "text": "Summary",
               "type": "conclusion"
          },
          "paragraphs": [
               "From Experiment 1 and 2, we can conclude that (1) the communication range of agents and the degrees of urgencies of tasks have great impact on decision making for task allocation, particularly in a diaster domain, because the limited communication range reduces the local view of an agent; and (2) using the equivalent degree of urgency for all tasks can bury the importance of tasks.",
               "Our approach uses group formation mechanism to expand the local view of agents and differentiates tasks by employing the concept of the degree of urgency of each task during task allocation. The experimental results indicate that our approach has better performance than the famous approach (F-max-sum) under limited communication range. In addition, using the weighted workload concept can help agents to finish urgent tasks under time constraints."
          ],
          "paper_id": "238ffce0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 17,
          "fromPaper": "Decentralised task allocation under space, time and communication constraints for disaster domain Publication Details Decentralised task allocation under space, time and communication constraints for disaster domain Decentralised Task Allocation under Space, Time and Communication Constraints for Disaster Domain"
     },
     {
          "head": {
               "n": "5",
               "text": "Related Work",
               "type": "relatedwork"
          },
          "paragraphs": [
               "Ramamritham et al. proposed using distributed coordination to handle task allocation with deadline and resource requirements in . Their approach solves common task allocation problem based on the classification of tasks. The weakness of their approach is to omit the space and communication constraints in the process of task allocation. Furthermore, in a disaster domain, most tasks are critical and it is rare that there are tasks of other categories. Therefore, the approach proposed by Ramamritham et al. is hard to be applied to a disaster domain. Our approach considers the space and communication constraints and can also deal with tasks with different degrees of urgencies during task allocation in a diaster domain.",
               "Some researchers such as Katirya and Jennings have used mixed integer linear programming (MILP) to get the optimal allocation solution in a disaster domain in , . The MILP process can guarantee an optimal solution for task allocation if the coordinator can have a global view of the domain. However, the MILP has two main weaknesses. First, in a common disaster domain, it is hard for a coordinator to have a global view due to communication constraint. Second, the MILP can only deal with problems with fixed numbers of tasks and agents. These features make their solutions hard to fit the highly dynamic natures of a disaster domain. Third, the computation complexity of the MILP is high. Our approach can solve dynamic task allocation problems in a decentralised manner.",
               "In recent years, the DARPA coordinators program is a popular environment for the coordination of task allocation, which has a complicated hierarchy task structure. The difference between the DARPA coordinators program and ours can be summarized as follows. 1) The tasks in the DARPA coordinators program do not have clear deadlines. 2) Most proposed models , , , dealing with the DARPA coordinators program do not consider either space or communication constraints. The approach proposed in this paper considers the coordination problem with both space and communication constraints."
          ],
          "paper_id": "238ffce0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 18,
          "fromPaper": "Decentralised task allocation under space, time and communication constraints for disaster domain Publication Details Decentralised task allocation under space, time and communication constraints for disaster domain Decentralised Task Allocation under Space, Time and Communication Constraints for Disaster Domain"
     },
     {
          "head": {
               "n": "6",
               "text": "Conclusion and Future Work",
               "type": "conclusion"
          },
          "paragraphs": [
               "In this paper, a novel decentralised coordination approach for task allocation with space, time and communication constraints is proposed. The approach uses a comprehensive utility function to enable a coordinator to find the best solution for task allocation in the group by considering degree of urgency of tasks, workload and traveling time of agents to the location of a task under multiple constraints. A group formation mechanism is set up in order to help agents to form a group within limited communication range due to the destruction of infrastructures in a diaster domain. In addition, the degree of urgency of each task and dynamic features of a such domain are covered by our approach in order to meet the requirements of a disaster domain. The experimental results have shown that our approach can provide a more effective way to meet the challenges of task allocation in a disaster domain than other existing approaches. In the future, we will work on task allocation problems in more complex environments, e.g., agents can only have spars interaction."
          ],
          "paper_id": "238ffce0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 19,
          "fromPaper": "Decentralised task allocation under space, time and communication constraints for disaster domain Publication Details Decentralised task allocation under space, time and communication constraints for disaster domain Decentralised Task Allocation under Space, Time and Communication Constraints for Disaster Domain"
     }
]