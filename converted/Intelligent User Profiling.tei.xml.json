[
     {
          "head": {
               "n": "0",
               "text": "abstract",
               "type": "abstract"
          },
          "paragraphs": [
               "User profiles or user models are vital in many areas in which it is essential to obtain knowledge about users of software applications. Examples of these areas are intelligent agents, adaptive systems, intelligent tutoring systems, recommender systems, intelligent e-commerce applications, and knowledge management systems. In this chapter we study the main issues regarding user profiles from the perspectives of these research fields. We examine what information constitutes a user profile; how the user profile is represented; how the user profile is acquired and built; and how the profile information is used. We also discuss some challenges and future trends in the intelligent user profiling area. 1 Introduction A profile is a description of someone containing the most important or interesting facts about him or her. In the context of users of software applications, a user profile or user model contains essential information about an individual user. The motivation of building user profiles is that users differ in their preferences, interests , background and goals when using software applications. Discovering these differences is vital to providing users with personalized services. The content of a user profile varies from one application domain to another. For example, if we consider an online newspaper domain, the user profile contains the types of news (topics) the user likes to read, the types of news (topics) the user does not like to read, the newspapers he usually reads, and the user's reading habits and patterns. In a calendar management domain the user profile contains information about the dates and times when the user usually schedules each type of activity in which he is involved, the priorities each activity feature has for the user, the relevance of each user contact and the user's scheduling and rescheduling habits. In other domains personal information about the user, such as name, age, job, and hobbies might be important. Not only the content of user profiles differs from one domain to another, but also how the information they contain is acquired. The content of a user profile can be explicitly provided by the user or it has to be learned using some intelligent M. Bramer (Ed.): Artificial Intelligence, LNAI 5640, pp. 193-216, 2009."
          ],
          "paper_id": "2281c130-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 0,
          "fromPaper": "Intelligent User Profiling"
     },
     {
          "head": {
               "n": "1",
               "text": "Introduction",
               "type": "introduction"
          },
          "paragraphs": [
               "technique. User profiling implies inferring unobservable information about users from observable information about them, that is, their actions or utterances . A wide variety of Artificial Intelligence techniques have been used for user profiling, such as case-based reasoning ( ), Bayesian networks ( ; ), association rules ( ; ), genetic algorithms ), neural networks ), among others.",
               "The purpose of obtaining user profiles is also different in the various areas that use them. In adaptive systems, the user profile is used to provide the adaptation effect, that is to behave differently for different users . In intelligent agents, particularly in interface agents, the user profile is used to provide personalized assistance to users with respect to some software application . In intelligent tutoring systems, the user profile or student model is used to guide students in their learning process according to their knowledge and learning styles ( . In e-commerce applications the user or customer profile is used to make personalized offers and to suggest or recommend products the user is supposed to like ). In knowledge management systems, the skills a user or employee has, the roles he takes within an organization, and his performance in these roles are used by managers or project leaders to assign him to the job position that suits him best ). In recommender systems the user profile contains ratings for items like movies, news or books, which are used to recommend potentially interesting items to him and to other users with similar tastes or interests .",
               "In this Chapter we study user profiles from the different perspectives mentioned above. In Section 2 we describe what information constitutes a user profile. In Section 3 we examine the different ways in which we can acquire information about a user and then build a user profile. Section 4 focuses on intelligent user profiling techniques. Finally, Section 5 presents some future trends."
          ],
          "paper_id": "2281c130-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 1,
          "fromPaper": "Intelligent User Profiling"
     },
     {
          "head": {
               "n": "2",
               "text": "User Profile Contents",
               "type": "introduction"
          },
          "paragraphs": [
               "A user profile is a representation of information about an individual user that is essential for the (intelligent) application we are considering. This section describes the most common contents of user profiles: user interests; the user's knowledge, background and skills; the user's goals; user behaviour; the user's interaction preferences; the user's individual characteristics; and the user's context. We analyze and provide examples for the different contents in areas like intelligent agents, adaptive systems, intelligent tutoring systems, recommender systems, and knowledge management systems."
          ],
          "paper_id": "2281c130-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 2,
          "fromPaper": "Intelligent User Profiling"
     },
     {
          "head": {
               "n": "2.1",
               "text": "Interests",
               "type": "introduction"
          },
          "paragraphs": [
               "User interests are one of the most important (and typically the only) part of the user profile in information retrieval and filtering systems, recommender systems, some interface agents, and adaptive systems that are information-driven such as encyclopedias, museum guides, and news systems . Interests can represent news topics, web page topics, document topics, work-related topics or hobbies-related topics. Sometimes user interests are classified as short-term interests or long-term interests. The interest of users in football may be a short-term interest if the user reads or listens to news about this topic only during the World Cup, or a long-term interest if the user is always interested in this topic. ), an interface agent that learns about a user's interests in daily news stories, considers information about recent events as short-term interests, and a user's general preferences for news stories as long-term interests. The most common representation of user interests are keyword-based models. In these models interests are represented by weighted vectors of keywords. Weights traditionally represent the relevance of the word for the user or within the topic. These representations are common in the Information Filtering and Information Retrieval areas. For example ), a browsing assistant, uses TF-IDF (term frequency/inverse document frequency) vectors to model user interests. In this technique the weight of each word is calculated by comparing the word frequency in a document against the word frequency in all the documents in a corpus . This technique is also used in NewsDude ( , where news stories are converted to TF-IDF vectors.",
               "A more powerful representation of user interests is through topic hierarchies ( ). Each node in the hierarchy represents a topic of interest for a user, which is defined by a set of representative words. This representation technique is important when we want to model not only general user interests such as sports or economy, but also the sub-topics of these interests that are relevant to a given user. For example, the user profile can indicate that a certain user is interested in documents talking about a famous football player and not in sports or football in general. An example of a topic hierarchy containing a user's interests is shown in .",
               "Often, a topic ontology is used as the reference to construct a user interest profile. An ontology is a conceptualization of a domain into a human-understandable, but machine-readable format consisting of entities, attributes, relationships, and axioms . , the authors represent user profiles in terms of a research paper topic ontology. This recommender system was built to help researchers in a computer science laboratory setting, representing user profiling with a research topic ontology and using ontological inference to assist the profiling process. Similarly, in ) students' interests within an e-learning system are determined using a topic ontology. "
          ],
          "paper_id": "2281c130-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 3,
          "fromPaper": "Intelligent User Profiling"
     },
     {
          "head": {
               "n": "2.2",
               "text": "Knowledge, background and Skills",
               "type": "relatedwork"
          },
          "paragraphs": [
               "The knowledge the user has about the application domain, his background experience and his skills are important features within user profiles in different areas. In intelligent tutoring systems and adaptive educational systems, the student's knowledge about the subject taught is vital to provide proper assistance to the student or to adapt the content of courses according to it. This knowledge can be represented in different ways. The most common representation is through a model that keeps track of the student knowledge about every element in the course knowledge base. The idea is to mark each knowledge item X with a value calculated as \"student knowledge of X\". The value could be binary (knows -does not know), qualitative (good -average -bad) or quantitative, assigned as a probability of the student's familiarity with the item X. For instance, in Cumulate ( ), the state of a student's knowledge is represented as a weighted overlay model covering a set of topics, and each educational activity can contribute to only one topic.",
               "Another way of representing user's knowledge is through errors or misconceptions. In addition to (or instead of) modelling what the user knows, some works focus on modelling what the user does not know. For example, in (Chen and Hsieh 2005) the authors aim at diagnosing learners' common learning misconceptions during learning processes. They try to discover relationships between misconceptions.",
               "Also, in many applications, the user's knowledge about the underlying domain is important. Some systems categorize users as expert, intermediate, or novice, depending on how well they know the application domain. For example, considers the knowledge users have about Unix, which is the underlying application domain in this system. Furthermore, user skills are key in areas like Knowledge Management. Within this area, skill management systems serve as technical platforms for mostly, though not exclusively, corporate-internal market places for skills and know-how. The systems are typically built on top of a database that contains profiles of employees and applicants. In this domain, profiles consist of numerous values for different skills and may be represented as vectors. In ) authors use the integers \"0\" (no knowledge), \"1\" (beginner), \"2\" (intermediate) and \"3\" (expert) as skill values. Examples of skills can be \"Programming in Y\" or \"Administration of Server X\".",
               "Finally, the user's background refers to those user's characteristics that are not directly related to the application domain. For instance, if we consider a tutoring system, the user's job or profession, his work experience, his traveling experience, the languages he speaks, among other information, constitute the user's background. As an application example, in ) the authors describe an adaptive information system in the healthcare domain that considers users' literacy and medical background to provide them information that they can understand. The representation of users' background and skills is commonly done via stereotypes. We discuss them in Section 3.4."
          ],
          "paper_id": "2281c130-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 4,
          "fromPaper": "Intelligent User Profiling"
     },
     {
          "head": {
               "n": "2.3",
               "text": "Goals",
               "type": "relatedwork"
          },
          "paragraphs": [
               "Goals represent the user's objective or purpose with respect to the application he is working with, that is what the user wants to achieve. Goals are target tasks or subtasks at the focus of a user's attention ). If the user is browsing the Web, his goal is obtaining relevant information (this type of goal is known as an information need). If the user is working with an e-learning system, his goal is learning a certain subject. In a calendar management system, the user's goals are scheduling new events or rescheduling conflicting events. Determining what a user wants to do is not a trivial task. Plan recognition is a technique that aims at identifying the goal or intention of a user from the tasks he performs. In this context, a task corresponds to an action the user can perform in the software application, and a goal is a higher level intention of the user, which will be accomplished by carrying out a set of tasks. Systems using plan recognition observe the input tasks of a user and try to find all possible plans by which the observed tasks can be explained. These possible explanations or candidate plans are narrowed as the user continues performing further tasks. Plan recognition has been applied in different areas such as intelligent tutoring , interface agents ( ), and collaborative planning .",
               "Goals or intentions can be represented in different ways. shows a Bayesian network representation of a user's intentions in a calendar domain ). In this representation, nodes represent user tasks and arcs represent probabilistic dependencies between tasks. Given evidence of a task performed by the user, the system can infer the next (most probable) task, and hence, the user's goal. Similarly, the Lumiere project at Microsoft Research ) uses Bayesian networks to infer a user's needs by considering a user's background, actions and queries (help requests). Based on the beliefs of a user's needs and the utility theory of influence diagrams (an extension to Bayesian networks), an automated assistant provides help for users. In Andes ), plan recognition is necessary for the problem solving coach to select what step to suggest when a student asks for help. Since Andes wants to help students solve problems in their own way, it must determine what goal the student is probably trying to achieve, and suggest the action the student cannot perform due to lack of knowledge."
          ],
          "paper_id": "2281c130-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 5,
          "fromPaper": "Intelligent User Profiling"
     },
     {
          "head": {
               "n": "2.4",
               "text": "Behaviour",
               "type": "relatedwork"
          },
          "paragraphs": [
               "Usually, the user's behaviour with a software application is an important part of the user profile. If a given user behaviour is repetitive, then it represents a pattern that can be used by an adaptive system or an intelligent agent to adapt a web site or to assist the user according to the behaviour learnt. The type of behaviour modelled depends on the application domain. For example, CAP (Calendar APprentice) learns the scheduling behaviour of its user and learns rules that enable it to suggest the meeting duration, location, time, and date ( . In an intelligent e-commerce system, a behavioural profile models the customer's actions ). Examples of behaviours in this domain are \"When purchasing cereal, John Doe usually buys milk\" and \"On weekends, John Doe usually spends more than $100 on groceries\". In intelligent tutoring systems, the student behaviour is vital to assist him properly. In ), a student profile is a set of <t, e> pairs, where e is a behaviour of the student and t expresses the time when the behaviour occurs. t could be a point in time or an interval of time. In this work, there are two main types of student behaviours, reading a particular topic and making a choice in a quiz. Sometimes behaviours are routine, that is, they show some kind of regularity or seasonality. For example, QueryGuesser ( ) models a user's routine queries to a database in a Laboratory Information Management System. In this agent, the user profile is composed of the queries each user performs and the moment when each query is generally made. The agent detects hourly, daily, weekly, and monthly behavioural patterns."
          ],
          "paper_id": "2281c130-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 6,
          "fromPaper": "Intelligent User Profiling"
     },
     {
          "head": {
               "n": "2.5",
               "text": "Interaction Preferences",
               "type": "acknowledgement"
          },
          "paragraphs": [
               "A quite new component of a user profile is interaction preferences, that is, information about the user's interaction habits and preferences when he interacts with an interface agent ( ). In interface agent technology, it is vital to know which agent's actions the user expects in different contexts and the modality of these actions. A user may prefer warnings, suggestions, or actions on the user's behalf. In addition, the agent can provide assistance by interrupting or not interrupting the user's work. A user interaction preference then expresses the preferred agent action and modality for different situations or contexts. As an illustration, consider an agent helping a user, John Smith, organize his calendar. Smith's current task is to schedule a meeting with several participants for the following Saturday in a free time slot. From past experience, the agent knows that one participant will disagree with the meeting date, because he never attends Saturday meetings. The agent can: warn the user about this problem, suggest another meeting date that considers all participant preferences and priorities, or do nothing. In this situation, some users would prefer a simple warning, while others would want suggestions about an alternative meeting date. In addition, when providing user assistance, agents can either interrupt the user's work or not. The agent must learn when the user prefers each modality. Information about these user preferences are kept in the user interaction profile, namely situations when the user: requires a suggestion to deal with a problem, needs only a warning about a problem, accepts an interruption from the agent, expects an action on his or her behalf, and wants a notification rather than an interruption."
          ],
          "paper_id": "2281c130-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 7,
          "fromPaper": "Intelligent User Profiling"
     },
     {
          "head": {
               "n": "2.6",
               "text": "Individual Characteristics",
               "type": "acknowledgement"
          },
          "paragraphs": [
               "In some domains, personal information about the user is also part of the user profile. This item includes mainly demographic information such as gender, age, marital status, city, country, number of children, among other features. For example, shows the demographic profile of a customer in Traveller, a tourism recommender system that recommends package holidays and tours to customers. On the other hand, a widely used user characteristic in intelligent tutoring systems and adaptive e-learning systems is the student's learning style. A learningstyle model classifies students according to where they fit in a number of scales belonging to the ways in which they receive and process information. There have been proposed several models and frameworks for learning styles . For example, Felder and Silverman's model categorizes students as sensitive/intuitive, visual/verbal, active/reflective, and sequential/global, depending on how they learn. Various systems consider learning styles, such as ARTHUR (Gilbert and Han, 1999) which models three learning styles (visual-interactive, readinglistener, textual), CS388 (Carver et al, 1996) and MAS-PLANG ( ) that use Felder and Silverman styles; the INSPIRE system ( ) that uses the styles proposed by Honey and Mumford.",
               "Finally, personality traits are also important features in a user profile. A trait is a temporally stable, cross-situational individual difference. One of the most famous personality models is OCEAN . This model comprises five personality dimensions: Openness to Experience, Conscientiousness, Extraversion, Agreeableness, and Neuroticism. Personality models and the methods to determine personality are subjects widely studied in psychology ). In the area of user profiling, various methods are used to detect user's personality. For example, in ( ) facial actions are used as visual cues for detecting personality."
          ],
          "paper_id": "2281c130-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 8,
          "fromPaper": "Intelligent User Profiling"
     },
     {
          "head": {
               "n": "2.7",
               "text": "Contextual Information",
               "type": "acknowledgement"
          },
          "paragraphs": [
               "The user's context is a quite new feature in user profiling. There are several definitions of context, mostly depending on the application domain. According to ), context is any information that can be used to characterize the situation of an entity. An entity is a person, place, or object that is considered relevant to the interaction between a user and an application, including the user and applications themselves. There are different types of contexts or contextual information that can be modelled within a user profile, as defined in  ). In ( , for example, different types of assistance actions are executed by an agent depending on the task the user is carrying out and on the situation in which the user needs assistance. As regards users' emotions or mood, RoCo (Ahn and ) models different users' states, namely attentive, distracted, slumped, showing pleasure, showing displeasure, and acts accordingly. Other examples of context-aware systems based on the user location are various tourist guide projects where information is displayed depending on the current location of the user, such as ( )."
          ],
          "paper_id": "2281c130-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 9,
          "fromPaper": "Intelligent User Profiling"
     },
     {
          "head": {
               "n": "2.8",
               "text": "Group Profiles",
               "type": "acknowledgement"
          },
          "paragraphs": [
               "In contrast to individual user profiles, group profiles aim at combining individual user profiles to model a group. Group profiles are vital in those domains where it is necessary to make recommendations to groups of users rather than to individual users. Examples of these domains are tourism recommendation systems, movie recommenders, and adaptive television. In the first type of application, we find INTRIGUE ( ), which recommends places to visit for tourist groups taking into account characteristics of subgroups within that group (such as children and disabled). Similarly, CATS (Collaborative Advisory Travel System) allows a group of users to simultaneously collaborate on choosing a skiing holiday package which satisfies the group as a whole ( ). Group user feedback is used to suggest products that satisfy the individual and the group. As regards TV, in ) the authors discuss different strategies for combining individual user profiles to adapt to groups in an adaptive television application. In ( ) the authors propose a recommendation scheme that merges individual user profiles to form a common user profile, and then generates common recommendations according to the common user profile."
          ],
          "paper_id": "2281c130-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 10,
          "fromPaper": "Intelligent User Profiling"
     },
     {
          "head": {
               "n": "3",
               "text": "Obtaining User Profiles",
               "type": "acknowledgement"
          },
          "paragraphs": [
               "To build a user profile, the information needed can be obtained explicitly, that is provided directly by the user, or implicitly, through the observation of the user's actions. In this section we describe these alternatives."
          ],
          "paper_id": "2281c130-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 11,
          "fromPaper": "Intelligent User Profiling"
     },
     {
          "head": {
               "n": "3.1",
               "text": "Explicit Information",
               "type": "acknowledgement"
          },
          "paragraphs": [
               "The simplest way of obtaining information about users is through the data they input via forms or other user interfaces provided for this purpose. Usually, this type of information is optional since users are not willing to fill in long forms providing information about them. Generally, the information gathered in this way is demographic, such as the user's age, gender, job, birthday, marital status, and hobbies. For eample, in ) this information constitutes the factual profile (name, gender, and date of birth), which is obtained by the e-commerce system from the customer's data.",
               "In addition, personal interests can be informed explicitly. For example, in NewsAgent ( ) the user can indicate which sections of a digital newspaper he likes to read, which newspaper he prefers, or indicate general interesting topics, such as football, through a user interface, and he can also rate pages as interesting or uninteresting while he is reading. shows the user interfaces for these purposes. In Syskill & Webert (Pazzani et al, 1996), users make explicit relevance judgments of pages explored while browsing the Web. Syskill & Webert learns a profile from the user's ratings of pages and uses this profile to suggest other pages. The user can rate a page as either hot (two thumbs up), lukewarm (one thumb up and one thumb down), or cold (two thumbs down). The Apt Decision agent ) learns user preferences in the domain of rental real estate by observing the user's critique of apartment features. Users provide a small number of criteria in the initial interaction consisting of number of bedrooms, city, and price, then receive a display of sample apartments, and then react to any feature of any apartment independently, in any order.",
               "Another way of providing explicit information is through the \"Programming by Example\" (PBE) or \"Programming by Demonstration\" paradigm . In this approach, the user demonstrates examples to the computer. A . Providing explicit information about a user's interests software agent records the interactions between the user and a conventional interface, and writes a program that corresponds to the user's actions. The agent can then generalize the program so that it can work in other situations similar to, but not necessarily exactly the same as, the examples on which it is taught. For example, in ) a software agent detects habitual patterns in a conventional programming language environment, Smalltalk, and automates those patterns."
          ],
          "paper_id": "2281c130-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 12,
          "fromPaper": "Intelligent User Profiling"
     },
     {
          "head": {
               "n": "3.2",
               "text": "Observation of a User's Actions",
               "type": "acknowledgement"
          },
          "paragraphs": [
               "There are various problems with explicit user information. First, users are generally not willing to provide information by filling in long forms. Second, they not always tell or write the truth when completing forms about themselves. Third, although some of them might be willing to provide data, they sometimes do not know how to express their interests or what they really want. Thus, the most widely used method for obtaining information about users is observing their actions with the underlying application, recording or logging these actions, and discovering patterns from these logs through some Machine Learning or Data Mining technique.",
               "In order to learn a user profile from a user's actions, there are certain conditions that must be fulfilled. The user behaviour has to be repetitive, that is the same actions have to be performed under similar conditions in different time points. If there is no repetition, no pattern can be discovered. In addition, the behaviour observed has to be different for different users. If not, there is no need for building an individual user profile.",
               "For example, PersonalSearcher ( ) unobtrusively observes a user's browsing behaviour in order to approximate the degree of user interest in each visited web page. In order to accomplish this goal, for each read page in a standard browser the agent observes a set of implicit indicators in a process known as implicit feedback . Implicit interest indicators used by Personal Searcher include the time consumed in reading a web page (considering its length), the amount of scrolling in a page, and whether it was added to the list of bookmarks or not. Similarly, NewsAgent monitors users' behaviour while they are reading newspapers on the web and it records information about the different articles they read and some indicators about their relevance to the user.",
               "A key characteristic of learning through observation is that of adapting to the user's changing interests, preferences, habits and goals. The user profiling techniques used have to be able to adapt the content of the user profile as new observations are recorded. User feedback plays a fundamental role in this task, as explained in the next section."
          ],
          "paper_id": "2281c130-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 13,
          "fromPaper": "Intelligent User Profiling"
     },
     {
          "head": {
               "n": "3.3",
               "text": "User Feedback",
               "type": "acknowledgement"
          },
          "paragraphs": [
               "User feedback is a key source of learning in interface agent technology. This feedback may be explicit, when users explicitly evaluate an agent's actions through a user interface provided for that purpose, or implicit, when the agent observes a user's actions after assisting him to detect some implicit evaluation of its assistance. The explicit feedback can be simple or complex. It is simple when the user is required to evaluate the agent's assistance according to a quantitative or a qualitative scale (for example 0 to 10 or relevant or irrelevant) or to just press a dislike/like button. However, it becomes more complicated when the user is required to provide big amounts of information in various steps. Mostly, an interface agent has to learn from implicit feedback since the explicit feedback is not always available. As said before, the reason is that not all users are willing to provide explicit feedback, mainly if this demands of them a lot of time and effort. For example, NewsDude (Billsus and Pazzani, 1999) supports the following feedback options: interesting, not interesting, I already know this, tell me more, and explain. In NewsAgent ( ), once the agent shows the personalized newspaper to the user, he can rate each news item contained in the newspaper as interesting or uninteresting, as shown in . User ratings in recommender systems can be considered also as user feedback (or as explicit information as well). In these systems, users rate items such as movies they have seen or books they have read. These ratings are used both to build the user profile and to recommend potentially interesting items to other users similar to the user under consideration. This last type of recommendation is known as collaborative recommendation or collaborative filtering. For example, MovieLens 1 uses user ratings to generate personalized recommendations for other movies the user will like and dislike. "
          ],
          "paper_id": "2281c130-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 14,
          "fromPaper": "Intelligent User Profiling"
     },
     {
          "head": {
               "n": "3.4",
               "text": "Stereotypes",
               "type": "acknowledgement"
          },
          "paragraphs": [
               "A stereotype is the representation of relevant common characteristics of users pertaining to specific user subgroups of an application system ). Stereotypes were the first attempt to differentiate a user from other users . Often, different system functionality was provided to users depending on their stereotype. The most popular stereotypes are: novice, intermediate or expert user. For example, UMT ) allows the user model developer the definition of hierarchically ordered user stereotypes; and BGP-MS ( allows assumptions about the user and stereotypical assumptions about user groups to be represented in a first-order predicate logic. Other examples of user stereotypes were presented in Section 2.2.",
               "Stereotypes are useful when no other information about a user is available, that is, when the user has not used the system yet. This is the idea of um Toolkit , where information about a user stereotype is used as default information. Stereotypes enable the classification of users as belonging to one or more of a set of subgroups, and also the integration of the typical characteristics of these subgroups into the individual user profile."
          ],
          "paper_id": "2281c130-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 15,
          "fromPaper": "Intelligent User Profiling"
     },
     {
          "head": {
               "n": "4",
               "text": "Intelligent User Profiling Techniques",
               "type": "acknowledgement"
          },
          "paragraphs": [
               "Intelligent user profiling implies the application of intelligent techniques, coming from the areas of Machine Learning, Data Mining or Information Retrieval, for example, to build user profiles. The data these techniques use to automatically build user profiles are obtained mainly from the observation of a user's actions, as described in the previous section. In this section we briefly describe three techniques widely used for user profiling and we present examples of their use that were developed in our research group."
          ],
          "paper_id": "2281c130-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 16,
          "fromPaper": "Intelligent User Profiling"
     },
     {
          "head": {
               "n": "4.1",
               "text": "Bayesian Networks",
               "type": "acknowledgement"
          },
          "paragraphs": [
               "In the last decade, interest has been growing steadily in the application of Bayesian representations and inference methods for modelling the goals, preferences, and needs of users (  ). The absence of edges in a BN denotes statements of independence. A BN also represents a particular probability distribution, the joint distribution over all the variables represented by nodes in the graph. This distribution is specified by a set of conditional probability tables (CPT). Each node has an associated CPT that specifies the probability of each possible state of the node given each possible combination of states of its parents. For nodes without parents, probabilities are not conditioned on other nodes; these are called the prior or marginal probabilities of these variables. The mathematical model underlying BN is Bayes' theorem, which is shown in Equation 1. Bayes' theorem relates conditional and marginal probabilities. It yields the conditional probability distribution of a random variable A, assuming we know: information about another variable B in terms of the conditional probability distribution of B given A, and the marginal probability distribution of A alone. Equation 1 reads: the probability of A given B equals the probability of B given A times the probability of A, divided by the probability of B.",
               "An important characteristic of BN is that Bayesian inference mechanisms can be easily applied to them. The goal of inference is typically to find the conditional distribution of a subset of the variables, conditioned on known values for some other subset (the evidence). Thus, a BN can be considered a mechanism for automatically constructing extensions of Bayes' theorem to more complex problems."
          ],
          "paper_id": "2281c130-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 17,
          "fromPaper": "Intelligent User Profiling"
     },
     {
          "head": {
               "text": "P(A/B) =( P(B/A) P(A) ) / P(B)",
               "type": "acknowledgement"
          },
          "paragraphs": [
               "(1)",
               "As an example of using BN for user profiling, consider the work presented in ( , where BN are used to model a student's behaviour with an elearning system and to detect his learning style. In this example, random variables represent the different dimensions of Felder's learning styles and the factors that determine each of these dimensions. The dimensions modelled are perception, processing and understanding. The values these variables can take are sensory/intuitive, active/reflective, and sequential/global respectively. The factors that determine them are extracted from the interactions between the student and a web-based education system. Thus, a BN models the relationships between the dimensions of learning styles and the factors determining them. A part of the BN proposed in this work is shown in . This network models the relationships between the participation of a student in chats and forums and the processing style of this student. Thus, the BN has three nodes: chat, forum, and processing. The \"chat\" node has three possible states: participates, listens, no participation. The \"forum\" node has four possible states: replies messages, reads messages, posts messages and no participation. Finally, the \"processing\" node has two possible values, namely active and reflective. The Bayesian model is completed with the simple probability tables for the independent nodes and the CPT for the dependent nodes. The values of the simple probabilities are obtained by analyzing a student's log file. The probability functions associated with the independent nodes are gradually obtained by observing the student interaction with the system. The values of the CPT are set by combining expertise knowledge and experimental results. As an example, shows the probability values obtained for a certain student for the \"chat\", \"forum\" and \"processing\" nodes. We can observe the marginal probabilities for the independent nodes, namely chat and forum, and the CPT for the processing node.",
               "Once the BN is built, the student learning style is determined via Bayesian inference. The authors infer the values of the nodes corresponding to the dimensions of a learning style given evidence of the student's behaviour with the system. The learning style of the student is the one having the greatest posterior probability value. In the simple example in , given evidence of the utilization of the chat and forum facilities, we could infer whether the student processes information actively (discussing, in groups) or reflectively (by himself).",
               "There are various works that use BN for user profiling. For example, the Lumiere project at Microsoft Research ( ) uses BN to infer a user's needs by considering a user's background, actions and queries. Based on the beliefs of a user's needs an automated assistant provides help for users. In ( ) the authors use BN to model the profile of a web visitor and they use this profile to recommend interesting web pages. ANDES ) and SE-Coach use this technique to model student knowledge in Physics. In ( ) the authors use BN to assess students' state of knowledge and learning preferences in an intelligent tutoring system."
          ],
          "paper_id": "2281c130-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 18,
          "fromPaper": "Intelligent User Profiling"
     },
     {
          "head": {
               "n": "4.2",
               "text": "Association Rules",
               "type": "acknowledgement"
          },
          "paragraphs": [
               "Association rules are a data mining technique widely used to discover patterns from data. They have also been used to learn user profiles in different areas, mainly in those related to e-commerce ) and web usage ). An association rule is a rule which implies certain association relationships among a set of objects in a given domain, such as they occur together or one implies the other. Association rule mining is commonly stated as follows : Let I be a set of items and D be a set of transactions, each consisting of a subset X of items in I. An association rule is an implication of the form XAEY, where X?I, Y?I and XY=?. X is the antecedent of the rule and Y is the consequent. The rule has support s in D if s% of the transactions in D contains XY. The rule XAEY holds in D with confidence c if c% of transactions in D that contain X also contain Y. Given a transaction database D, the problem of mining association rules is to find all association rules that satisfy: minimum support (called minsup) and minimum confidence (called minconf). For example, in ( ) association rules are used to discover a user's interaction preferences with an interface agent. Different algorithms have been proposed for association rule mining. In this work, authors use the Apriori algorithm ( to generate association rules from a set of user-agent interaction experiences. An interaction experience describes a unique interaction between the user and the agent, which can be initiated by any of them. The interaction records the situation or context originating it, the assistance the agent provided, the task the user was carrying out when the interaction took place, the modality of the assistance, the user feedback to the assistance type and the modality (if available), and an evaluation of the interaction (success, failure, or undefined).",
               "Association rule mining algorithms tend to produce huge amounts of rules, most of them irrelevant or uninteresting. Therefore, some post-processing steps are needed to obtain valuable information to build a user profile. In the example we are describing, the rules generated by Apriori are automatically post-processed in order to derive useful knowledge about the user from them. Post-processing includes detecting the most interesting rules, eliminating redundant and insignificant rules, eliminating contradictory weak rules, and summarizing the information in order to formulate hypotheses about a user's preferences more easily. For filtering rules, the authors use templates to express and select relevant rules. For example, they are interested in those association rules of the form \"situation, assistance actionAEuser feedback, evaluation\"; and also in association rules of the form \"situation, modality, [user task], , [assistance action]AE user feedback, evaluation\", where brackets mean that the attributes are optional. To eliminate redundant rules, they use a subset of the pruning rules proposed in . Basically, these pruning rules state that given the rules A,BAEC and AAEC, the first rule is redundant because it gives little extra information. Thus, it can be deleted if the two rules have similar confidence values. Similarly, given the rules AAEB and AAEB,C, the first rule is redundant since the second consequent is more specific. Thus, the redundant rule can be deleted provided that both rules have similar confidence values. A contradictory rule is one indicating a different assistance action (modality) for the same situation, and having a small confidence value with respect to the rule being compared. After pruning, rules are grouped by similarity and a hypothesis is generated considering: a main rule, positive evidence (redundant rules that could not be eliminated), and negative evidence (contradictory rules not eliminated). Once a hypothesis is formulated, the profiling algorithm computes the certainty degree of the hypothesis by taking into account the support values of the main rule, the positive and the negative evidence. The whole user profiling process is summarized in . Other works have utilized association rules for building user profiles. In (Chen and Hsieh 2005) the authors use this technique for diagnosing learners' common learning misconceptions during learning processes. In this work, the association rules state that if misconception A occurs then misconception B is probable to occur. In ) association rules are used to build customers' profiles in an e-commerce application. Association rules indicate relationships among items bought by a customer."
          ],
          "paper_id": "2281c130-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 19,
          "fromPaper": "Intelligent User Profiling"
     },
     {
          "head": {
               "n": "4.3",
               "text": "Case-Based Reasoning",
               "type": "acknowledgement"
          },
          "paragraphs": [
               "CBR is a technique that solves new problems by remembering previous similar experiences . A case-based reasoner represents problem-solving situations as cases. Given a new situation, it retrieves relevant cases (the ones matching the current problem) and it adapts their solutions to solve the problem.",
               "In an interpretative approach, CBR is applied to accomplish a classification task, that is, find the correct class for an unclassified case. The class of the most similar past case becomes the solution to the classification problem. CBR has been used to build user profiles in areas like information retrieval and information filtering ( ). For example, in ( ) CBR is used to obtain a user interest profile. In this domain, cases represent relevant documents read by a user on the web. Each case records the main characteristics of a document, which enable the reasoner to determine its topic considering previous readings. Document topics represent a user's interests and they constitute case solutions. A topic or category is extensionally defined by a set of cases sharing the same solution. Using this approach, previously read documents can help to categorize new ones into specific categories, assuming that similar documents share the same topic.",
               "Cases represent specific and contextual knowledge that describes a particular situation. In the example we are describing, cases represent readings of web documents relevant to a user. A case has three main parts: the description of the situation or problem, the solution, and the outcome or results of applying the solution to the problem. In this example, the description of the situation includes the URL (Uniform Resource Locator) of the document, a general category the document belongs to, a vector of representative words, and the time the user spent reading it. The solution is a code number that identifies a certain topic of interest for a user and the outcome describes in some way the user's feedback. The most important part of a document representation as a case is the list of relevant words. The authors use a bag-of-words representation where each word in the document has an associated weight that depends on the frequency of a word in the document and an additive factor defined in terms of several word characteristics in the document. The additive factor is calculated taking into account the word location inside the HTML document structure (words in the title are more important than words in the document body) and the word style (bold, italic or underlined). An example of a case in this domain is shown in . The comparison of cases is performed through a number of dimensions that describe them. A similarity function is defined for each of these dimensions, the most important being the one that measures the similarity between the relevant word lists. This similarity is calculated by the inner product with cosine normalization . A numerical evaluation function that combines the matching of each dimension with the importance value assigned to that dimension, is used to obtain the global similarity between the entry case C E and the retrieved one C R . The function used is the formula in Equation 2, where w i is the importance of the dimension i given by the agent designer; sim i is a similarity function for this dimension; f i E , f i R are the values for the feature f i in both cases. If the similarity value obtained is higher than a given threshold, the cases are considered similar, and then, we can conclude that both cases are in the same user interest topic."
          ],
          "paper_id": "2281c130-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 20,
          "fromPaper": "Intelligent User Profiling"
     },
     {
          "head": {
               "n": "4.4",
               "text": "Other User Profiling Techniques",
               "type": "acknowledgement"
          },
          "paragraphs": [
               "Many other Machine Learning techniques have been used for user profiling, such as genetic algorithms, neural networks, kNN-algorithm, clustering, and classification techniques such as decision trees or na?ve Bayes classifier. For example, Personal WebWatcher (Mladenic, 1996) and Syskill&Webert (Pazzani et al, 1996) use naive Bayes classifiers for detecting users' interests when browsing the web. Amalthaea (Moukas, 1996) uses genetic algorithms to evolve a population of vectors representing a user's interests. The user profile is used to discover and filter information according to the user's interests. NewsDude (Billsus and Pazzani, 1999) obtains a short-term interest user profile using the k-NN algorithm and a long-term interest profile using a na?ve Bayes classifier. PersonalSearcher ( ) uses a clustering algorithm to categorize web documents and hence determine a user's interest profile. SwiftFile uses a TF-IDF style classifier to organize emails ). CAP uses decision trees to learn users' scheduling preferences .",
               "Combinations of different techniques have also been used for building user profiles. For example, in ) the authors combine genetic algorithms and classification techniques (fuzzy logic) to build user profiles from a collection of documents previously retrieved by the user. In ) case-based reasoning and Bayesian networks are combined to learn a user profile in a LIMS (Laboratory Information Management System). The user profile comprises routine user queries that represent a user's interests in the LIMS domain. In ) the authors combine genetic algorithms and a naive Bayes classifier to recommend interesting web documents to users ."
          ],
          "paper_id": "2281c130-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 21,
          "fromPaper": "Intelligent User Profiling"
     },
     {
          "head": {
               "n": "5",
               "text": "Future Trends",
               "type": "acknowledgement"
          },
          "paragraphs": [
               "We have studied in this Chapter the main issues concerning user profiles: how a user profile is composed; how a user profile can be acquired; and how a user profile can be used. We have seen that user profiles are vital in many areas; many of them in constant evolution and some new ones. Thus, researchers in the area of user profiling have to fulfill the expectations of these new trends and include new components as part of a profile and develop new techniques to build them. As regards user profile contents, in recent years there has been increasing interest in modelling users' emotions and moods as part of the user profiles in areas such as social computing and intelligent agents. Emotional state has a similar structure to personality (described in Section 2.6), but it changes over time. The emotional state is a set of emotions that have a certain intensity. For example, the OCC model ( ) defines 22 emotions. An example of work in this direction is AutoTutor (D' , which tries to determine students' emotions as they interact with an intelligent tutoring system. It uses several nonintrusive sensing devices to obtain this information. AutoTutor analyzes facial expressions, posture patterns, and conversational cues to determine a student's emotional state.",
               "With respect to contextual information about a user, the developments in the areas of ubiquitous computing, mobile devices, and physical sensors enable the incorporation of new features in user profiles such as the focus of user attention (detected via eye-tracking), users' mood and emotions (detected analyzing facial expressions and body posture), temperature and humidity of the user's location, among others.",
               "The area of Knowledge Management is acquiring great interest nowadays for organizations of different types. Within this area, user profiling is vital for different purposes. For example, building an employee profile focused on the employee's skills is important to place him in the position that best suits him. This is the purpose of skills management systems. Also, building a customer profile is important for customer relationship management (CRM). For example, in a credit card company, information such as the type of products the customer usually buys, how much he spends, when and where he buys what product, and how his family is composed, is key to offering him a personalized service.",
               "Building group profiles is also a new tendency. Some works are being carried out in this direction . The challenges in this area are how to combine individual preferences into a group profile, how to help users to reach some kind of consensus, and how to make group recommendations trying to maximize average satisfaction, minimize misery and/or ensure some degree of fairness among participants."
          ],
          "paper_id": "2281c130-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 22,
          "fromPaper": "Intelligent User Profiling"
     }
]