[
     {
          "head": {
               "n": "0",
               "text": "abstract",
               "type": "abstract"
          },
          "paragraphs": [
               "Understanding the relationship among different distance measures is helpful in choosing a proper one for a particular application. In this paper, we compare two commonly used distance measures in vector models, namely, Euclidean distance (EUD) and cosine angle distance (CAD), for nearest neighbor (NN) queries in high dimensional data spaces. Using theoretical analysis and experimental results, we show that the retrieval results based on EUD are similar to those based on CAD when dimension is high. We have applied CAD for content based image retrieval (CBIR). Retrieval results show that CAD works no worse than EUD, which is a commonly used distance measure for CBIR, while providing other advantages, such as naturally normalized distance."
          ],
          "paper_id": "23bf2330-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 0,
          "fromPaper": "Similarity between Euclidean and cosine angle distance for nearest neighbor queries"
     },
     {
          "head": {
               "n": "1.",
               "text": "INTRODUCTION",
               "type": "introduction"
          },
          "paragraphs": [
               "hand, it is also important to choose a similarity measure that is consistent with human ideas of similarity. The authors of have proposed a similarity measure based on noise distribution of the image database. In , a mathematical analysis of EUD and CAD has been done. It was shown that CAD has a special property to favor relatively larger component in a vector.",
               "In this paper, we compare two commonly used distance measures in vector models, namely, Euclidean distance (EUD) and cosine angle distance (CAD), for nearest neighbor (NN) queries in high dimensional data spaces. From theoretical analysis and experimental results, we find that the retrieval results based on EUD are similar to those based on CAD. We use a high dimensional geometrical model to analyze how similar these two distance measures are under the assumption of uniform data distribution. We find that the NN of EUD is also ranked high by CAD when dimension is high. We define NN as the first nearest neighbor of the query. Our experimental results have corroborated the correctness of our model. We have also compared these two distance measures experimentally using normalized datasets and clustered datasets. Our conclusions are that:",
               "Distance measure is an important part of a vector model. Among all distance measures that are proposed in the literature, some have very similar behaviors in similarity queries, while others may behave quite differently. Understanding the relationship among distance measures can help us to choose a proper distance measure for a particular application.",
               "One way of comparing distance measures is to study their retrieval performance in terms of precision and recall in a particular application area, such as content-based image retrieval (CBIR) and video copy detection . One concern in choosing a particular distance measure is the impact of computational overhead on system performance. When feature vectors are large, some distance measures may consume more computing resources than the others. One possible approximation of EUD is proposed in . On the other 1. In high dimensional data spaces, the NN query results by EUD and CAD are very similar. 2. For clustered data, the NN query results by EUD and CAD are more similar. 3. When vectors are normalized by its size, the NN query results by EUD and CAD are also more similar.",
               "One application of the above properties is to combine features that are semantically different (e.g. color and texture) in CBIR as explained below. As EUD is often used as a distance measure for individual features in CBIR, inter-feature normalization is needed to combine EUD values of different scales into an over-all score for an image. Based on the property that NN query results of EUD and CAD are very similar in high dimensional spaces, we propose to use CAD instead of EUD for individual features. As CAD values are naturally normalized by norm, there is no need for further inter-feature normalization. Thus, the distance value from different features can be summed up directly as the final score for an image in the database. Our experimental results show that our proposal works not only no worse than other commonly used methods but also has some favorable advantages.",
               "There are a number of methods proposed for combining features in CBIR. They can be divided into two categories: rank based and distance value based . Rank based methods are also called \"voting methods\" in . In rank based methods, the rank of an image for different features are calculated first, then these ranks are summed to derive the final rank of the image. Distance value based methods use distance value of individual features directly.",
               "Since distance values from different features have different scales, inter-feature normalization is necessary for computing the final rank of an image. One simple method in this category is to divide all distance values of a feature by the maximum distance value . Another widely used method for combining features are based on the assumption that distance values have a Gaussian distribution . Some discussion and comparisons of methods for combining features can be found in .",
               "Using CAD as a normalized distance measure was mentioned in , but no analysis or experimental results were presented in the context of vector models or CBIR. We have done experiments to compare the CAD based method we proposed with two widely used methods, namely, rank based method by EUD and distance value based method with Gaussian assumption.",
               "The rest of this paper is organized as follows. Section 2 presents the theoretical analysis of NN queries by EUD and CAD using a geometrical model in high dimensions. Section 3 and 4 present experimental results for comparing EUD and CAD and combining multiple features, respectively. Section 5 discusses the conclusion and future work.",
               "3. A hyper-cone cone(P,) for a given point P and angleis defined as follows:",
               "The vertex of cone(P,) is the origin O of the unit space ?. Let P be a point in ? that is not O. Every point P of cone(P,) satisfies angle(P , P ). shows a 2-dimensional hyper-cone cone(P,), which is the Quadrangle OABC. "
          ],
          "paper_id": "23bf2330-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 1,
          "fromPaper": "Similarity between Euclidean and cosine angle distance for nearest neighbor queries"
     },
     {
          "head": {
               "n": "2.",
               "text": "THEORETICAL ANALYSIS OF EUD AND CAD FOR NN QUERIES",
               "type": "introduction"
          },
          "paragraphs": [
               "We first illustrate our approach to compare EUD and CAD using a 2-dimensional space. shows a 2-dimensional unit space ?, where Q is a query point and",
               "The similarity between EUD and CAD for NN queries can be measured by the average rank of the NN of EUD (represented as NNe) in CAD. The two distance measures are considered similar if NNe is also ranked high by CAD. The theoretical (probability) analysis compares EUD and CAD using a high dimensional geometrical model. A similar model has been used in for the derivation of the cost model of high dimensional NN queries. Without losing generality, our analysis is based on a d-dimensional unit hypercube data space. We assume that data points are uniformly distributed within the space and there is no dependence between dimensions."
          ],
          "paper_id": "23bf2330-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 2,
          "fromPaper": "Similarity between Euclidean and cosine angle distance for nearest neighbor queries"
     },
     {
          "head": {
               "n": "2.1",
               "text": "Notations and definitions",
               "type": "modelling"
          },
          "paragraphs": [
               "x ? is a summary of notations that we have used in this paper.",
               "Explanation of some of the notations listed in is given as follows: 2. The value of angle(P1, P2) is defined as follows:",
               "Since angle(P1, P2) is defined based on CAD between P1 and P2 and has a better geometrical meaning than CAD, we use angle(P1, P2) in place of CAD in the following discussion.",
               "NNe(Q) is the nearest neighbor (i.e., the first nearest neighbor) of Q by EUD. Let OAB be the hyper-cone cone(Q, angle(Q, NNe(Q))) with the property that angle(Q, A) (QOA) equals angle(Q, B) (QOB). Note thatQOA andQOB correspond to the CAD between query Q and NNe(Q). It is clear that the rank of NNe(Q) in the NN query of Q by CAD is given by the number of data points within Hyper-cone OAB. The same observation can be extended to high-dimensional spaces, where the rank of NNe(Q) in the NN query of Q by CAD is determined by the number of data points within the hyper-cone cone(Q, angle(Q, NNe(Q))).",
               "Under the assumption of uniform data distribution and based on the unit space ?, the probability of a point existing in cone(Q, angle(Q, NNe(Q))) is equal to the volume"
          ],
          "paper_id": "23bf2330-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 3,
          "fromPaper": "Similarity between Euclidean and cosine angle distance for nearest neighbor queries"
     },
     {
          "head": {
               "text": "sphere with center C and radius r ssp(C, r))",
               "type": "modelling"
          },
          "paragraphs": [
               "Surface of a hyper-sphere with center C and radius r |P1, P2|e EUD between points P1 and P2 angle(P1, P2)",
               "Hyper-angle between points P1 and P2 with respect to O cone(P,)",
               "Hyper-cone with vertex O, axis P and angleNNe(Q) NN to a query point Q by EUD vol(R) (Hyper-)Volume of a hyper-region R 2. For a given query Q, the expected volume of cone(Q, angle(Q, NNe(Q))) can be obtained by integrating Equation 3 over all possible values of r as follows:",
               "(2) A good approximation of Equation 2 can be obtained by the Monte-Carlo method .",
               "To estimate the expected number of data points within the hyper-cone cone(Q, angle(Q, NNe(Q))), we first calculate its expected volume by the following steps:",
               "In Equation 4, the function pr(Q, r) is the density function of r for a given query point Q. Note that r is the EUD between Q and NNe(Q). Following , for a given query point Q, the distribution function of r, Pr(Q, r), is:",
               "1. Suppose that the EUD (|Q, NNe(Q)|e) between query point Q and NNe(Q) is r, the expected value of vol(cone(Q, angle(Q, NNe(Q)))) equals the average volume of all hyper-cones given by Q and points that are on the surface (ssp(Q, r)) of the hyper-sphere sp(Q, r). The situation is illustrated in a 2-dimensional data space in , where Q is the query point, P is one of the points that are on ssp(Q, r), and AOB is the corresponding hyper-cone.",
               "Note that N in Equation 5 represents the size of the dataset. The corresponding density function pr(Q, r) can be derived as follows:",
               "3. From Equation 4, for a given query Q, we can calculate the expected number of points in cone(Q, angle(Q, NNe(Q))) as Nv(Q). Thus the overall expected number of points in cone, i.e., the expected rank of NNe of NN query by CAD, can be computed by averaging over all possible Q in ?. Based on Equations 4 and 6, under the assumption of uniform data distribution, we obtain the following equation for a given N : From Equation 7, we have calculated the expected rank of NNe of NN query by CAD at different dimensions using N = 50, 000. As shown in , expected rank of NNe by CAD increases drastically from dimension 2 to dimension 4, which shows that NN query results between EUD and CAD become similar even at lower dimensions. Note that as dimension gets even higher, EUD and CAD eventually becomes less similar again. However, the rate of decrease "
          ],
          "paper_id": "23bf2330-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 4,
          "fromPaper": "Similarity between Euclidean and cosine angle distance for nearest neighbor queries"
     },
     {
          "head": {
               "text": "Table 2: Expected NN rank of NNe by CAD at different dimensions",
               "type": "modelling"
          },
          "paragraphs": [
               "of similarity is very slow. Within a range of high dimensions , the claim of the similarity between EUD and CAD is reasonable. Our experimental results have corroborated the results of our theoretical analysis. In the following sections, we will also show that when vectors are normalized by size or clustered, the NN query results of EUD and CAD are even more similar in high dimensional spaces.",
               "have done experiments to measure the similarity between EUD and CAD using the percentage of the same results (intersection) in the EUD answer set and CAD answer set (k-NN). Results of 10, 20, 100, 500, and 1000 NN queries are presented. If not specifically mentioned, experimental results presented in the following tables are obtained using datasets of 50,000 data points and 30 query points picked randomly from their corresponding datasets. shows experimental results based on random data. This section is divided into three subsections. The first subsection shows that the experimental results corroborate the results of our theoretical analysis. The second subsection shows the similarity between EUD and CAD with a different measure, i.e., the percentage of the same results (intersection) in the result sets of k nearest neighbor (k-NN) queries by EUD and CAD. The datasets used in this subsection include normalized as well as un-normalized data, uniformly distributed data, clustered data, and real image data. We summarize and discuss our experimental results in the third subsection."
          ],
          "paper_id": "23bf2330-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 5,
          "fromPaper": "Similarity between Euclidean and cosine angle distance for nearest neighbor queries"
     },
     {
          "head": {
               "text": "Table 3: Experimental results based on random data",
               "type": "experiment"
          },
          "paragraphs": [
               "As dimension gets higher than 8, more than 50 percent of the 10 NN query results of EUD and CAD are the same. The percentage of the intersection are even greater for larger k-NN queries from 20 NN to 1000 NN. Note that EUD and CAD eventually becomes less similar as dimension gets even higher (128). However, the rate of decrease of similarity is very slow. shows experimental results based on normalized"
          ],
          "paper_id": "23bf2330-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 6,
          "fromPaper": "Similarity between Euclidean and cosine angle distance for nearest neighbor queries"
     },
     {
          "head": {
               "n": "3.1",
               "text": "Comparison of experimental and theoretical results",
               "type": "experiment"
          },
          "paragraphs": [
               "The experiments are conducted using a dataset of 50,000 randomly generated data points. The average rank of NNe of NN query by CAD is computed based on 30 query points selected randomly from the dataset. Dimensions used in the comparison are 2, 4, 8, 16, 32, 64, and 128. shows the comparison of experimental results with the theoretical results. Allowing for some statistical random data. Normalization is an important process when vector model is applied for similarity queries. Its purpose is to normalize each element in a vector to be in the same range so that individual element gets the same weight when distance measures are applied. Depending on application, there are different methods for vector normalization such as those described in . In our experiment, vectors are normalized by their size, i.e., for each vector v =< e1, e2, . ",
               "precision error, shows that the results of theoretical analysis matches very well with those of the experiments. When dimension is low, the difference between EUD and CAD are very large. But when dimension gets higher, they become very similar. EUD and CAD become less similar again as dimension increases further. However, the rate of decrease of similarity is very slow."
          ],
          "paper_id": "23bf2330-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 7,
          "fromPaper": "Similarity between Euclidean and cosine angle distance for nearest neighbor queries"
     },
     {
          "head": {
               "n": "3.2",
               "text": "Experimental results of kNN queries",
               "type": "experiment"
          },
          "paragraphs": [
               "k-NN queries are often used in real world applications. Thus, for different datasets, such as real world data, we where 1id. shows that, after normalization, the EUD and CAD becomes very similar even for lower dimensions. shows experimental results based on clustered data with 50 clusters. Even for dimension as low as 4, the k-NN query results by EUD and CAD are very similar. We have also done experiments using datasets with different number of clusters. The results are similar to that of . decided solely by its semantic content, e.g., if the query image is a tiger, the answer image should also contain a tiger. Note that the purpose of this experiment is not to capture all possible semantics of the query image (e.g. tigers), but to show the effectiveness of the CAD-based method. The size of the answer set (relevant set) of each query image ranges from 4 to 40. We use recall and precision to measure the performance of each combining method. and show the average recalls and precisions of 10, 20, 50 and 100 NN query results. In , \"Rank Euclidean\"",
               "1 of more than 30,000 color images. It contains 64-dimensional QBIC color feature vectors. We can see from that, for real data, the EUD and CAD are also very similar.  "
          ],
          "paper_id": "23bf2330-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 8,
          "fromPaper": "Similarity between Euclidean and cosine angle distance for nearest neighbor queries"
     },
     {
          "head": {
               "n": "3.3",
               "text": "Discussion",
               "type": "experiment"
          },
          "paragraphs": [
               "The vector model is used for an approximate generalization of the real world objects. The definition of \"similar\" is subjective and depend on the way feature vectors are generated. Based on the above theoretical analysis and experimental results, we consider EUD and CAD very similar when applied to NN queries in high dimensional data spaces. We explain this phenomena based on the norm of the vectors. When all vectors have the same norm, the NN query results by EUD and CAD will be exactly the same. Based on the assumption of uniform distribution, as dimension gets higher, the variance of the norms of the vectors in the dataset becomes smaller. As the norms become similar, EUD and CAD also become similar. For clustered data and normalized data in high dimensional spaces, the norms of the vectors are even more similar which causes EUD and CAD to behave more similarly. "
          ],
          "paper_id": "23bf2330-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 9,
          "fromPaper": "Similarity between Euclidean and cosine angle distance for nearest neighbor queries"
     },
     {
          "head": {
               "n": "4.",
               "text": "EXPERIMENTAL RESULTS FOR COM-BINING FEATURES",
               "type": "experiment"
          },
          "paragraphs": [
               "is the rank based method using ranks of individual features by EUD. \"Gaussian\" is the distance value based method using Gaussian assumption . For \"Gaussian\", EUD values computed for individual features are normalized using the following equation:",
               "We have shown that when dimension is high, which is usually the case for a CBIR application, EUD and CAD are similar. EUD is widely used in CBIR. However, CAD has the unique property that the distance value is inherently normalized for a given feature. This makes combining semantically different features as easy as summing up the CAD values from different features. As an application for our analysis, we propose to use CAD measure instead of EUD for CBIR where multiple features are combined to create a single distance value. Experimental results for this analysis are presented in this section.",
               "We use an image database of 6344 color images of animals and natural scenes. Two image features, color and texture, are used for image retrieval. The color feature is a 64-dimensional vector generated by QBIC . The texture feature is a 24-dimensional vector generated using the algorithms proposed in . 18 images of animals are chosen from the database as the query images due to their clear semantic meaning. The answer set of each query image is"
          ],
          "paper_id": "23bf2330-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 10,
          "fromPaper": "Similarity between Euclidean and cosine angle distance for nearest neighbor queries"
     },
     {
          "head": {
               "text": "In Equation 9, d and d",
               "type": "experiment"
          },
          "paragraphs": [
               "are the original and normalized distance value, respectively. m andare the mean and standard deviation of pair-wise distances over all images in the database. Any value greater than 1 is considered as 1 in the experiments as described in . \"Angle\" is the distance value based method we proposed, which uses CAD directly for inter-feature normalization.",
               "Based on precision and recall, the performance of combining methods are similar, though \"Rank Euclidean\" is a little behind. As mentioned in , rank-based method may not be very effective since it does not directly use the distance value between the query and the retrieved image. The rank of retrieved images may give a false sense of similarity when actually the distance value may be very large. On the other hand, distance value based method using Gaussian assumption may not be effective if the distance distribution pattern among images in the database is not Gaussian. Another problem of this scheme is that it requires the mean and Angle Rank Euclidean If the database is large and changes dynamically, the cost to maintain such value may be expensive. Thus we believe our simple CAD value based method for combining features is better compared to the two methods mentioned above. Moreover, it will not affect the results much to replace EUD by CAD as we have shown in the previous sections. Besides the benefit of simplicity, the CAD based method also has another special property, i.e., the CAD favors (retrieves) vectors with relatively larger component values . This effect is illustrated in , which shows the results of a 20 NN query. The first image at the upper-left corner is the query image. Since the query image has dominant color components blue and brown, nearly all 20 images returned by the CAD based method (\"Angle\") has blue and brown as their dominant color components. On the other hand, the rank based method by EUD (\"Rank Euclidean\") only returns about 10 such images out of 20 images."
          ],
          "paper_id": "23bf2330-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 11,
          "fromPaper": "Similarity between Euclidean and cosine angle distance for nearest neighbor queries"
     },
     {
          "head": {
               "n": "5.",
               "text": "CONCLUSION",
               "type": "conclusion"
          },
          "paragraphs": [
               "Through our theoretical analysis and experimental results, we conclude that EUD and CAD are similar when applied to high dimensional NN queries. For normalized data and clustered data, EUD and CAD becomes even more similar. As an application of this inference, we use a simple CAD based method for combining features in CBIR. We have shown that the method we have proposed works no worse than some commonly used methods while possessing some favorable advantages.",
               "In future work, we plan to extend our geometrical model to analyze other distance measures, such as the Manhattan distance."
          ],
          "paper_id": "23bf2330-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 12,
          "fromPaper": "Similarity between Euclidean and cosine angle distance for nearest neighbor queries"
     }
]