[
     {
          "head": {
               "n": "0",
               "text": "abstract",
               "type": "abstract"
          },
          "paragraphs": [
               "As Web services become widespread, many complex applications require service composition to cope with high scalability and heterogeneity. Centralized Web service composition approaches are not sufficient as they always limit the scalability and stability of the systems. How to efficiently compose and adapt Web services under decentralized environments has become a critical issue, and important research question in Web service composition. In this paper, a stigmergic-based approach is proposed to model dynamic interactions among Web services, and handle some issues in service composition and adaptation. In the proposed approach, Web services and resources are considered as multiple agents. Stigmergic-based self-organization among agents are adopted to evolve and adapt Web service compositions. Experimental results indicate that by using this approach, service composition can be efficiently achieved, despite dealing with incomplete information and dynamic factors in decentralized environments."
          ],
          "paper_id": "241a3b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 0,
          "fromPaper": "Stigmergic Modeling for Web Service Composition and Adaptation"
     },
     {
          "head": {
               "n": "1",
               "text": "Introduction",
               "type": "introduction"
          },
          "paragraphs": [
               "In recent years, service composition and adaptation has drawn the interests of researchers in a number of fields. Generally, service composition is to fulfil users' requirements by combining services in different repositories. Those requirements can be functional or non-functional. The functional requirements are in relation to targeting the overall outcome concerning the the underway business process, while the non-functional requirements pertain to the quality of the composition as a whole in terms of availability, reliability, cost and response time. Service adaptation is to adjust service \"behaviors\" and/or composition strategies to adapt to the changes of users' requirements, QoS fluctuations and other prospective runtime dynamics.",
               "Although in the Web service domain, many standards have been developed and adopted for facilitating service composition, lack of supports for decentralized working environments is still a standing challenge and an obvious drawback of many existing composition approaches. Hence, efficient Web service applications need not only to be managed from a centralized perspective, but also to incorporate decentralized scenarios.",
               "Stigmergic interaction, exhibited by social insects to coordinate their activities, has recently inspired a vast number of computer science applications . In these works, intelligent components (i.e., agents) interact by leaving and sensing artificial pheromones (i.e., markers) in a virtual environment. Such pheromones can encode and describe application-specific information to be used to achieve specific tasks. From a general perspective, stigmergic interactions have two major advantages: (i) Stigmergic interactions are mediated by pheromones and are completely decoupled. This feature is suitable for open and dynamic environments. (ii) Stigmergic interaction naturally supports application-specific context awareness, in that pheromones provide agents with an application-specific representation of their operational environment (e.g., in ant foraging, pheromones provide a representation of the environment in terms of paths leading to food sources).",
               "In this paper, we propose a stigmergic-based approach for modeling Web service compositions and adaptations. The proposed approach exhibits the concept of decentralization, and allows Web services to compose and adapt in open decentralized environments. The rest of this paper is organized as follows. The principle and introduction of the stigmergic-based service composition and adaptation approach is introduced in Section 2. In Section 3, some experimental results are presented for evaluating the proposed approach. Section 4 gives a brief review of related work and discussions. Finally, the paper is concluded in Section 5."
          ],
          "paper_id": "241a3b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 1,
          "fromPaper": "Stigmergic Modeling for Web Service Composition and Adaptation"
     },
     {
          "head": {
               "n": "2",
               "text": "Stigmergic Service Composition and Adaptation",
               "type": "introduction"
          },
          "paragraphs": [
               "In this section, an approach named Stigmergic Service Composition and Adaptation is proposed to address the problem of Web service composition and adaptation in decentralized environments. The proposed approach is inspired by the concept of Digital Pheromone , which is a stigmergic-based mechanism for coordinating and controlling swarming objects. Examples from natural systems show that stigmergic systems can generate robust, complex, intelligent behaviors at the system level even when the individual agents only possess very limited or even no intelligence. In these systems, intelligence resides not in a single distinguished agent (as in centralized control) nor in each individual agent, but in the whole group of agents distributed in the environment ."
          ],
          "paper_id": "241a3b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 2,
          "fromPaper": "Stigmergic Modeling for Web Service Composition and Adaptation"
     },
     {
          "head": {
               "n": "2.1",
               "text": "Web Service Composition/Adaptation Modeling",
               "type": "modelling"
          },
          "paragraphs": [
               "In our approach, each Web service is envisaged as a service agent, and a Web service system can then be considered as a multi-agent system with a number of interactive service agents. These agents achieve collaborations and selforganizations via exchanging \"pheromone\" and performing several pheromone operations. A service is composed if a group of service agents can form an organization to collaborate. Definition 1: Service Agent. A Service Agent p i is defined as a tuple p i =< id, F >, where id is the identifier of the service agent, F is the pheromone store for facilitating composition and decentralized self-coordination (as detailed in Definition 2).",
               "Definition 2: Pheromone Store. A Pheromone Store F is a set of pheromone, i.e., F = {f 1 , f 2 , ..., f n }. Each pheromone flavor f j holds a scalar value which represents the trail of a certain service agent. Based upon user requirements, a service agent p i requests the composition of an abstract workflow r j such that r j = {r j1 , r j2 , ..., r jn }, where r ji represents a concrete service or a resource needs to composed for satisfying a single unit of functionality or a subtask. To this end, the requester service agent traverses a network of directly linked service agents, and look for suitable services and resources for constructing workflow r j . Once constructed, the requester service agent deposits/withdraws certain amount (i.e., Q fj ) of pheromone flavor f j into/from the digital pheromone stores of all provider service agents, which took part in this composition round. The decision of depositing or withdrawing depends on the quality of the provided service. Based upon the strength of the trail of this pheromone flavor f j , in future rounds, similar service requests will be guided towards the highest quality workflow quickly without the need to traverse the entire network again. Namely, even in open decentralized environments, a requester service agent can immediately make decisions based on the pheromone trail left by other requester service agents."
          ],
          "paper_id": "241a3b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 3,
          "fromPaper": "Stigmergic Modeling for Web Service Composition and Adaptation"
     },
     {
          "head": {
               "n": "2.2",
               "text": "Pheromone Operations",
               "type": "modelling"
          },
          "paragraphs": [
               "In this approach, we define three primary pheromone operations for coordinating service agents, and enabling them to achieve self-organizations.",
               "Pheromone Aggregation: A Digital Pheromone Q fj can be deposited and withdrawn from any service agent p i . Deposits of a certain flavor f j are added to the current amount of that flavor of pheromone s(Q fj , p i , t) located at that service agent p i and time t.",
               "Pheromone Evaporation: A Pheromone Evaporation is the operation wherein a pheromone flavor f j evaporates over time t. This operation will generate an Evaporation Factor E fj (0 < E fj1) to weaken obsolete information. E fj can be obtained via Equation 1:",
               "where trianglet(i) is the time difference between the current time and when f i has been left, andis the parameter to control the evaporation speed.",
               "Pheromone Propagation: A Pheromone Propagation G fj is the operation wherein a pheromone flavor f j propagates from a service agent p i to service agent p k based upon a neighborhood relation N where p kN (p i ) . The act of propagation causes pheromone gradients g(Q fj , p i , t) to be formed."
          ],
          "paper_id": "241a3b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 4,
          "fromPaper": "Stigmergic Modeling for Web Service Composition and Adaptation"
     },
     {
          "head": {
               "n": "2.3",
               "text": "Dynamic Coordination and Adaptation",
               "type": "modelling"
          },
          "paragraphs": [
               "The three operations introduced in the above subsection serve as a basis for the coordination mechanism. By using these operations, pheromone can be exchanged and circulated among distributed service agents. Furthermore, a service composition and adaptation algorithm (i.e., Algorithm 1) is designed to enable agents to learn the best composition path, and to adapt to the changing environment. The underlying proposed algorithm rests on two fundamental equations to enhance the self-organization behavior, i.e., Equation 2 and Equation 3. Let t represents an update cycle time, which is the time interval between propagation, pump auto-deposits, and evaporation of a certain flavor f j ; P = {p 1 , p 2 , ..., p n } represent a set of service agents; N : P ?P represents a neighbor relation between service agents; s(Q fj , p i , t) represents the strength of pheromone flavor f j at service agent p i and time t; d(Q fj , p i , t) represents the sum of external deposits of pheromone flavor f j within the interval (t ? 1, t] at service agent p i ; g(Q fj , p i , t) represents the propagated input of pheromone flavor f j at time t to service agent p i ; E fj(0, 1) represents the evaporation factor for flavor f j ; G fj(0, 1) represents the propagation factor for flavor f j ; T fj represents the threshold below which S(Q fj , p i , t) is set to zero.",
               "The evolution of the strength of a single pheromone flavor at a given service agent is defined in Equation 2:",
               "where E fj is the evaporation factor pheromone flavor f j (refer to Equation 1), 1?G fj calculates the amount remaining after propagation to neighboring service agents, s(Q fj , p i , t ? 1) represents the amount of pheromone flavor f j from the previous cycle, d(Q fj , p i , t) represents the total deposits made since the last update cycle (including pump auto-deposits) and g(Q fj , p i , t) represents the total pheromone flavor f j propagated in from all the neighbors of p i . Every service agent p i applies this equation to every pheromone flavor f j once during every update cycle.",
               "The propagation received from the neighboring service agents is described in Equation 3:",
               "In Equation 3, it can be found that each neighbor service agent",
               "propagates a portion of its pheromone to p i in each update cycle t. This portion depends on the parameter G fj and the total number of p k neighbors N (p k ). Using Equations 2 and 3, we can demonstrate several critical stability and convergence rules, including Local Stability, Propagated Stability and Global Stability.",
               "Rule 1: Local Stability. A Local Stability S l is the rule in which the strength of the output propagated from any set of service agents M ? P to their neighbors N ? P at t + 1 is strictly less than the strength of the aggregate input (external plus propagated) to those service agents at t. Rule 2: Propagated Stability. A Propagated Stability S p is the rule in which there exists a fixed upper limitto the aggregated sum of all propagated inputs at an arbitrary service agent p i if one-update cycle t and one-service agent p i external input is assumed.",
               "Rule 3: Global Stability. A Global Stability S g is the rule in which the pheromone strength s(Q fj , p i , t) in any place agent is bounded. If the pheromone strength drops below threshold T fj , it disappears from the pheromone store,",
               "The Stigmergic Service Composition and Adaptation can be represented by Algorithm 1."
          ],
          "paper_id": "241a3b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 5,
          "fromPaper": "Stigmergic Modeling for Web Service Composition and Adaptation"
     },
     {
          "head": {
               "n": "3.1",
               "text": "Experiment Setup",
               "type": "experiment"
          },
          "paragraphs": [
               "Three experiments have been conducted to assess the proposed Stigmergic Service Composition and Adaptation approach. The proposed approach runs in successive iterations till reaching a convergence point. The proposed approach converges to a near optimal solution once it receives the same approximate value of accumulative QoS for a number of successive iterations. Those accumulated QoS values are compared iteration by iteration and the difference is projected against a threshold. For our experiments, this threshold value is set to 0.0001, and the number of successive iterations is set to 100. The first experiment examines the effectiveness of the proposed approach in composing Web services under a decentralized environment. The second experiment explores the speed of composing Web services using the proposed approach under a decentralized environment, whereas the third experiment inspects the performance and the efficiency of the proposed approach related to the scale of the environment. All the three experiments have been conducted on 3.33 GHz Intel core 2 Duo PC with 3 GB of RAM."
          ],
          "paper_id": "241a3b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 6,
          "fromPaper": "Stigmergic Modeling for Web Service Composition and Adaptation"
     },
     {
          "head": {
               "n": "3.2",
               "text": "Result Analysis",
               "type": "experiment"
          },
          "paragraphs": [
               "The results of the three experiments are demonstrated and analyzed in details in the following three subsections, respectively.  shows the progression of the Qos values of the composed workflow using the proposed approach against those values obtained by centrally composing the same workflow using the centralized approaches, e.g., Critical Path Method (CPM). Those values are recorded on a 100-iteration basis. depicts the contrast between the QoS values obtained form the proposed approach against those values obtained from a centralized approach (y axis) and the corresponding number of iterations (x axis). As shown in , the centralized service composition approach shows a steady line with a QoS value of 177 regardless of the number of iterations. This is attributed to the assumption of a prior knowledge of the available Web services and their qualities, which is not the case in real world. On the other hand, the proposed Stigmergic Service Composition and Adaptation approach shows a progressive line representing an upward trend in the QoS values obtained as the number of iterations increases. Due to its decentralized nature, the proposed approach needs to run for a number of iterations before showing stability in results, which happens in our experiment when the number of iterations goes beyond 300. The best stable QoS obtained is 145, which shows 82% rate of effectiveness compared to the optimal value of 177 in a fully centralized approach. This result demonstrates a   shows a range of composition requests and the number of iterations to converge. depicts the relationship between the number of composition requests (x axis) and the corresponding number of iterations to converge (y axis). In , the trend line shows a downward movement describing a linear relationship. As the number of running composition requests increases, the number of iterations to converge to the composition goal decreases. This explains the benefit of the accumulated pheromone trails left by previous service agents working for the same composition goal. The service agents in new iterations have higher probabilities to make benefit of the pheromone flavor trails left by previous service agents used by other composition requests for the same composition goal, thus to follow their trail to fulfill that goal faster. As the number of running composition requests increases, the pheromone trails left by service agents employed by those composition requests become more strengthened and thus the potentiality to guide new service agents working towards the same composition goal increases.  shows a range of environment scales with the number of iterations to converge. Figure 3 depicts the relationship between the scale of the environment in terms of the number of service agents (x axis) and the corresponding number of iterations needed to converge (y axis). The trend line shows an upward movement describing a linear relationship. This linear relationship proves the efficiency of the proposed approach in composing and adapting Web services in open large scale environments, e.g., the Internet. As the scale of the environment increases, the number of iterations to converge increases linearly not exponentially accordingly. This shows the robustness of the proposed approach under large scale service environments, e.g., the Internet."
          ],
          "paper_id": "241a3b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 7,
          "fromPaper": "Stigmergic Modeling for Web Service Composition and Adaptation"
     },
     {
          "head": {
               "n": "4",
               "text": "Related Work and Discussions",
               "type": "relatedwork"
          },
          "paragraphs": [
               "Various approaches have been proposed to handle the problem of dynamic composition of Web services . However, most of these approaches are based on a centralized architecture. In these models, a service requester submits requests to a centralized directory, and the directory decides which service on the list should be returned to the requester. This assumption on centralized control becomes impractical in scenarios with dynamic arrivals and departures of service providers, which require frequent updates of the central entities, resulting in a large system overhead. In contrast, our proposed approach can work under a fully decentralized environment where no central directory exists. The service agent has to find other matching service agents during run time based on neighborhood relationships and track for their QoS by exchanging pheromone flavors. This enables our approach to adapt effectively under dynamic environments accounting for the arrival and departure of service providers at any time.",
               "Some approaches exploiting distributed techniques have already been proposed in the literature . As the first step towards decentralization of service composition, these approaches introduced a distributed directory of services. For example, proposed a hierarchical directory in which the resource-poor devices depend on the resource-rich devices to support service discovery and composition. However, this approach is not fully decentralized. There exist nodes that perform the task of service discovery and composition for other nodes. In contrast, our approach is fully decentralized as a set of service agents cooperate together coherently to fulfill the composition request.",
               "Another important approach was proposed by Basu et al. in which a composite service is represented as a task-graph and subtrees of the graph are computed in a distributed manner. However, this approach assumes that a service requestor is one of the services and the approach relies on this node to coordinate service composition. A similar approach was proposed by Drogoul , whose work is different from Basu et al. in terms of the way of electing the coordinator. For each composite request, a coordinator is selected from within a set of nodes. The service requestor delegates the responsibility of composition to the elected coordinator. Both approaches exhibit some limitations. Although service discovery is performed in a distributed manner, service composition still relies on a coordinator assigned for performing the task of combining and invoking services. Also, both of the two approaches assume the direct interaction between nodes responsible for service discovery and service composition. In contrast, our approach overcomes those limitations as follows. In our approach, there is no special entity to manage service composition process; (2) Service providers communicate only with their local neighbors where no service provider knows the full global information; and (3) Our approach adopts an indirect interaction scheme where the set of service agents responsible for service composition and adaptation can interact with each other through the environment by exchanging pheromone trails."
          ],
          "paper_id": "241a3b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 8,
          "fromPaper": "Stigmergic Modeling for Web Service Composition and Adaptation"
     },
     {
          "head": {
               "n": "5",
               "text": "Conclusion",
               "type": "conclusion"
          },
          "paragraphs": [
               "This paper focuses on modeling Web service composition and adaptation under decentralized dynamic environments. The paper presented a service composition and adaptation approach using stigmergic interactions to actively adapt to dynamic changes in complex decentralized Web service composition environments.",
               "The proposed approach is able to adapt actively to QoS fluctuations considering both potential degradation and emergence of QoS values. The experimental results have shown the effectiveness of the proposed approach in highly complex and dynamic Web service composition environments. The future work is set to investigate the performance of the proposed approach in real world applications and to study the potentiality of building a web service trust model using the proposed approach."
          ],
          "paper_id": "241a3b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 9,
          "fromPaper": "Stigmergic Modeling for Web Service Composition and Adaptation"
     }
]