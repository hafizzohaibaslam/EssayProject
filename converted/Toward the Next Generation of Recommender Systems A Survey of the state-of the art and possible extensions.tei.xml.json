[
     {
          "head": {
               "n": "0",
               "text": "abstract",
               "type": "abstract"
          },
          "paragraphs": [
               "This paper presents an overview of the field of recommender systems and describes the current generation of recommendation methods that are usually classified into the following three main categories: content-based, collaborative, and hybrid recommendation approaches. This paper also describes various limitations of current recommendation methods and discusses possible extensions that can improve recommendation capabilities and make recommender systems applicable to an even broader range of applications. These extensions include, among others, an improvement of understanding of users and items, incorporation of the contextual information into the recommendation process, support for multcriteria ratings, and a provision of more flexible and less intrusive types of recommendations."
          ],
          "paper_id": "24685b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 0,
          "fromPaper": "Toward the Next Generation of Recommender Systems: A Survey of the State-of-the-Art and Possible Extensions"
     },
     {
          "head": {
               "text": "Toward the Next Generation of Recommender Systems: A Survey of the State-of-the-Art and Possible Extensions",
               "type": "abstract"
          },
          "paragraphs": [
               "Gediminas Adomavicius, Member, IEEE, and Alexander Tuzhilin, Member, IEEE",
               "Abstract-This paper presents an overview of the field of recommender systems and describes the current generation of recommendation methods that are usually classified into the following three main categories: content-based, collaborative, and hybrid recommendation approaches. This paper also describes various limitations of current recommendation methods and discusses possible extensions that can improve recommendation capabilities and make recommender systems applicable to an even broader range of applications. These extensions include, among others, an improvement of understanding of users and items, incorporation of the contextual information into the recommendation process, support for multcriteria ratings, and a provision of more flexible and less intrusive types of recommendations.",
               "Index Terms-Recommender systems, collaborative filtering, rating estimation methods, extensions to recommender systems."
          ],
          "paper_id": "24685b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 1,
          "fromPaper": "Toward the Next Generation of Recommender Systems: A Survey of the State-of-the-Art and Possible Extensions"
     },
     {
          "head": {
               "n": "1",
               "text": "INTRODUCTION",
               "type": "introduction"
          },
          "paragraphs": [
               "R ECOMMENDER systems have become an important research area since the appearance of the first papers on collaborative filtering in the mid-1990s , , . There has been much work done both in the industry and academia on developing new approaches to recommender systems over the last decade. The interest in this area still remains high because it constitutes a problem-rich research area and because of the abundance of practical applications that help users to deal with information overload and provide personalized recommendations, content, and services to them. Examples of such applications include recommending books, CDs, and other products at Amazon.com , movies by MovieLens , and news at VERSIFI Technologies (formerly AdaptiveInfo.com) . Moreover, some of the vendors have incorporated recommendation capabilities into their commerce servers .",
               "However, despite all of these advances, the current generation of recommender systems still requires further improvements to make recommendation methods more effective and applicable to an even broader range of real-life applications, including recommending vacations, certain types of financial services to investors, and products to purchase in a store made by a \"smart\" shopping cart . These improvements include better methods for representing user behavior and the information about the items to be recommended, more advanced recommendation modeling methods, incorporation of various contextual information into the recommendation process, utilization of multcriteria ratings, development of less intrusive and more flexible recommendation methods that also rely on the measures that more effectively determine performance of recommender systems.",
               "In this paper, we describe various ways to extend the capabilities of recommender systems. However, before doing this, we first present a comprehensive survey of the state-of-the-art in recommender systems in Section 2. Then, we identify various limitations of the current generation of recommendation methods and discuss some initial approaches to extending their capabilities in Section 3."
          ],
          "paper_id": "24685b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 2,
          "fromPaper": "Toward the Next Generation of Recommender Systems: A Survey of the State-of-the-Art and Possible Extensions"
     },
     {
          "head": {
               "n": "2",
               "text": "THE SURVEY OF RECOMMENDER SYSTEMS",
               "type": "introduction"
          },
          "paragraphs": [
               "Although the roots of recommender systems can be traced back to the extensive work in cognitive science , approximation theory , information retrieval , forecasting theories , and also have links to management science and to consumer choice modeling in marketing , recommender systems emerged as an independent research area in the mid-1990s when researchers started focusing on recommendation problems that explicitly rely on the ratings structure. In its most common formulation, the recommendation problem is reduced to the problem of estimating ratings for the items that have not been seen by a user. Intuitively, this estimation is usually based on the ratings given by this user to other items and on some other information that will be formally described below. Once we can estimate ratings for the yet unrated items, we can recommend to the user the item(s) with the highest estimated rating(s).",
               "More formally, the recommendation problem can be formulated as follows: Let C be the set of all users and let S be the set of all possible items that can be recommended, such as books, movies, or restaurants. "
          ],
          "paper_id": "24685b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 3,
          "fromPaper": "Toward the Next Generation of Recommender Systems: A Survey of the State-of-the-Art and Possible Extensions"
     },
     {
          "head": {
               "text": "TABLE 1 A Fragment of a Rating Matrix for a Movie Recommender System",
               "type": "introduction"
          },
          "paragraphs": [
               "possible items can be very large, ranging in hundreds of thousands or even millions of items in some applications, such as recommending books or CDs. Similarly, the user space can also be very large-millions in some cases. Let u be a utility function that measures the usefulness of item s to user c, i.e., u : C ? S ! R, where R is a totally ordered set (e.g., nonnegative integers or real numbers within a certain range). Then, for each user c 2 C, we want to choose such item s 0 2 S that maximizes the user's utility. More formally: ",
               "In recommender systems, the utility of an item is usually represented by a rating, which indicates how a particular user liked a particular item, e.g., John Doe gave the movie \"Harry Potter\" the rating of 7 (out of 10). However, as indicated earlier, in general, utility can be an arbitrary function, including a profit function. Depending on the application, utility u can either be specified by the user, as is often done for the user-defined ratings, or is computed by the application, as can be the case for a profit-based utility function.",
               "Each element of the user space C can be defined with a profile that includes various user characteristics, such as age, gender, income, marital status, etc. In the simplest case, the profile can contain only a single (unique) element, such as User ID. Similarly, each element of the item space S is defined with a set of characteristics. For example, in a movie recommendation application, where S is a collection of movies, each movie can be represented not only by its ID, but also by its title, genre, director, year of release, leading actors, etc.",
               "The central problem of recommender systems lies in that utility u is usually not defined on the whole C ? S space, but only on some subset of it. This means u needs to be extrapolated to the whole space C ? S. In recommender systems, utility is typically represented by ratings and is initially defined only on the items previously rated by the users. For example, in a movie recommendation application (such as the one at MovieLens.org), users initially rate some subset of movies that they have already seen. An example of a user-item rating matrix for a movie recommendation application is presented in , where ratings are specified on the scale of 1 to 5. The \"\" symbol for some of the ratings in means that the users have not rated the corresponding movies. Therefore, the recommendation engine should be able to estimate (predict) the ratings of the nonrated movie/user combinations and issue appropriate recommendations based on these predictions.",
               "Extrapolations from known to unknown ratings are usually done by 1) specifying heuristics that define the utility function and empirically validating its performance and 2) estimating the utility function that optimizes certain performance criterion, such as the mean square error.",
               "Once the unknown ratings are estimated, actual recommendations of an item to a user are made by selecting the highest rating among all the estimated ratings for that user, according to . Alternatively, we can recommend the N best items to a user or a set of users to an item.",
               "The new ratings of the not-yet-rated items can be estimated in many different ways using methods from machine learning, approximation theory, and various heuristics. Recommender systems are usually classified according to their approach to rating estimation and, in the next section, we will present such a classification that was proposed in the literature and will provide a survey of different types of recommender systems. The commonly accepted formulation of the recommendation problem was first stated in , , and this problem has been studied extensively since then. Moreover, recommender systems are usually classified into the following categories, based on how recommendations are made :",
               ". Content-based recommendations: The user will be recommended items similar to the ones the user preferred in the past; . Collaborative recommendations: The user will be recommended items that people with similar tastes and preferences liked in the past; . Hybrid approaches: These methods combine collaborative and content-based methods. In addition to recommender systems that predict the absolute values of ratings that individual users would give to the yet unseen items (as discussed above), there has been work done on preference-based filtering, i.e., predicting the relative preferences of users , , , . For example, in a movie recommendation application, preference-based filtering techniques would focus on predicting the correct relative order of the movies, rather than their individual ratings. However, this paper focuses primarily on rating-based recommenders since it constitutes the most popular approach to recommender systems."
          ],
          "paper_id": "24685b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 4,
          "fromPaper": "Toward the Next Generation of Recommender Systems: A Survey of the State-of-the-Art and Possible Extensions"
     },
     {
          "head": {
               "n": "2.1",
               "text": "Content-Based Methods",
               "type": "introduction"
          },
          "paragraphs": [
               "In content-based recommendation methods, the utility u?c; s? of item s for user c is estimated based on the utilities u?c; s i ? assigned by user c to items s i 2 S that are \"similar\" to item s. For example, in a movie recommendation application, in order to recommend movies to user c, the content-based recommender system tries to understand the commonalities among the movies user c has rated highly in the past (specific actors, directors, genres, subject matter, etc.). Then, only the movies that have a high degree of similarity to whatever the user's preferences are would be recommended.",
               "The content-based approach to recommendation has its roots in information retrieval , and information filtering research. Because of the significant and early advancements made by the information retrieval and filtering communities and because of the importance of several text-based applications, many current content-based systems focus on recommending items containing textual information, such as documents, Web sites (URLs), and Usenet news messages. The improvement over the traditional information retrieval approaches comes from the use of user profiles that contain information about users' tastes, preferences, and needs. The profiling information can be elicited from users explicitly, e.g., through questionnaires, or implicitly-learned from their transactional behavior over time.",
               "More formally, let Content?s? be an item profile, i.e., a set of attributes characterizing item s. It is usually computed by extracting a set of features from item s (its content) and is used to determine the appropriateness of the item for recommendation purposes. Since, as mentioned earlier, content-based systems are designed mostly to recommend text-based items, the content in these systems is usually described with keywords. For example, a content-based component of the Fab system , which recommends Web pages to users, represents Web page content with the 100 most important words. Similarly, the Syskill & Webert system represents documents with the 128 most informative words. The \"importance\" (or \"informativeness\") of word k j in document d j is determined with some weighting measure w ij that can be defined in several different ways.",
               "One of the best-known measures for specifying keyword weights in Information Retrieval is the term frequency/inverse document frequency (TF-IDF) measure that is defined as follows: Assume that N is the total number of documents that can be recommended to users and that keyword k j appears in n i of them. Moreover, assume that f i;j is the number of times keyword k i appears in document d j . Then, T F i;j , the term frequency (or normalized frequency) of keyword k i in document d j , is defined as and the content of document d j is defined as",
               "As stated earlier, content-based systems recommend items similar to those that a user liked in the past , , . In particular, various candidate items are compared with items previously rated by the user and the bestmatching item(s) are recommended. More formally, let ContentBasedP rofile?c? be the profile of user c containing tastes and preferences of this user. These profiles are obtained by analyzing the content of the items previously seen and rated by the user and are usually constructed using keyword analysis techniques from information retrieval. For example, ContentBasedP rofile?c? can be defined as a vector of weights ?w c1 ; . . . ; w ck ?, where each weight w ci denotes the importance of keyword k i to user c and can be computed from individually rated content vectors using a variety of techniques. For example, some averaging approach, such as Rocchio algorithm , can be used to compute ContentBasedP rofile?c? as an \"average\" vector from an individual content vectors , . On the other hand, uses a Bayesian classifier in order to estimate the probability that a document is liked. The Winnow algorithm has also been shown to work well for this purpose, especially in the situations where there are many possible features .",
               "In content-based systems, the utility function u?c; s? is usually defined as:",
               "u?c; s? ? score?ContentBasedP rofile?c?; Content?s??: ?5?",
               "Using the above-mentioned information retrieval-based paradigm of recommending Web pages, Web site URLs, or Usenet news messages, both ContentBasedP rofile?c? of user c and Content?s? of document s can be represented as TF-IDF vectors ~ w w c and ~ w w s of keyword weights. Moreover, utility function u?c; s? is usually represented in the information retrieval literature by some scoring heuristic defined in terms of vectors ~ w w c and ~ w w s , such as the cosine similarity measure , :",
               "where the maximum is computed over the frequencies f z;j of all keywords k z that appear in the document d j . However, keywords that appear in many documents are not useful in distinguishing between a relevant document and a nonrelevant one. Therefore, the measure of inverse document frequency ?IDF i ? is often used in combination with simple term frequency ?T F i;j ?. The inverse document frequency for keyword k i is usually defined as",
               "Then, the TF-IDF weight for keyword k i in document d j is defined as",
               "where K is the total number of keywords in the system.",
               "For example, if user c reads many online articles on the topic of bioinformatics, then content-based recommendation techniques will be able to recommend other bioinformatics articles to user c. This is the case because these articles will have more bioinformatics-related terms (e.g., \"genome,\" \"sequencing,\" \"proteomics\") than articles on other topics and, therefore, ContentBasedP rofile?c?, as defined by vector ~ w w c , will represent such terms k i with high weights w ic . Consequently, a recommender system using the cosine or a related similarity measure will assign higher utility u?c; s? to those articles s that have highweighted bioinformatics terms in ~ w w s and lower utility to the ones where bioinformatics terms are weighted less.",
               "Besides the traditional heuristics that are based mostly on information retrieval methods, other techniques for content-based recommendation have also been used, such as Bayesian classifiers , and various machine learning techniques, including clustering, decision trees, and artificial neural networks . These techniques differ from information retrieval-based approaches in that they calculate utility predictions based not on a heuristic formula, such as a cosine similarity measure, but rather are based on a model learned from the underlying data using statistical learning and machine learning techniques. For example, based on a set of Web pages that were rated as \"relevant\" or \"irrelevant\" by the user, uses the naive Bayesian classifier to classify unrated Web pages. More specifically, the naive Bayesian classifier is used to estimate the following probability that page p j belongs to a certain class C i (e.g., relevant or irrelevant) given the set of keywords k 1;j ; . . . ; k n;j on that page: features from text documents, some other domains have an inherent problem with automatic feature extraction. For example, automatic feature extraction methods are much harder to apply to multimedia data, e.g., graphical images, audio streams, and video streams. Moreover, it is often not practical to assign attributes by hand due to limitations of resources .",
               "Another problem with limited content analysis is that, if two different items are represented by the same set of features, they are indistinguishable. Therefore, since textbased documents are usually represented by their most important keywords, content-based systems cannot distinguish between a well-written article and a badly written one, if they happen to use the same terms ."
          ],
          "paper_id": "24685b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 5,
          "fromPaper": "Toward the Next Generation of Recommender Systems: A Survey of the State-of-the-Art and Possible Extensions"
     },
     {
          "head": {
               "n": "2.1.2",
               "text": "Overspecialization",
               "type": "introduction"
          },
          "paragraphs": [
               "Moreover, uses the assumption that keywords are independent and, therefore, the above probability is proportional to",
               "x While the keyword independence assumption does not necessarily apply in many applications, experimental results demonstrate that na?vena?ve Bayesian classifiers still produce high classification accuracy . Furthermore, both P ?k x;j jC i ? and P ?C i ? can be estimated from the underlying training data. Therefore, for each page p j , the probability P ?C i jk 1;j & . . . &k n;j ? is computed for each class C i and page p j is assigned to class C i having the highest probability .",
               "While not explicitly dealing with providing recommendations, the text retrieval community has contributed several techniques that are being used in content-based recommender systems. One example of such a technique would be the research on adaptive filtering , , which focuses on becoming more accurate at identifying relevant documents incrementally by observing the documents one-by-one in a continuous document stream. Another example would be the work on threshold setting , , which focuses on determining the extent to which documents should match a given query in order to be relevant to the user. Other text retrieval methods are described in and can also be found in the proceedings of the Text Retrieval Conference (TREC) (http://trec.nist.gov).",
               "As was observed in , , content-based recommender systems have several limitations that are described in the rest of this section.",
               "When the system can only recommend items that score highly against a user's profile, the user is limited to being recommended items that are similar to those already rated. For example, a person with no experience with Greek cuisine would never receive a recommendation for even the greatest Greek restaurant in town. This problem, which has also been studied in other domains, is often addressed by introducing some randomness. For example, the use of genetic algorithms has been proposed as a possible solution in the context of information filtering . In addition, the problem with overspecialization is not only that the content-based systems cannot recommend items that are different from anything the user has seen before. In certain cases, items should not be recommended if they are too similar to something the user has already seen, such as a different news article describing the same event. Therefore, some content-based recommender systems, such as DailyLearner , filter out items not only if they are too different from the user's preferences, but also if they are too similar to something the user has seen before. Furthermore, Zhang et al. provide a set of five redundancy measures to evaluate whether a document that is deemed to be relevant contains some novel information as well. In summary, the diversity of recommendations is often a desirable feature in recommender systems. Ideally, the user should be presented with a range of options and not with a homogeneous set of alternatives. For example, it is not necessarily a good idea to recommend all movies by Woody Allen to a user who liked one of them."
          ],
          "paper_id": "24685b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 6,
          "fromPaper": "Toward the Next Generation of Recommender Systems: A Survey of the State-of-the-Art and Possible Extensions"
     },
     {
          "head": {
               "n": "2.1.3",
               "text": "New User Problem",
               "type": "introduction"
          },
          "paragraphs": [
               "The user has to rate a sufficient number of items before a content-based recommender system can really understand the user's preferences and present the user with reliable recommendations. Therefore, a new user, having very few ratings, would not be able to get accurate recommendations."
          ],
          "paper_id": "24685b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 7,
          "fromPaper": "Toward the Next Generation of Recommender Systems: A Survey of the State-of-the-Art and Possible Extensions"
     },
     {
          "head": {
               "n": "2.2",
               "text": "Collaborative Methods",
               "type": "introduction"
          },
          "paragraphs": [
               "Content-based techniques are limited by the features that are explicitly associated with the objects that these systems recommend. Therefore, in order to have a sufficient set of features, the content must either be in a form that can be parsed automatically by a computer (e.g., text) or the features should be assigned to items manually. While information retrieval techniques work well in extracting Unlike content-based recommendation methods, collaborative recommender systems (or collaborative filtering systems) try to predict the utility of items for a particular user based on the items previously rated by other users. More formally, the utility u?c; s? of item s for user c is estimated based on the utilities u?c j ; s? assigned to item s by those users c j 2 C who are \"similar\" to user c. For example, in a movie recommendation application, in order to recommend movies to user c, the collaborative recommender system tries to find the \"peers\" of user c, i.e., other users that have similar tastes in movies (rate the same movies similarly). Then, only the movies that are most liked by the \"peers\" of user c would be recommended.",
               "There have been many collaborative systems developed in the academia and the industry. It can be argued that the Grundy system was the first recommender system, which proposed using stereotypes as a mechanism for building models of users based on a limited amount of information on each individual user. Using stereotypes, the Grundy system would build individual user models and use them to recommend relevant books to each user. Later on, the Tapestry system relied on each user to identify like-minded users manually . , , Video Recommender , and were the first systems to use collaborative filtering algorithms to automate prediction. Other examples of collaborative recommender systems include the book recommendation system from Amazon. com, the PHOAKS system that helps people find relevant information on the WWW , and the Jester system that recommends jokes .",
               "According to , algorithms for collaborative recommendations can be grouped into two general classes: memory-based(or heuristic-based) and model-based.",
               "Memory-based algorithms , , , ,essentially are heuristics that make rating predictions based on the entire collection of previously rated items by the users. That is, the value of the unknown rating r c;s for user c and item s is usually computed as an aggregate of the ratings of some other (usually, the N most similar) users for the same item s:",
               "where ^ C C denotes the set of N users that are the most similar to user c and who have rated item s (N can range anywhere from 1 to the number of all users). Some examples of the aggregation function are: sim?c; c 0 ?, is essentially a distance measure and is used as a weight, i.e., the more similar users c and c 0 are, the more weight rating r c 0 ;s will carry in the prediction of r c;s . Note that sim?x; y? is a heuristic artifact that is introduced in order to be able to differentiate between levels of user similarity (i.e., to be able to find a set of \"closest peers\" or \"nearest neighbors\" for each user) and, at the same time, simplify the rating estimation procedure. As shown in (10b), different recommendation applications can use their own user similarity measure as long as the calculations are normalized using the normalizing factor k, as shown above. The two most commonly used similarity measures will be described below. One problem with using the weighted sum, as in (10b), is that it does not take into account the fact that different users may use the rating scale differently. The adjusted weighted sum, shown in (10c), has been widely used to address this limitation. In this approach, instead of using the absolute values of ratings, the weighted sum uses their deviations from the average rating of the corresponding user. Another way to overcome the differing uses of the rating scale is to deploy preference-based filtering , , , , which focuses on predicting the relative preferences of users instead of absolute rating values, as was pointed out earlier in Section 2.",
               "Various approaches have been used to compute the similarity sim?c; c 0 ? between users in collaborative recommender systems. In most of these approaches, the similarity between two users is based on their ratings of items that both users have rated. The two most popular approaches are correlation and cosine-based. To present them, let S xy be the set of all items corated by both users x and y, i.e., S xy ? fs 2 Sjr x;s 6 ? & r y;s 6 ? g. In collaborative recommender systems, S xy is used mainly as an intermediate result for calculating the \"nearest neighbors\" of user x and is often computed in a straightforward manner, i.e., by computing the intersection of sets S x and S y . However, some methods, such as the graph-theoretic approach to collaborative filtering , can determine the nearest neighbors of x without computing S xy for all users y. In the correlation-based approach, the Pearson correlation coefficient is used to measure the similarity , :",
               "?10? ?r x;s ? \" r r x ??r y;s ? \" r r y ? ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi ffi P",
               "where multiplier k serves as a normalizing factor and is usually selected as k ? 1 P c 0 2 ^ C C jsim?c; c 0 ?j, and where the average rating of user c, \" r r c , in (10c) is defined as 1",
               "In the cosine-based approach , , the two users x and y are treated as two vectors in m-dimensional space, where m ? jS xy j. Then, the similarity between two vectors can be measured by computing the cosine of the angle between them: r ;",
               "In the simplest case, the aggregation can be a simple average, as defined by (10a). However, the most common aggregation approach is to use the weighted sum, shown in (10b ",
               "where ~ x x ? ~ y y denotes the dot-product between the vectors ~ x x and ~ y y. Still another approach to measuring similarity between users uses the mean squared difference measure and is described in . Note that different recommender systems may take different approaches in order to implement the user similarity calculations and rating estimations as efficiently as possible. One common strategy is to calculate all user similarities sim?x; y? (including the calculation of S xy ) in advance and recalculate them only once in a while (since the network of peers usually does not change dramatically in a short time). Then, whenever the user asks for a recommendation, the ratings can be efficiently calculated on demand using precomputed similarities.",
               "Note that both the content-based and the collaborative approaches use the same cosine measure from information retrieval literature. However, in content-based recommender systems, it is used to measure the similarity between vectors of TF-IDF weights, whereas, in collaborative systems, it measures the similarity between vectors of the actual user-specified ratings.",
               "Many performance-improving modifications, such as default voting, inverse user frequency, case amplification , and weighted-majority prediction , , have been proposed as extensions to these standard correlation-based and cosine-based techniques. For example, the default voting is an extension to the memory-based approaches described above. It was observed that, whenever there are relatively few user-specified ratings, these methods would not work well in computing the similarity between users x and y since the similarity measure is based on the intersection of the itemsets, i.e., sets of items rated by both users x and y. It was empirically shown that the rating prediction accuracy could improve if we assume some default rating value for the missing ratings .",
               "Also, while the above techniques traditionally have been used to compute similarities between users, Sarwar et al. proposed using the same correlation-based and cosinebased techniques to compute similarities between items instead and obtain the ratings from them. This idea has been further extended in for the top-N item recommendations. In addition, , present empirical evidence that item-based algorithms can provide better computational performance than traditional user-based collaborative methods while, at the same time, providing comparable or better quality than the best available userbased algorithms.",
               "In contrast to memory-based methods, model-based algorithms , , , , , , , use the collection of ratings to learn a model, which is then used to make rating predictions. For example, proposes a probabilistic approach to collaborative filtering, where the unknown ratings are calculated as",
               "and it is assumed that rating values are integers between 0 and n and the probability expression is the probability that user c will give a particular rating to item s given that user's ratings of the previously rated items. To estimate this probability, proposes two alternative probabilistic models: cluster models and Bayesian networks. In the first model, like-minded users are clustered into classes. Given the user's class membership, the user ratings are assumed to be independent, i.e., the model structure is that of a naive Bayesian model. The number of classes and the parameters of the model are learned from the data. The second model represents each item in the domain as a node in a Bayesian network, where the states of each node correspond to the possible rating values for each item. Both the structure of the network and the conditional probabilities are learned from the data. One limitation of this approach is that each user can be clustered into a single cluster, whereas some recommendation applications may benefit from the ability to cluster users into several categories at once. For example, in a book recommendation application, a user may be interested in one topic (e.g., programming) for work purposes and a completely different topic (e.g., fishing) for leisure. Moreover, proposed a collaborative filtering method in a machine learning framework, where various machine learning techniques (such as artificial neural networks) coupled with feature extraction techniques (such as singular value decomposition-an algebraic technique for reducing dimensionality of matrices) can be used. Both and compare their respective model-based approaches with standard memory-based approaches and report that, in some applications, model-based methods outperform memory-based approaches in terms of accuracy of recommendations. However, the comparison in both cases is purely empirical and no underlying theoretical evidence supporting this claim is provided.",
               "There have been several other model-based collaborative recommendation approaches proposed in the literature. A statistical model for collaborative filtering was proposed in , and several different algorithms for estimating the model parameters were compared, including K-means clustering and Gibbs sampling. Other collaborative filtering methods include a Bayesian model , a probabilistic relational model , a linear regression , and a maximum entropy model . More recently, a significant amount of research has been done in trying to model the recommendation process using more complex probabilistic models. For instance, Shani et al. view the recommendation process as a sequential decision problem and propose using Markov decision processes (a well-known stochastic technique for modeling sequential decisions) for generating recommendations. Other probabilistic modeling techniques for recommender systems include probabilistic latent semantic analysis , and a combination of multinomial mixture and aspect models using generative semantics of Latent Dirichlet Allocation . Similarly, Si and Jin also use probabilistic latent semantic analysis to propose a flexible mixture model that allows modeling the classes of users and items explicitly with two sets of latent variables. Furthermore, use a simple probabilistic model to demonstrate that collaborative filtering is valuable with relatively little data on each user, and that, in certain restricted settings, simple collaborative filtering algorithms are almost as effective as the best possible algorithms in terms of utility.",
               "As in the case of content-based techniques, the main difference between collaborative model-based techniques and heuristic-based approaches is that the model-based techniques calculate utility (rating) predictions based not on some ad hoc heuristic rules, but, rather, based on a model learned from the underlying data using statistical and machine learning techniques. A method combining both memory-based and model-based approaches was proposed in , where it was empirically demonstrated that the use of this combined approach can provide better recommendations than pure memory-based and model-based collaborative approaches.",
               "A different approach to improving the performance of existing collaborative filtering algorithms was taken in , where the input set of user-specified ratings is carefully selected using several techniques that exclude noise, redundancy, and exploit the sparsity of the ratings' data. The empirical results demonstrate the increase in accuracy and efficiency for model-based collaborative filtering algorithms. It is also suggested that the proposed input selection techniques may help the model-based algorithms to address the problem of learning from large databases . Furthermore, among the latest developments, proposes a probabilistic approach to collaborative filtering that constitutes yet another way to combine the memory-based and model-based techniques. In particular, proposes 1) using an active learning approach to learn the probabilistic model of each user's preferences and 2) using the stored user profiles in a mixture model to calculate recommendations. The latter aspect of the proposed approach deploys some of the ideas used in traditional memory-based algorithms.",
               "The pure collaborative recommender systems do not have some of the shortcomings that content-based systems have. In particular, since collaborative systems use other users' recommendations (ratings), they can deal with any kind of content and recommend any items, even the ones that are dissimilar to those seen in the past. However, collaborative systems have their own limitations , , as described below.",
               "can also be addressed using hybrid recommendation approaches, described in the next section."
          ],
          "paper_id": "24685b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 8,
          "fromPaper": "Toward the Next Generation of Recommender Systems: A Survey of the State-of-the-Art and Possible Extensions"
     },
     {
          "head": {
               "n": "2.2.1",
               "text": "New User Problem",
               "type": "introduction"
          },
          "paragraphs": [
               "In any recommender system, the number of ratings already obtained is usually very small compared to the number of ratings that need to be predicted. Effective prediction of ratings from a small number of examples is important. Also, the success of the collaborative recommender system depends on the availability of a critical mass of users. For example, in the movie recommendation system, there may be many movies that have been rated by only few people and these movies would be recommended very rarely, even if those few users gave high ratings to them. Also, for the user whose tastes are unusual compared to the rest of the population, there will not be any other users who are particularly similar, leading to poor recommendations . One way to overcome the problem of rating sparsity is to use user profile information when calculating user similarity. That is, two users could be considered similar not only if they rated the same movies similarly, but also if they belong to the same demographic segment. For example, uses the gender, age, area code, education, and employment information of users in the restaurant recommendation application. This extension of traditional collaborative filtering techniques is sometimes called \"demographic filtering\" . Another approach that also explores similarities among users has been proposed in , where the sparsity problem is addressed by applying associative retrieval framework and related spreading activation algorithms to explore transitive associations among consumers through their past transactions and feedback. A different approach for dealing with sparse rating matrices was used in , , where a dimensionality reduction technique, Singular Value Decomposition (SVD), was used to reduce the dimensionality of sparse ratings matrices. SVD is a wellknown method for matrix factorization that provides the best lower rank approximations of the original matrix .",
               "It is the same problem as with content-based systems. In order to make accurate recommendations, the system must first learn the user's preferences from the ratings that the user gives. Several techniques have been proposed to address this problem. Most of them use the hybrid recommendation approach, which combines content-based and collaborative techniques. The next section describes hybrid recommender systems in more detail. An alternative approach is presented in , , where various techniques are explored for determining the best (i.e., most informative to a recommender system) items for a new user to rate. These techniques use strategies that are based on item popularity, item entropy, user personalization, and combinations of the above , ."
          ],
          "paper_id": "24685b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 9,
          "fromPaper": "Toward the Next Generation of Recommender Systems: A Survey of the State-of-the-Art and Possible Extensions"
     },
     {
          "head": {
               "n": "2.3",
               "text": "Hybrid Methods",
               "type": "introduction"
          },
          "paragraphs": [
               "Several recommendation systems use a hybrid approach by combining collaborative and content-based methods, which helps to avoid certain limitations of content-based and collaborative systems , , , , , , . Different ways to combine collaborative and content-based methods into a hybrid recommender system can be classified as follows:"
          ],
          "paper_id": "24685b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 10,
          "fromPaper": "Toward the Next Generation of Recommender Systems: A Survey of the State-of-the-Art and Possible Extensions"
     },
     {
          "head": {
               "n": "2.2.2",
               "text": "New Item Problem",
               "type": "introduction"
          },
          "paragraphs": [
               "New items are added regularly to recommender systems. Collaborative systems rely solely on users' preferences to make recommendations. Therefore, until the new item is rated by a substantial number of users, the recommender system would not be able to recommend it. This problem 1. implementing collaborative and content-based methods separately and combining their predictions, 2. incorporating some content-based characteristics into a collaborative approach, 3. incorporating some collaborative characteristics into a content-based approach, and 4. constructing a general unifying model that incorporates both content-based and collaborative characteristics. All of the above approaches have been used by recommender systems researchers, as described below."
          ],
          "paper_id": "24685b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 11,
          "fromPaper": "Toward the Next Generation of Recommender Systems: A Survey of the State-of-the-Art and Possible Extensions"
     },
     {
          "head": {
               "n": "2.3.1",
               "text": "Combining Separate Recommenders",
               "type": "introduction"
          },
          "paragraphs": [
               "One way to build hybrid recommender systems is to implement separate collaborative and content-based systems. Then, we can have two different scenarios. First, we can combine the outputs (ratings) obtained from individual recommender systems into one final recommendation using either a linear combination of ratings or a voting scheme . Alternatively, we can use one of the individual recommenders, at any given moment choosing to use the one that is \"better\" than others based on some recommendation \"quality\" metric. For example, the DailyLearner system selects the recommender system that can give the recommendation with the higher level of confidence, while chooses the one whose recommendation is more consistent with past ratings of the user. probabilistic method for combining collaborative and content-based recommendations, which is based on the probabilistic latent semantic analysis . Yet, another approach is proposed by and , where Bayesian mixed-effects regression models are used that employ Markov chain Monte Carlo methods for parameter estimation and prediction. In particular, uses the profile information of users and items in a single statistical model that estimates unknown ratings r ij for user i and item j:"
          ],
          "paper_id": "24685b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 12,
          "fromPaper": "Toward the Next Generation of Recommender Systems: A Survey of the State-of-the-Art and Possible Extensions"
     },
     {
          "head": {
               "n": "2.3.2",
               "text": "Adding Content-Based Characteristics to Collaborative Models",
               "type": "modelling"
          },
          "paragraphs": [
               "Several hybrid recommender systems, including Fab and the \"collaboration via content\" approach, described in , are based on traditional collaborative techniques but also maintain the content-based profiles for each user. These content-based profiles, and not the commonly rated items, are then used to calculate the similarity between two users. As mentioned in , this allows to overcome some sparsity-related problems of a purely collaborative approach since, typically, not many pairs of users will have a significant number of commonly rated items. Another benefit of this approach is that users can be recommended an item not only when this item is rated highly by users with similar profiles, but also directly, i.e., when this item scores highly against the user's profile . Good et al. employ a somewhat similar approach in using the variety of different filterbots-specialized content-analysis agents that act as additional participants in a collaborative filtering community. As a result, the users whose ratings agree with some of the filterbots' ratings would be able to receive better recommendations . Similarly, uses a collaborative approach where the traditional user's ratings vector is augmented with additional ratings, which are calculated using a pure content-based predictor."
          ],
          "paper_id": "24685b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 13,
          "fromPaper": "Toward the Next Generation of Recommender Systems: A Survey of the State-of-the-Art and Possible Extensions"
     },
     {
          "head": {
               "n": "2.3.3",
               "text": "Adding Collaborative Characteristics to ContentBased Models",
               "type": "modelling"
          },
          "paragraphs": [
               "The most popular approach in this category is to use some dimensionality reduction technique on a group of contentbased profiles. For example, uses latent semantic indexing (LSI) to create a collaborative view of a collection of user profiles, where user profiles are represented by term vectors (as discussed in Section 2.1), resulting in a performance improvement compared to the pure contentbased approach.",
               "where i ? 1; . . . ; I and j ? 1; . . . ; J represent users and items, respectively, and e ij , i , and j are random variables taking into effect noise, unobserved sources of user heterogeneity, and item heterogeneity, respectively. Also, x ij is a matrix containing user and item characteristics, z i is a vector of user characteristics, and w j is a vector of item characteristics. The unknown parameters of this model are , 2 , ?, and ? and they are estimated from the data of already known ratings using Markov chain Monte Carlo methods. In summary, uses user attributes fz i g constituting a part of a user profile, item attributes fw j g constituting a part of an item profile, and their interactions fx ij g to estimate the rating of an item.",
               "Hybrid recommendation systems can also be augmented by knowledge-based techniques , such as case-based reasoning, in order to improve recommendation accuracy and to address some of the limitations (e.g., new user, new item problems) of traditional recommender systems. For example, knowledge-based recommender system Entre uses some domain knowledge about restaurants, cuisines, and foods (e.g., that \"seafood\" is not \"vegetarian\") to recommend restaurants to its users. The main drawback of knowledge-based systems is a need for knowledge acquisition-a well-known bottleneck for many artificial intelligence applications. However, knowledge-based recommendation systems have been developed for application domains where domain knowledge is readily available in some structured machine-readable form, e.g., as an ontology. For example, the Quickstep and Foxtrot systems use research paper topic ontology to recommend online research articles to the users.",
               "Moreover, several papers, such as , , , , empirically compare the performance of the hybrid with the pure collaborative and content-based methods and demonstrate that the hybrid methods can provide more accurate recommendations than pure approaches."
          ],
          "paper_id": "24685b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 14,
          "fromPaper": "Toward the Next Generation of Recommender Systems: A Survey of the State-of-the-Art and Possible Extensions"
     },
     {
          "head": {
               "n": "2.3.4",
               "text": "Developing a Single Unifying Recommendation Model",
               "type": "modelling"
          },
          "paragraphs": [
               "Many researchers have followed this approach in recent years. For instance, proposes using content-based and collaborative characteristics (e.g., the age or gender of users or the genre of movies) in a single rule-based classifier. discussed above, recommender systems can be categorized as being 1) content-based, collaborative, or hybrid, based on the recommendation approach used, and 2) heuristic-based or model-based, based on the types of recommendation techniques used for the rating estimation. We use these two orthogonal dimensions to classify the recommender systems research in the 2 ? 3 matrix presented in .",
               "The recommendation methods described in this section have performed well in several applications, including the ones for recommending books, CDs, and news articles , , and some of these methods are used in the \"industrial-strength\" recommender systems, such as the ones deployed at Amazon , MovieLens , and VERSIFI Technologies (formerly AdapiveInfo.com) .",
               "However, both collaborative and content-based methods have certain limitations, described earlier in this section. Moreover, in order to provide better recommendations and to be able to use recommender systems in arguably more complex types of applications, such as recommending vacations or certain types of financial services, most of the methods reviewed in this section would need significant extensions. For example, even for a traditional movie recommendation application, showed that, by extending the traditional memory-based collaborative filtering approach to take into consideration the contextual information, such as when, where, and with whom a movie is seen, the resulting recommender system could outperform the pure traditional collaborative filtering method. Many real-life recommendation applications, including several business applications, such as the ones described above, are arguably more complex than a movie recommender system and would require taking more factors into the recommendation consideration. Therefore, the need to develop more advanced recommendation methods is even more pressing for such types of applications. In the next section, we review various ways to extend recommendation methods in order to support more complex types of recommendation applications. the profile of user i be defined as a vector of p features, i.e., ~ c c i ? ?a i1 ; . . . ; a ip ?. Also, let the profile of item j be defined as a vector of r features, i.e., ~ s s j ? ?b j1 ; . . . ; b jr ?. We deliberately did not precisely define the meanings of features a ij and b kl because they can mean different concepts in different applications, such as numbers, categories, rules, sequences, etc. Also, let ~ c c be a vector of all user profiles, i.e., ~ c c ? ?~ c c 1 ; . . . ;~ c c m ?, and let ~ s s be a vector of all item profiles, i.e., ~ s s ? ?~ s s 1 ; . . . ;~ s s n ?. Then, the most general rating estimation procedure can be defined as Recommender systems, as described in Section 2 and summarized in , can be extended in several ways that include improving the understanding of users and items, incorporating the contextual information into the recommendation process, supporting multcriteria ratings, and providing more flexible and less intrusive types of recommendations. Such more comprehensive models of recommender systems can provide better recommendation capabilities. In the remainder of this section, we describe the proposed extensions and also identify various research opportunities for developing them."
          ],
          "paper_id": "24685b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 15,
          "fromPaper": "Toward the Next Generation of Recommender Systems: A Survey of the State-of-the-Art and Possible Extensions"
     },
     {
          "head": {
               "n": "3",
               "text": "EXTENDING CAPABILITIES OF RECOMMENDER SYSTEMS",
               "type": "modelling"
          },
          "paragraphs": [
               "that estimates each unknown rating r"
          ],
          "paper_id": "24685b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 16,
          "fromPaper": "Toward the Next Generation of Recommender Systems: A Survey of the State-of-the-Art and Possible Extensions"
     },
     {
          "head": {
               "n": "3.1",
               "text": "Comprehensive Understanding of Users and Items",
               "type": "modelling"
          },
          "paragraphs": [
               "As was pointed out in , , , , most of the recommendation methods produce ratings that are based on a limited understanding of users and items as captured by user and item profiles and do not take full advantage of the information in the user's transactional histories and other available data. For example, classical collaborative filtering methods , , do not use user and item profiles at all for recommendation purposes and rely exclusively on the ratings information to make recommendations. Although there has been some progress made on incorporating user and item profiles into some of the methods since the earlier days of recommender systems , , , these profiles still tend to be quite simple and do not utilize some of the more advanced profiling techniques. In addition to using traditional profile features, such as keywords and simple user demographics , , more advanced profiling techniques based on data mining rules , , sequences , and signatures that describe a user's interests can be used to build user profiles. Also, in addition to using the traditional item profile features, such as keywords , , similar advanced profiling techniques can also be used to build comprehensive item profiles. With respect to recommender systems, advanced profiling techniques that are based on data mining have been used mainly in the context of Web usage analysis , , , i.e., to discover the navigational Web usage patterns (i.e., page view sequences) of users in order to provide better Web site recommendations; however, such techniques have not been widely adopted in rating-based recommender systems. Once user and item profiles are built, the most general ratings estimation function can be defined in terms of these profiles and the previously specified ratings as follows: Let ij ? u ij ?R;~ c c;~ s s? in terms of known ratings R ? fr ij 6 ? g, user profiles ~ c c, and item profiles ~ s s. We can use various methods for estimating utility function u ij , including various heuristics, nearestneighbor classifiers, decision trees, spline methods, radial basis functions, regressions, neural networks, and relational learning methods (since ~ c c and ~ s s can be matrices or, using database tehcnology, relational tables). Moreover, we would like to point out that  . . . ;~ s s n ?, ratings (preferences) R i expressed by user i, and ratings (preferences) expressed by all other users R ? fr ij 6 ? g. Therefore, function u ij clearly subsumes the collaborative, content-based, and hybrid methods discussed in Section 2. However, most of the existing recommender systems make function u ij dependent only on a (small) subset of the whole input space R, ~ c c, and ~ s s. For example, function u ij for traditional memorybased collaborative filtering methods does not depend on inputs ~ c c and ~ s s and restricts R only to column R j and usually only to the set of N nearest-neighbors r ij for column R j ."
          ],
          "paper_id": "24685b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 17,
          "fromPaper": "Toward the Next Generation of Recommender Systems: A Survey of the State-of-the-Art and Possible Extensions"
     },
     {
          "paragraphs": [
               "An interesting research problem would be to extend the attribute-based profiles, as defined by ~ c c and ~ s s, to utilize the more advanced profiling techniques described above, such as rule, sequence, and signature-based methods."
          ],
          "paper_id": "24685b80-97d4-11e8-9580-1f0eb29018a9",
          "head": {
               "type": "modelling"
          },
          "paragraphNo": 18,
          "fromPaper": "Toward the Next Generation of Recommender Systems: A Survey of the State-of-the-Art and Possible Extensions"
     },
     {
          "head": {
               "n": "3.2",
               "text": "Extensions for Model-Based Recommendation Techniques",
               "type": "modelling"
          },
          "paragraphs": [
               "As discussed in Section 2, some of the model-based approaches provide rigorous rating estimation methods utilizing various statistical and machine learning techniques. However, other areas of mathematics and computer science, such as mathematical approximation theory , , , can also contribute to developing better rating estimation methods defined by . One example of an approximation-based approach to defining function u ij in (16) constitutes radial basis functions , , that are defined as follows: Given a set of points X ? fx 1 ; . . . ; x m g (where x i 2 IR N ) and the values of an unknown function f (e.g., the rating function) at these points, i.e., f?x 1 ?; . . . ; f?x m ?, a radial basis function r f;X estimates the values of f in the whole IR N , given r f;X ?x i ? ? f?x i ? for all i ? 1; . . . ; m, as 2. Actually, the situation is a little more complicated than this because the estimation of nearest neighbors may involve other values of matrix R for some of the collaborative filtering methods.",
               "where f 1 ; . . . ; m g are coefficients from IR, x k k is a norm (e.g., L 2 ), and is a positive definite function, i.e., a function satisfying the condition for all distinct points x 1 ; . . . ; x m in IR N and all the coefficients 1 ; . . . ; m from IR. Then, a well-known theorem states that, if is a positive definite function, then there exists a unique function r f;X of the form (17) satisfying the conditions r f;X ?x i ? ? f?x i ? for all i ? 1; . . . ; m. Some popular examples of positive definite functions are: two-dimensional User ? Item recommendation methods to multdimensional settings. In addition, argued that the inclusion of the knowledge about the user's task into the recommendation algorithm in certain applications can lead to better recommendations.",
               "In order to take into consideration the contextual information, proposes defining the utility (or ratings) function over a multidimensional space D 1 ? . . . ? D n (as opposed to the traditional two-dimensional User ? Item space) as One of the advantages of radial basis functions is that they have been extensively studied in approximation theory and their theoretical properties and utilization of radial basis functions in many practical applications have been understood very well , . Therefore, it should be interesting to apply them to estimating unknown ratings in recommender systems.",
               "One caveat with using radial basis functions in recommender systems, though, is that the recommendation space ~ c c ? ~ s s does not usually constitute an N-dimensional Euclidean space IR N . Therefore, one research challenge is to extend radial basis methods from the real numbers to other domains and apply them to recommender systems problems. The applicability of other approximation methods for estimating u ij in (16) constitutes another interesting research topic. "
          ],
          "paper_id": "24685b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 19,
          "fromPaper": "Toward the Next Generation of Recommender Systems: A Survey of the State-of-the-Art and Possible Extensions"
     },
     {
          "head": {
               "n": "3.3",
               "text": "Multidimensionality of Recommendations",
               "type": "modelling"
          },
          "paragraphs": [
               "The current generation of recommender systems operates in the two-dimensional User ? Item space. That is, they make their recommendations based only on the user and item information and do not take into consideration additional contextual information that may be crucial in some applications. However, in many situations, the utility of a certain product to a user may depend significantly on time (e.g., the time of the year, such as season or month, or the day of the week). It may also depend on the person(s) with whom the product will be consumed or shared and under which circumstances. In such situations, it may not be sufficient to simply recommend items to users; the recommender system must take additional contextual information, such as time, place, and the company of a user, into consideration when recommending a product. For example, when recommending a vacation package, the system should also consider the time of the year, with whom the user plans to travel, traveling conditions and restrictions at that time, and other contextual information. As another example, a user can have significantly different preferences for the types of movies she wants to see when she is going out to a movie theater with a boyfriend on a Saturday night as opposed to watching a rental movie at home with her parents on a Wednesday evening. As was argued in and , it is important to extend traditional For example, in the case of a movie recommender system, one needs to consider not only characteristics of the movie d 1 and of the person who wants to see the movie d 2 , but also such contextual information as 1) d 3 : where and how the movie will be seen (e.g., in the movie theater, at home on TV, on video or DVD), 2) d 4 : with whom the movie will be seen (e.g., alone, with girlfriend/boyfriend, friends, parents, etc.), and 3) d 5 : when will the movie be seen (e.g., on weekdays or weekends, in the morning/afternoon/ evening, during the opening night, etc.). As discussed earlier, each of the components d 1 , d 2 , d 3 , d 4 , d 5 can be defined as a vector of its characteristics and the overall utility function u?d 1 ; d 2 ; d 3 ; d 4 ; d 5 ? can be quite complex and take into consideration various interaction effects among",
               "As was argued in , , many of the two-dimensional recommendation algorithms cannot be directly extended to the multidimensional case. Furthermore, proposes a reduction-based recommendation approach which uses only the ratings that pertain to the context of the user-specified criteria in which a recommendation is made. For example, to recommend a movie to a person who wants to see it in a movie theater on a Saturday night, the reduction-based approach would use only the available ratings of the movies seen in the movie theaters over the weekends, if it is determined from the data that the place and the time of the week dimensions affect the moviegoers' behavior. By selecting only the ratings relevant to a recommendation context, the reduction-based approach projects the multdimensional cube of ratings on the two primary User and Item dimensions. Then, any standard two-dimensional recommendation method described in Section 2 can be used to produce a recommendation. Since these recommendations are based only on the context-specific set of ratings, this amounts to building a local model producing contextspecific recommendations.",
               "Another possible approach to producing multdimensional recommendations would be to deploy the hierarchical Bayesian method presented in , which can be extended from two to multdimensional case as follows: Instead of considering the two-dimensional case, as defined in , where user characteristics d 1 are defined with vector z i and item characteristics d 2 with vector w j , we can also add contextual dimensions d 3 ; . . . ; d n , where d i ? ?d i1 ; . . . ; d ix i ? is a vector of characteristics for dimension D i . Then, the rating function r ? u?d 1 ; d 2 ; . . . ; d n ? is extended from (15) to the linear combination of d 1 ; d 2 ; . . . ; d n and also includes interaction effects among these dimensions (i.e., interaction effects, as defined by matrix fx ij g in (15), should be extended to include other dimensions). One of the research challenges is to make these extensions scalable for large values of n.",
               "for the maximum of f c ?r?. However, as with decor and service ratings, we might not have the user's food ratings f c ?r? for all such restaurants and, thus, will also need to use a rating estimation procedure for f c ?r? before making any recommendations.",
               "We believe that the problem of finding the Paretooptimal solution set and the iterative method of consecutive single criterion optimizations for multcriteria recommendation problems mentioned above should also constitute interesting and challenging problems."
          ],
          "paper_id": "24685b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 20,
          "fromPaper": "Toward the Next Generation of Recommender Systems: A Survey of the State-of-the-Art and Possible Extensions"
     },
     {
          "head": {
               "n": "3.4",
               "text": "Multcriteria Ratings",
               "type": "modelling"
          },
          "paragraphs": [
               "Most of the current recommender systems deal with singlecriterion ratings, such as ratings of movies and books. However, in some applications, such as restaurant recommenders, it is crucial to incorporate multcriteria ratings into recommendation methods. For example, many restaurant guides, such as Zagat's Guide, provide three criteria for restaurant ratings: food, decor, and service. Although multicriteria ratings have not yet been examined in the recommender systems literature, they have been extensively studied in the Operations Research community , . Typical solutions to the multcriteria optimization problems include:",
               "1. finding Pareto optimal solutions, 2. taking a linear combination of multiple criteria and reducing the problem to a single-criterion optimization problem, 3. optimizing the most important criterion and converting other criteria to constraints, and 4. consecutively optimizing one criterion at a time, converting an optimal solution to constraint(s), and repeating the process for other criteria. An example of the latter approach is the method of successive concessions .",
               "To illustrate how some of these methods can be used in recommender systems, consider the application of approach 3 to the problem of recommending restaurants r to user c based on the user's criteria of food quality f c ?r?, decor d c ?r?, and service s c ?r?. We can take food quality f c ?r? to be the primary criterion and use others as constraints, i.e., we want to find restaurants r that maximize f c ?r?, subject to the constraints d c ?r? > c and s c ?r? > c , where c and c are minimal ratings for decor and service (e.g., user c will not go to any restaurant having decor and service ratings below 10, out of possible 30, regardless of the quality of food there). This problem is complicated by the fact that we usually will not have the user's decor d c ?r? and service s c ?r? ratings for all the restaurants. Then, the task of a recommender system is to estimate unknown ratings d Once we find all the restaurants satisfying the constraints with these estimated ratings, we can use those restaurants in searching Many recommender systems are intrusive in the sense that they require explicit feedback from the user and often at a significant level of user involvement. For example, before recommending any newsgroup articles, the system needs to acquire the ratings of previously read articles and, often, many of them. Since it is impractical to elicit many ratings of these articles from the user, some recommender systems use nonintrusive rating determination methods where certain proxies are used to estimate real ratings. For example, the amount of time a user spends reading a newsgroup article can serve as a proxy of the article's rating given by this user. Some nonintrusive methods of getting user feedback are presented in , , , , . However, nonintrusive ratings (such as time spent reading an article) are often inaccurate and cannot fully replace explicit ratings provided by the user. Therefore, the problem of minimizing intrusiveness while maintaining certain levels of accuracy of recommendations needs to be addressed by the recommender systems researchers.",
               "One way to explore the intrusiveness problem is to determine an optimal number of ratings the system should ask from a new user. For example, before recommending any movies, MovieLens.org first asks the user to rate a predefined number of movies (e.g., 20). This request incurs certain costs on the end-user that can be modeled in various ways, the simplest model being a fixed-cost model (i.e., the cost of rating each movie is C and the cost of rating n movies is C ? n). Then, the intrusiveness problem can be formulated as an optimization problem that tries to find an optimal number of initial rating requests n as follows: Each additional rating supplied by the user increases the accuracy of recommendations (or any other effectiveness measure) and, therefore, results in certain benefits for the user. One interesting intrusiveness-related research problem would be to develop formal models for defining and measuring benefit B?n? of supplying n initial ratings in terms of the increased accuracy of predictions based on these ratings. Once it is known how to measure benefits B?n? (e.g., by measuring the predictive accuracy of a recommender system), we need to determine an optimal number of initial ratings n that maximizes expression B?n? ? C ? n. Clearly, the optimal value of n is reached when marginal benefits are equal to marginal costs, i.e., when ?B?n? ? C. The optimal solution should exist under the assumption that B?n? is a monotonically increasing function in n with decreasing marginal benefits ?B?n? that asymptotically converge to zero.",
               "Another interesting research opportunity lies in developing marginal cost models that are more advanced than the fixed-cost model described above and that can potentially include a cost/benefit analysis of using both implicit and explicit ratings in a recommender system.",
               "Finally, the issue of incrementally selecting good training data for modeling purposes is the problem of active learning, which is a fairly well-studied area in the machine learning literature, and numerous approaches have been proposed to addressing this problem , , , . We believe that applying active learning methods to address the nonintrusiveness issue constitutes another interesting research opportunity."
          ],
          "paper_id": "24685b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 21,
          "fromPaper": "Toward the Next Generation of Recommender Systems: A Survey of the State-of-the-Art and Possible Extensions"
     },
     {
          "head": {
               "n": "3.6",
               "text": "Flexibility",
               "type": "modelling"
          },
          "paragraphs": [
               "Most of the recommendation methods are inflexible in the sense that they are \"hard-wired\" into the systems by the vendors and, therefore, support only a predefined and fixed set of recommendations. Therefore, the end-user cannot customize recommendations according to his or her needs in real time. This problem has been identified in and Recommendation Query Language (RQL) has been proposed to address it . RQL is SQL-like language for expressing flexible user-specified recommendation requests. For example, the request \"recommend to each user from New York the best three movies that are longer than two hours\" can be expressed in RQL as:",
               "Movie.Length > 120 AND User.City = \"New York\".",
               "Also, most of the recommender systems recommend only individual items to individual users and do not deal with aggregation. However, it is important to be able to provide aggregated recommendations in a number of applications, such as recommend brands or categories of products to certain segments of users. For example, a travelrelated recommender system may want to recommend vacations in Florida (category of products) to the undergraduate students from the Northeast (user segment) during the spring break. One way to support aggregated recommendations is by utilizing the OLAP-based approach to multidimensional recommendations. OLAP-based systems naturally support aggregation hierarchies and the initial approaches to deploying OLAP-based methods in recommender systems are presented in , . However, more work is required to develop a more comprehensive understanding of how to use the OLAP approach in recommender systems and this constitutes an interesting and challenging research problem. measures can be either statistical or decision-support . Statistical accuracy metrics mainly compare the estimated ratings (e.g., as defined in ) against the actual ratings R in the User ? Item matrix and include Mean Absolute Error (MAE), root mean squared error, and correlation between predictions and ratings. Decision-support measures determine how well a recommender system can make predictions of high-relevance items (i.e., items that would be rated highly by the user). They include classical IR measures of precision (the percentage of truly \"high\" ratings among those that were predicted to be \"high\" by the recommender system), recall (the percentage of correctly predicted \"high\" ratings among all the ratings known to be \"high\"), Fmeasure (a harmonic mean of precision and recall), and Receiver Operating Characteristic (ROC) measure demonstrating the trade-off between true positive and false positive rates in recommender systems .",
               "Although popular, these empirical evaluation measures have certain limitations. One limitation is that these measures are typically performed on test data that the users chose to rate. However, items that users choose to rate are likely to constitute a skewed sample, e.g., users may rate mostly the items that they like. In other words, the empirical evaluation results typically only show how accurate the system is on items the user decided to rate, whereas the ability of the system to properly evaluate a random item (which it should be able to do during its normal real-life use) is not tested. Understandably, it is expensive and time-consuming to conduct controlled experiments with users in the recommender systems settings, therefore, the experiments that test recommendation quality on an unbiased random sample are rare, e.g., . However, high-quality experiments are necessary in order to truly understand the benefits and limitations of the proposed recommendation techniques.",
               "In addition, although crucial for measuring the accuracy of recommendations, the technical measures mentioned earlier often do not adequately capture \"usefulness\" and \"quality\" of recommendations. For example, as observes for a supermarket application, recommending obvious items (such as milk or bread) that the consumer will buy anyway will produce high accuracy rates; however, it will not be very helpful to the consumer. Therefore, it is also important to develop economics-oriented measures that capture the business value of recommendations, such as return on investments (ROI) and customer lifetime value (LTV) measures , , . Developing and studying the measures that would remedy the limitations described in this section constitutes an interesting and important research topic."
          ],
          "paper_id": "24685b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 22,
          "fromPaper": "Toward the Next Generation of Recommender Systems: A Survey of the State-of-the-Art and Possible Extensions"
     },
     {
          "head": {
               "n": "3.7",
               "text": "Effectiveness of Recommendations",
               "type": "modelling"
          },
          "paragraphs": [
               "The problem of developing good metrics to measure the effectiveness of recommendations has been extensively addressed in the recommender systems literature. Some examples of this work include , , , . In most of the recommender systems literature, the performance evaluation of recommendation algorithms is usually done in terms of coverage and accuracy metrics. Coverage measures the percentage of items for which a recommender system is capable of making predictions . Accuracy Other important research issues that have been explored in the recommender systems literature include explainability , , trustworthiness , scalability , , , , and privacy , issues of recommender systems. However, we will not review this work and will not discuss research opportunities in these areas because of space limitation."
          ],
          "paper_id": "24685b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 23,
          "fromPaper": "Toward the Next Generation of Recommender Systems: A Survey of the State-of-the-Art and Possible Extensions"
     },
     {
          "head": {
               "n": "4",
               "text": "CONCLUSIONS",
               "type": "conclusion"
          },
          "paragraphs": [
               "Recommender systems made significant progress over the last decade when numerous content-based, collaborative, and hybrid methods were proposed and several \"industrial-strength\" systems have been developed. However, despite all of these advances, the current generation of recommender systems surveyed in this paper still requires further improvements to make recommendation methods more effective in a broader range of applications. In this paper, we reviewed various limitations of the current recommendation methods and discussed possible extensions that can provide better recommendation capabilities. These extensions include, among others, the improved modeling of users and items, incorporation of the contextual information into the recommendation process, support for multcriteria ratings, and provision of a more flexible and less intrusive recommendation process. We hope that the issues presented in this paper will advance the discussion in the recommender systems community about the next generation of recommendation technologies."
          ],
          "paper_id": "24685b80-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 24,
          "fromPaper": "Toward the Next Generation of Recommender Systems: A Survey of the State-of-the-Art and Possible Extensions"
     }
]