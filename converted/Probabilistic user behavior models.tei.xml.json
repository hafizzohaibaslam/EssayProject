[
     {
          "head": {
               "n": "0",
               "text": "abstract",
               "type": "abstract"
          },
          "paragraphs": [
               "We present a mixture model based approach for generating individualized behavior models for the Web users. We investigate the use of maximum entropy and Markov mixture models for generating probabilis-tic behavior models. We first build a global behavior model for the whole population and then personalize this global model for the existing users by assigning each user individual component weights for the mixture model. We then use these individual weights to group the users into behavior model clusters. We show that the clusters generated in this manner are in-terpretable and able to represent dominant behavior patterns. We conduct offline experiments on around two months worth of data from CiteSeer, an online digital library for computer science research papers currently storing more than 470,000 documents. We show that both maximum entropy and Markov based personal user behavior models are strong predictive models. We also show that maximum entropy based mixture model out-performs Markov mixture models in recognizing complex user behavior pattern."
          ],
          "paper_id": "2383c7e0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 0,
          "fromPaper": "Probabilistic User Behavior Models"
     },
     {
          "head": {
               "n": "1",
               "text": "Introduction and Related Work",
               "type": "introduction"
          },
          "paragraphs": [
               "Whether the underlying reason is to detect fraud or malicious visitors, to improve the organization of a Web site to better serve customers or to identify hidden patterns and new trends in consumer behavior for improving profit, massive amounts of Web data are being collected and stored everyday. Understanding user behavior and discovering the valuable information within such huge databases involves several phases: Data cleaning and preprocessing, where typically noise is removed, log files are broken into sessions and users are identified; Data transformation, where useful features are selected to represent the data and/or dimension reduction techniques are used to reduce the size of the data; Applying data mining techniques to identify interesting patterns, statistical or predictive models or correlations among parts of data; Interpretation of the results, which includes visualization of the discovered knowledge and transforming them into user friendly formats.",
               "The focus of this paper is the data mining and interpretation phases of this process. We investigate the use of maximum entropy mixture models and mixture of Markov models for inferring individualized behavior models of Web users, where a behavior model is a probabilistic model describing which actions the user will perform in the future. Mixture models also provide a means to cluster the data. The resulting clusters of our experiments show that maximum entropy and Markov mixture models have descriptive power as well as predictive.",
               "A variety of data mining techniques have been used for the purpose of Web data analysis. Association rule extraction, collaborative filtering, clustering, classification, dependency modeling, and sequential pattern analysis are the most common and noticeable of these methods. Association rule extraction has been used to identify sets of items that are accessed together . Collaborative filtering algorithms have been used to first find similar users based on the overlap between their requested items, and then recommend the given user items accessed by the like-minded users. Clustering, in the context of Web data, can either be used to group together similar items or users with similar usage patterns . Classification, on the other hand, is the task of categorizing items to pre-defined classes. It's used to identify users belonging to same classes. Decision trees , Bayesian classifiers, k-nearest neighbor classifiers, support vector machines, and other classifications techniques can be used for this purpose . Dependency modeling is used to discover and represent dependencies among different variables. As an example, the effect of gender on the shopping behavior can be modeled by dependency networks. Hidden Markov models and Bayesian networks are examples of such techniques. Sequential pattern analysis algorithms use time-ordered sessions or episodes and attempt to discover patterns such that the current history of items/actions is evidence to the following item/action.",
               "One of the most motivating reasons for Web usage analysis is its potential to provide customized services. Successful applications of personalization based on Web usage mining include adaptive Web-sites, where the structure of the Website is optimized for each individual's taste ; Extracting usage patterns for deriving intelligent marketing strategies ; Personalized recommendations and individualized predictive profile generation .",
               "In this paper we use personalized probabilistic sequential models to represent user behavior. User behavior can be viewed as a probabilistic model P (A next |H(U )), where A next is the next action taken by the user U , H(U ) is the action history for the user U in the present session, and P can be any probabilistic function. In our previous work on sequence modeling and recommender systems we found that mixture of maximum entropy (maxent) and Markov models are quite well suited for sequential analysis problems. We use mixture models to capture the diversity in individual behaviors. Each component of a mixture model represents a dominant pattern in the data and each sequence (user sessions in our case) is modeled as a weighted combination of these components. By grouping each session into the highest weighted component, we are also able to cluster the user sessions. Personalization is achieved by optimizing the weights for each individual user, as suggested by Cadez et al . We are able to eliminate one of the biggest problems of personalization, the lack of sufficient information about each individual, by starting with a global model and optimizing the weights for each individual with respect to the amount of data we have about him/her.",
               "We use web-server logs of CiteSeer (a.k.a. ResearchIndex) , an online digital library of computer science papers, as our test bed. The site automatically locates computer science papers found on the Web, indexes their full text, allows browsing via the literature citation graph, and isolates the text around citations, among other services . The archive contains over 470,000 documents including the full text of each document, citation links between documents and receives thousands of user accesses per hour. Users of CiteSeer can search both the documents and citations, view and download documents, follow the recommendations, upload documents or correct document information.",
               "The mixture model can be learned directly from the available data. Although maxent has high computational cost, the dimension of the action space is inside the limits of feasible computation.",
               "The rest of the paper is organized as follows. In Section 2 we give a definition of the problem and describe the general notation. We introduce our model in Section 3. Section 4 describes our visualization method. We give an overview of our data set and preprocessing steps in Section 5. Experimental results and comparisons are given in Section 6. In Section 7 we present our conclusions and ponder future work."
          ],
          "paper_id": "2383c7e0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 1,
          "fromPaper": "Probabilistic User Behavior Models"
     },
     {
          "head": {
               "n": "2",
               "text": "General Notation and Problem Definition",
               "type": "modelling"
          },
          "paragraphs": [
               "We assume that we are given a data set consisting of ordered sequences in some alphabet and that each sequence is labeled with a user id U . For the purpose of this paper we refer to individual items in the alphabet as actions and each sequence represents a user session. For each transaction in a user session, the history H(U ) is defined as the so-far observed ordered sequence of actions. A prev is the last observed action in H(U ). Our behavior model for individual U is a model, e.g. maxent or Markov, that predicts the next action A next given the history H(U ). Therefore the problem is to infer this model, P (A prev |H(U ), Data), for each individual given the training data. A serious drawback of personalization algorithms for the Web domain is the insufficient data problem. For many transaction data sets most user ids are seen only in one or two sessions, which makes it impossible to learn decent profiles for those users. If the Web site does not require registration and the user ids are set with temporary cookies, the situation gets even worse. Log files will have lots of users with only a few sessions, most of which won't be seen in the future transactions at all and most of the users seen in run-time will be new users, unknown to the system. A straightforward approach to personalization would be to learn the model for each user only from that user's past transactions. In this case, there would be nothing that the system could do when a new user visits the Web site. Even if the system had sufficient training data for a user, it could suffer from over-fitting. We choose to use a global mixture model to capture specific patterns of general behavior of the users, and once the global model is learned, we optimize the weight of each component for each known user individually, hence combining the global patterns with individual irregularities."
          ],
          "paper_id": "2383c7e0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 2,
          "fromPaper": "Probabilistic User Behavior Models"
     },
     {
          "head": {
               "n": "3",
               "text": "Mixture of Maxent and Markov Models",
               "type": "modelling"
          },
          "paragraphs": [
               "In this section we describe the global and individualized maxent and Markov mixture models."
          ],
          "paper_id": "2383c7e0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 3,
          "fromPaper": "Probabilistic User Behavior Models"
     },
     {
          "head": {
               "n": "3.1",
               "text": "Global Mixture Models",
               "type": "modelling"
          },
          "paragraphs": [
               "The use of mixture models to represent the behavior of an individual can be viewed as assuming that when a visitor U arrives at the Web site he/she is assigned to one of N c clusters with a probability, and given that the visitor is in a cluster his/her behavior is generated by a distribution specific to that cluster. The formal definition of a N c -component mixture model is as follows:",
               "where Nc k=1k = 1.k is the weight, or the prior probability, of component k, and P (A next |H(U ), Data, k) is the distribution for the k-th component. For the global modelk 's take the same values across all the users. The componentspecific distribution can be modeled by a number of ways. Based on the results of our previous research we decided to use first order Markov model and maximum entropy for this purpose. Both models are explained in the following sections."
          ],
          "paper_id": "2383c7e0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 4,
          "fromPaper": "Probabilistic User Behavior Models"
     },
     {
          "head": {
               "n": "3.1.1",
               "text": "Markov Model",
               "type": "modelling"
          },
          "paragraphs": [
               "In the first order Markov model, the current action depends on the history H(U ) only through the last observed action, i.e. A prev . The definition of Markov model based component distribution is therefore",
               "where0,k is the probability of observing H(U ) 0 as the first action in the history, and(hh+1),k is the probability of observing a transition from action number h to action number h + 1 in the history. For h = |H(U )|, action with index h + 1 is A next . The number of parameters is quadratic in the number of actions. Note that the regular Markov model only depends on the so-called bigrams or first order Markov terms, i.e. the frequencies of pairs of consecutive actions."
          ],
          "paper_id": "2383c7e0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 5,
          "fromPaper": "Probabilistic User Behavior Models"
     },
     {
          "head": {
               "n": "3.1.2",
               "text": "Maximum Entropy Model",
               "type": "modelling"
          },
          "paragraphs": [
               "It's also possible to model the component distribution P (A next |H(U ), Data, k) as a maximum entropy model. Maximum entropy provides a framework to combine information from different knowledge sources. Each knowledge source imposes a set of constraints on the combined model. The intersection of all the constraints contains a set of probability functions, satisfying all the conditions. Maximum entropy principle chooses among these functions the one with the highest information entropy, i.e. the most general function. We are motivated to use maximum entropy approach in order to combine first order Markov model features with other properties of the data. More specifically, we believe that the most recent action, A prev , has the most influence on the current action taken by the user. However, we also believe that actions other than A prev seen in the history H(U ) are also effective. Higher order Markov models may seem to be solving this problem, but it's not feasible to build them in the case of high dimensions. Furthermore, higher order Markov models use the strict order of the action sequence. Maxent, on the other hand, does not impose such restrictions. The choice of most general function is also favorable under uncertainty.",
               "We selected two flavors of low-order statistics or features, as they are typically referred to in the maximum entropy literature, for estimation . Bigrams, or first order Markov terms, were one type. In order to introduce long term dependence of A next on the actions that occurred in the history of the user session, we include triggers, position-specific or non-position-specific, in addition to bigrams. A non position-specific trigger is defined as a pair of actions (a, b) in a given cluster such that P (A next = b|aH(U )) is substantially different from P (A next = b). If we restrict the action pairs to be exactly |H(U )| actions apart from each other, the resulting trigger would be position-specific. We use both types of triggers in our experiments. To measure the quality of triggers and in order to rank them we computed mutual information between events E 1 = {A next = b} and E 2 = {aH(U )}. We then discarded low scoring triggers but retained all bigrams. Note that the quantity and quality of selected triggers depend on the length of H(U ). Since the majority of the user sessions is shorter than 5 transactions, we chose 5 to be the maximum length of the history.",
               "The set of features, bigrams and triggers in our case, together with maximum entropy as an objective function, can be shown to lead to the following form of the conditional maximum entropy model",
               "where Z(H(U )) is a normalization constant ensuring that the distribution sums to 1 and F s are the features.",
               "The set of parameters {} needs to be found from the following set of equations that restrict the distribution P (A next |H(U ), Data) to have the same expected value for each feature as seen in the training data:",
               "H A H where the left hand side represents the expectation (up to a normalization factor) of the feature F s (A, H(U )) with respect to the distribution P (A|H(U ), Data) and the right hand side is the expected value (up to the same normalization factor) of this feature in the training data. There exist efficient algorithms for finding the parameters {} (e.g. generalized , improved and sequential conditional iterative scaling algorithms) that are known to converge if the constraints imposed on P are consistent. The pseudocode of the algorithm and a detailed discussion on the ways of speeding it up can be found, for example in .",
               "Under fairly general assumptions, the maximum entropy model can also be shown to be a maximum likelihood model . Employing a Gaussian prior with a zero mean on parametersyields a maximum aposteriori solution that has been shown to be more accurate than the related maximum likelihood solution and other smoothing techniques for maximum entropy models . We use Gaussian smoothing in our experiments with a maximum entropy model."
          ],
          "paper_id": "2383c7e0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 6,
          "fromPaper": "Probabilistic User Behavior Models"
     },
     {
          "head": {
               "n": "3.2",
               "text": "Personalized Mixture Model",
               "type": "modelling"
          },
          "paragraphs": [
               "We personalize the mixture model by using individual cluster probabilities,U,k 's, for each user. The resulting model is therefore specific to each user U :",
               "where Nc k=1U,k = 1. The component distribution, P (A next |H(U ), Data, k), is the same as in global mixture model: either maximum entropy or Markov model, which is fixed across all users. The N c component distributions can also be viewed as N c dimensions of the whole population's behavior space.U,k 's specify where the user U stands in this population. This formulation allows the use of the whole population's experience for each individual's own use, thus avoiding the over-fitting problem. Unknown user problem is resolved naturally as well, by using the globalk 's for new users."
          ],
          "paper_id": "2383c7e0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 7,
          "fromPaper": "Probabilistic User Behavior Models"
     },
     {
          "head": {
               "n": "3.3",
               "text": "Parameter Estimation",
               "type": "modelling"
          },
          "paragraphs": [
               "For the purposes of this paper, we assume that each individual behaves independently. Thus, the likelihood of the data can be formulated as the product of the individual likelihoods:",
               "wherestands for the parameters of the model and N u is the number of users. For the sake of simplicity, we further assume that given the model and the parameters, each action of a user is independent from all the other actions of that user. The likelihood of user data can therefore be written as:",
               "where N a is the number of actions taken by user U . Although this assumption may not necessarily be true, it has been widely used for consumer behavior modeling in marketing literature . Unknown parameters for the global model includek 's andk 's of the maxent ork 's of the Markov model. Parameters can be learned by using the Expectation-Maximization (EM) algorithm as described in .",
               "For learning the personalized model, two different approaches can be taken. Our goal is to learn individualU,k 's, therefore we can fix the component distribution model's parameters (i.e.k 's of the maxent model ork 's of the Markov model) to the values of the global model, and perform the optimization on theU,k 's only. Or we can vary the component distribution's parameters as well. For both cases the optimization is carried out for each user individually, i.e. personal models are trained on each user's data set separately.",
               "If the first approach is taken and the component distribution model parameters are fixed, EM algorithm is run on each individual's own data set to findU,k 's, which are initialized with the globalk values. If the second approach is chosen instead, EM algorithm is used to learn bothU,k 's and component distribution model parameters, which are again initialized with the values learned for the global model. Steps of the parameter estimation process can be summarized as follows:",
               "? Run EM on the whole data set to learn globalk 's and component distribution model parameters;",
               "? Group the sessions by individuals;",
               "? Do either -Run EM on the individual data sets to learn all the parameters.",
               "According to this framework, for the new users in the test set, user specificvalues will be the initialization values, which are the globalk 's, since there will be no user data to change it.",
               "Notice that even if the component distribution parameters are optimized for the personal model, these values won't be user specific values. Cadez et al. mention that the final values of the parameters of the multinomial model are close to the initial estimates, however, we found that for maxent and Markov models this is not true. Optimizing thek 's of the maxent model ork 's of the Markov model for the second time causes the model to over-fit the known users' behavior. We recomend using the initial global model for the unknown users if this approach is taken for parameter estimation. Since the difference between the recommended method and fixed component distribution parameter method is negligible and optimizing thek 's for maxent is too time consuming, we chose fixing these parameters to conduct our experiments."
          ],
          "paper_id": "2383c7e0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 8,
          "fromPaper": "Probabilistic User Behavior Models"
     },
     {
          "head": {
               "n": "4",
               "text": "Visualization and Interpretation",
               "type": "modelling"
          },
          "paragraphs": [
               "As mentioned earlier, each component of a mixture model can be viewed as a cluster, representing a certain pattern present in the data. The resulting model represents each session as a weighted combination of these clusters. The weights actually represent the probability of that user to be belonging to those clusters. Thus, if we put each user into the cluster for which he/she has the highest probability value, we will be able to end up with clusters of user behavior models. Viewing the behavior of users in each cluster is important for a couple of reasons. First, it helps the Web site administrators in managing the site. It might even be used to identify malicious visitors. Second, it helps understanding the navigation pattern of different user groups and therefore helps in organizing the site to better suit the users. Visualizing the users' behavior also makes it possible to identify and provide customized services, like customized help and recommendations."
          ],
          "paper_id": "2383c7e0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 9,
          "fromPaper": "Probabilistic User Behavior Models"
     },
     {
          "head": {
               "n": "5",
               "text": "Data Description and Preprocessing",
               "type": "modelling"
          },
          "paragraphs": [
               "Our data set consists of CiteSeer log files covering a period of approximately two months. The log files are a series of transaction in the form <time, action, user id, action related information>. The complete list of user actions that were available in CiteSeer during the period of our experiments can be found in . Some of these actions are not being used in CiteSeer anymore.",
               "When a user accesses CiteSeer, a temporary cookie is set on the client side, if a cookie enabled browser is being used. CiteSeer uses this cookie to identify returning users. If no cookie is found, a new user id is given to the user. Each access is recorded on the server side with a unique user id and time stamp.",
               "The first step of preprocessing the data is aggregating the transactions by user id and breaking them into sessions. We use time oriented heuristics to recognize new sessions. For a fixed user id, we define a session as a sequence of actions with no two consecutive actions more than 300 seconds apart. If a user is inactive for more than 300 seconds his/her next action is considered as the start of a new session.",
               "Next, we identify robots and discard sessions belonging to them. We examine the histogram of number of accesses in one session to recognize robots. Users who access the archive more than some threshold in one session, are labeled as robots. After removing the robot sessions we collapse the same consecutive actions in a session into a single instance of that action, and discard sessions which contain only one action.",
               "We chronologically partitioned the data into 1,720,512 training sessions and 430,128 test sessions. The total number of actions in the training data is 12,200,965 and in test data this number is 3,853,108. The average number of sessions per user is 7 in the training data and 9 in the test data. The preprocessed data is represented as a collection of ordered sequences of user actions, where each sequence is labeled with a user id. Test data includes 54,429 users out of which only 8139 of the users were seen in the training data also. Since the model proposed in this paper uses the global model for the unknown users, the effects of personalization won't be seen clearly in the results for all the users. We therefore report the results on the revisiting users, and give the results for the whole data if there are any major differences between the two cases. "
          ],
          "paper_id": "2383c7e0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 10,
          "fromPaper": "Probabilistic User Behavior Models"
     },
     {
          "head": {
               "n": "6",
               "text": "Experimental Results and Comparisons",
               "type": "experiment"
          },
          "paragraphs": [
               "We evaluated the user behavior models based on the accuracy of their predictions and visualized the user behavior clusters to demonstrate the descriptive ability of the models. Prediction accuracy is evaluated by scanning the user sessions and for each action in the session predicting the identity of the following action.",
               "In our experiments we compare mixtures of position specific maximum entropy models, mixtures of non position specific maximum entropy models and mixtures of Markov models. For maximum entropy models, the length of the history was set to 5. Our main criteria for prediction evaluation is the hit ratio, which is the ratio of the correct predictions to the total number of predictions made. The predictions made by the mixture models are actually lists of ranked actions, where the ranking is done by ordering the actions by their probability values. If the system were to predict only one action, the first action on the ranked list would be chosen. However, the quality of the remaining predictions is also an indication of the success of the model. Therefore we take the first N predictions on the list and evaluate the performance of the models based on the success of these N predictions, for N = 1, ..., 5, 10. In this case, a hit occurs if the true action is predicted in any of these N guesses.",
               "We also report the likelihoods of the models on the test data, since it's our optimization criteria and is another indication of how well the model represents the data. In we present the hit ratio results for N = 1, ..., 5, 10 on the known users for 3 component mixture model and in hit ratios for 10 component mixture models are presented. Regardless of the number of components and the length of the prediction list, personalized models outperformed the cor- responding global models. Position specific and non position specific maxent models' hit ratios are very close to each other, but non position specific model performed better than the position specific in the 10-component mixture model and for N2 in 3-component mixture model. An interesting point about the non position specific maxent model is the altitude of the effect of personalization on it. Although the position specific model is better in all test cases for the global models, personalization improves the non position specific model more, such that it's able to beat the position specific model.",
               "As follows from the plots, personalized Markov mixture model is the best predictor for the known users. However non position specific maxent was able to perform better for N2 in the 3-component model. This result may seem surprising considering the fact that first order Markov models are making use of only bigrams, whereas maxent models are using triggers in addition to bigrams, but it's not. The goal of maximum entropy is to choose the most general model within the set of functions satisfying the constraints. Markov models, on the other hand, do not have this property, and thus may fit the training data better. The advantage of maxent models can be seen more clearly when looked at the results for all users. and present the hit ratios of the personal models for 3-component and 10-component mixture models, respectively. Non position specific maxent outperforms Markov model for all prediction list lengths, but 4 in 3-component mixture model, and it performs worse only for N = 3, 4, 5 in the 10-component mixture model.",
               "In we report the likelihood of the personalized models. Best likelihood is achieved by Markov mixture model and non position specific maxent mixture follows it. Position specific maxent mixture performs even worse when the number of components is increased.",
               "As discussed in Section 4 we are also interested in the interpretation of the user behavior clusters. Each user session is grouped into the cluster for which it has the highestU,k value. For cluster visualization we chose 100 sample user sessions randomly from each cluster. Each unique action is represented by a unique color (action-color mapping is also shown in the . Hence, each user session is represented as a row of colored squares, where each squares corresponds to an action. As an example, first row of Cluster 9 in represents a user session in which the user first views details of a document, then updates the cached version of that document and then views details of the same document, again, or a new one. This visualization technique has enabled us to actually identify different behavior models among CiteSeer users. Users identified as belonging to Cluster 8 by the Markov model ( ), for example, go to CiteSeer homepage, submit document queries, view document details and context, and update the cached document. Cluster 9 users, on the other hand, view context of a document and update the cached version, with hardly taking any other actions. The interesting point about Cluster 9 is that these users go to the context page of a document directly, without submitting a query. This is probably an indication of browsing CiteSeer via another search engine. Following , it's also clearly seen that Cluster 6 represents the users who after viewing the context of a document, correct the abstract and download or update the cached version of it. Maximum entropy model ) is able to capture the mentioned behavior models, as well as more complex ones. Cluster 4 of maximum entropy model represents users who probably browse CiteSeer through another engine. At first sight Cluster 6 may seem to be presenting the same pattern, however there's a huge difference between the two. Users of Cluster 6 do submit a document query before the document details -download cycle, suggesting that after viewing document details or downloading they go back to the query results page to browse the rest of the results. Although some session in Cluster 1 of Markov model show a similar pattern, it's not as clear. Maximum entropy model was also able to identify a cluster of users, Cluster 3, who check the recommendations after viewing the document information. These users also happen to correct document abstracts or titles.",
               "Overall, we conclude that personalized mixture of maximum entropy and Markov models provide a decent predictive model for representing user behav- iors, and a useful mechanism for identifying and interpreting user behavior patterns for the Web data."
          ],
          "paper_id": "2383c7e0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 11,
          "fromPaper": "Probabilistic User Behavior Models"
     },
     {
          "head": {
               "n": "7",
               "text": "Conclusions and Future Work",
               "type": "conclusion"
          },
          "paragraphs": [
               "We described a mixture model based approach to generating and visualizing individual behavior models for CiteSeer users. We represented the Web data as a collection of ordered action sequences for each user. We introduced a maximum entropy based approach for modeling the user behavior, motivated by its ability to model long term dependencies in data sequences. In addition to maximum entropy model, we also investigated the use of first order Markov mixture models. We demonstrated that both methods are able to generate strong predictive models, while at the same time showing their individual strengths and weaknesses. Markov model performed better for predicting the behavior of the known users, whereas maximum entropy model was better at modeling the global behavior model, and therefore the unknown users also. We used a simple method to achieve personalization, yet managed to avoid the insufficient data problem of traditional personalization techniques. By using mixture model based clustering we were also able to identify and visualize specific behavior patterns of CiteSeer users, where it was demonstrated that maximum entropy model's computational cost pays off at recognizing complex dominant patterns of user behavior.",
               "We plan to expand our work on identifying specific user behavior patterns and provide customized services, for instance customized recommendations, for each of the behavior model groups. We are also interested in naming these groups of users. We intend to perform real-time experiments on CiteSeer with our maximum entropy based predictive model. We have started working on using the time information better for the purpose of modeling the user behavior. We believe that weighing the recent user actions more than past user actions in the likelihood optimization step, could result in better predictions."
          ],
          "paper_id": "2383c7e0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 12,
          "fromPaper": "Probabilistic User Behavior Models"
     },
     {
          "head": {
               "n": "8",
               "text": "Acknowledgements",
               "type": "conclusion"
          },
          "paragraphs": [
               "This work has been partially supported by a grant from Lockheed Martin. We would like to thank Steve Lawrence for making the CiteSeer log data available to us."
          ],
          "paper_id": "2383c7e0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 13,
          "fromPaper": "Probabilistic User Behavior Models"
     }
]