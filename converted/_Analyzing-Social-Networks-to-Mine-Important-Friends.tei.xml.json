[
     {
          "head": {
               "n": "0",
               "text": "abstract",
               "type": "abstract"
          },
          "paragraphs": [
               "The emergence of Web-based communities and social networking sites has led to a vast volume of social media data, embedded in which are rich sets of meaningful knowledge about the social networks. Social media mining and social network analysis help to find a systematic method or process for examining social networks and for identifying, extracting, representing, and exploiting meaningful knowledge-such as interdependency relationships among social entities in the networks-from the social media. This chapter presents a system for analyzing the social networks to mine important groups of friends in the networks. Such a system uses a tree-based mining approach to discover important friend groups of each social entity and to discover friend groups that are important to social entities in the entire social network."
          ],
          "paper_id": "24ad53c0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 0,
          "fromPaper": "Analyzing Social Networks to Mine Important Friends"
     },
     {
          "head": {
               "text": "INTRODUCTION",
               "type": "introduction"
          },
          "paragraphs": [
               "Due to advances in technology, Web-based communities and social networking sites have emerged. They have facilitated collaboration and information sharing between users, and have led to a vast volume of social media data. Intuitively, social media can be considered as forms of electronic communication (e.g., Web sites such as Twitter for social networking and micro-blogging) through which users create online Web-based communities to share information, ideas, personal messages, and other contents such as images and videos. More formally, social media refer to groups of electronic communications (e.g., for Web-based or mobile-based applications ) that (a) build on the ideological and technological foundations of Web 2.0 and (b) allow the creation and exchange of user-generated content. Common social media include (a) blogs or tweets (e.g., Blogger, Twitter ), (b) collaborative projects (e.g., Wikipedia), (c) content communities (e.g., Flickr, SlideShare, YouTube ), (d) social networking sites (e.g., Facebook, Google+, LinkedIn, MySpace), (e) virtual game worlds (e.g., multiplayer online role-playing games like EverQuest and its successors, as well as World of Warcraft), and (f) virtual social worlds (e.g., Second Life ). Embedded in these social media data are rich sets of meaningful knowledge. This leads to social media mining, which aims to extract, represent, and exploit the rich sets of meaningful knowledge from vast volumes of social media data ranging from those in digital textual forms to those in rich multimedia formats.",
               "Social media mining can also be considered as an interaction between data mining and social computing. Data mining refers to non-trivial extraction of implicit, previously unknown, and potentially useful information from data (e.g., social media data); social computing intersects social behaviour and computing systems in the sense that it computationally facilitates social studies and human-social dynamics in social networks, creates social conventions through the use of computer software, and designs information and communication technologies to deal with social context. An important social media-mining task is to discover meaningful knowledge about the social networks residing in the social media data. A social network ) is a structure made of social entities (e.g., individuals, corporations, collective social units, or organizations) that are linked by some specific kinds of interdependency (e.g., friendship, kinship, common interest, beliefs, or financial exchange). A social entity is connected to another entity as his friend, next-of-kind, collaborator, co-author, classmate, co-worker, team member, or business partner. As such, social network analysis -which often refers to a systematic method or process for identifying useful social information like interdependency among social entities (i.e., social relationships and connections) from the social networks-is in demand.",
               "Nowadays, various social computing applications such as blogs, email, instant messaging, social bookmarking, social networking, and wikis have been widely popularized so that people could interact socially via computing space. For instance, a Facebook user can create a personal profile, add other users as friends (who can be further categorized into different customized lists such as close friends, acquaintances, or family), exchange private messages, post messages on friends' walls, and join common-interest user groups. Similarly, a LinkedIn user can create a professional profile, establish connections to other users (who can be further annotated with tags corresponding to overlapping categories such as colleagues, classmates, business partners, and friends), exchange messages, recommend other users, and join common-interest user groups. A Google+ user can create a profile and add other users in one or more of his circles (e.g., circles for his friends, family, acquaintances, and followers). He can also share some posts, photos, or videos among users in the same circles.",
               "Regardless which of the above social networking sites are used by users, there are some commonalities among the social experience of these users. Specifically, a user may have many friends in his social network. The number of friends may vary from one user to another. It is not uncommon for a user to have hundreds or thousands of friends. From the ego-centric prospective of a single user, some of his friends are more important than some others. It is desirable to discover his important groups of friends. To a further extent, from the socio-centric prospective of all users in the social networks, some of their groups of friends are important to some others. It is also desirable to discover groups of friends that are important in the networks. Hence, an objective of this chapter is to propose a tree-based system that (a) discovers important friend groups for a social entity and (b) discovers friend groups that are important to the entities of interest in the social networks.",
               "The remainder of this chapter is organized as follows. We first provide background. Then, we focus on our proposed social network analysis and social media mining system. Afterwards, we outline our plan for future extensions of our system, and summarize the key features of our system in the conclusion."
          ],
          "paper_id": "24ad53c0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 1,
          "fromPaper": "Analyzing Social Networks to Mine Important Friends"
     },
     {
          "head": {
               "text": "BACKGROUND",
               "type": "relatedwork"
          },
          "paragraphs": [
               "Social media mining and social network analysis-which can be considered as a fusion of data mining and social computing-have become emerging research topics in the field of computer science. This is evidenced by numerous works  , and International Workshop on Social Networks and Social Web Mining ), as well as (c) journals over the past few years. Examples of these research works include clustering and classification of tweets ), mining and analysis of co-authorship networks , and visualization of social networks . In this chapter, we focus on a different aspect of social media mining and social network analysis-namely, frequent pattern mining on social networks.",
               "Frequent pattern mining usually searches traditional transactional databases (e.g., sales transactions capturing customers' purchases) for implicit, previously unknown, and potentially useful patterns consisting of frequently co-occurring merchandise items. The classical algorithm-namely, Apriori -uses the candidate-and-test paradigm to mine frequent patterns using the support measure (which counts the presence of merchandise items) as the criterion for determining the interestingness of the patterns returned to the users. Numerous algorithms have been proposed over the past two decades. For example, tree-based algorithms ) speed up the mining process by avoiding the candidate-and-test paradigm of Apriori-based algorithms. Several alternative interestingness measures have also been proposed. For example, the use of share as the interestingness criterion not only captures the presence of merchandise items but also their quantities. However, many of the existing frequent pattern-mining algorithms-whether they are Apriori-based or tree-based, using support or share as the interestingness criterion-mine traditional transactional databases but not social networks or social media data."
          ],
          "paper_id": "24ad53c0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 2,
          "fromPaper": "Analyzing Social Networks to Mine Important Friends"
     },
     {
          "head": {
               "text": "OUR SOCIAL NETWORK MINING SYSTEM",
               "type": "relatedwork"
          },
          "paragraphs": [
               "In this section, we present our tree-based mining system that mines social networks embedded in social media data. Specifically, the algorithm analyzes social networks to discover important friend groups. In particular, the system provides users with two functions: (a) Finding important groups of friends in an ego-centric prospective (i.e., friend groups that are important to a specific user) and (b) finding important groups of friends in a socio-centric prospective (i.e., friend groups that are important to the entire social networks)."
          ],
          "paper_id": "24ad53c0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 3,
          "fromPaper": "Analyzing Social Networks to Mine Important Friends"
     },
     {
          "head": {
               "text": "Key Concepts for Finding EgoCentric Friend Groups",
               "type": "relatedwork"
          },
          "paragraphs": [
               "Let us consider a social network for a social networking site (e.g., Facebook). Then, interdependency relationships among social entities can be captured in a collection of friend lists. From the ego-centric prospective, a friend list of a particular social entity contains his friends in the social network. Recall that friends can be categorized into close friends, acquaintances, family, or other categories. Friends within each category are not necessarily of the same importance. Some of his friends are more important than others. Hence, for each social entity E, we capture in his friend list not only his friends but also the importance of his friends with respect to E. For simplicity, the importance of a friend F with respect to E is measured by the number of messages F posted on E's wall. Note that, we are not confined to this importance measure, other measures or criteria are possible. shows an illustrative example of seven related friend lists. The first row shows the friend list for Don, who has three friends: Amy, Ed, and Gary. The list also captures the number of postings made by Don's friends on his wall. Specifically, Amy, Ed, and Gary, respectively, made 30, 40, and 10 postings on Don's wall. With respect to Don, the importance of friend groups {Amy}, {Ed}, and {Gary} are 30, 40, and 10, respectively. To a further extent, with respect to Don, the importance of friend groups {Amy, Ed}, {Amy, Ed, Gary}, {Amy, Gary}, and {Ed, Gary} are 30+40=70, 30+40+10=80, 30+10=40, and 40+10=50, respectively. We use imp(FG, E) to denote the importance of a friend group FG with respect to a social entity E. For example, imp({Amy}, Don) = 30 and imp({Ed, Gary}, Don) = 50.",
               "In an ego-centric social network of a social entity E, a group of friends of E is considered to be important to E if members of this group have posted enough messages on E's wall (i.e., the total number of messages posted by members of this group on E's wall is equal to or higher than a user-specified threshold minImp). For example, let us consider Don's friend list shown in . If the user-specified threshold minImp = 25%, then {Amy} is an important friend group to Don because she made 30 postings25% of a total of 30+40+10 = 80 postings on Don's wall. Similarly, {Amy, Ed} is also an important friend group to Don because both Amy and Ed together made 30+40 = 70 postings25% of a total of 80 postings on Don's wall. For completeness, {Amy}, . An example of friend lists {Amy, Ed}, {Amy, Ed, Gary}, {Amy, Gary}, {Ed}, and {Ed, Gary} are all the important friend groups to Don. Moreover, it is interesting to observe the following:",
               "1. If a friend group FG is important to a social entity E, then any friend group formed by adding new members into FG is guaranteed to be important to E too. 2. If a friend group FG is important to a social entity E, then it is not necessary that all subsets of FG are important to E (i.e., the \"importance\" measure does not satisfy the Apriori property).",
               "For instance, knowing {Amy} is an important friend group to Don implies that all supersets of {Amy} including {Amy, Ed}, {Amy, Ed, Gary}, {Amy, Gary} are also important friend groups to Don. However, the converse is not true. For instance, the friend group {Ed, Gary} is important to Don, but its subset {Gary} is unimportant to Don. In other words, based on Observation 2, knowing that {Gary} is unimportant to Don, we still need to examine whether or not its superset (e.g., {Ed, Gary}) is important to Don. Fortunately, finding ego-centric friend groups is manageable as we are dealing with only a single friend list. Moreover, due to Observation 1, once we found an important friend group FG to a social entity E, we do not need to examine its superset FG(because imp(FG, E)imp(FG, E)minImp for FG? FG).",
               "network if members of this group have put together enough wall postings on the walls of one or more social entities (i.e., the total number of messages posted by members of this group is equal to or higher than a user-specified threshold minImp). For example, let us consider all friend lists shown in . If the user-specified threshold minImp = 25%, then although {Amy} is an important friend group to Don, she is not an important friend group in the entire network because she made only 30+20+20+30+20 = 120 postings < 25% of a total of 560 wall postings in the entire network. "
          ],
          "paper_id": "24ad53c0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 4,
          "fromPaper": "Analyzing Social Networks to Mine Important Friends"
     },
     {
          "head": {
               "text": "Key Concepts for Finding Socio-Centric Friend Groups",
               "type": "relatedwork"
          },
          "paragraphs": [
               "Besides finding ego-centric friend groups, our system also provides users with the functionality of finding socio-centric friend groups. Here, the system finds the friend groups that are important to the entire social networks consisting of multiple friend lists. In a socio-centric social network, a group of friends is considered to be important to the 3. If a friend group FG is important to the entire social network, then it is not necessary that all subsets of FG are also important to the entire social network (i.e., the \"importance\" measure does not satisfy the Apriori property). 4. If a friend group FG is important to the entire social network, then it is not necessary that all supersets of FG are also important to the entire social network.",
               "For instance, the friend group {Amy, Bob} is an important socio-centric friend group in the entire . An example of the importance of friend lists network, but its subset {Amy} is unimportant. In other words, based on Observation 3, knowing that {Amy} is unimportant, we still need to examine whether or not its superset (e.g., {Amy, Bob}) is important. What makes the mining of socio-centric friend groups more challenging than the mining of ego-centric friend groups is due to Observation 4. Knowing that {Amy, Bob} is important, we still need to examine whether or not its superset (e.g., {Amy, Bob, Holly}) is important. When dealing with a single friend list, adding more members to the friend group would increase the value for the \"importance\" measure. However, an increase in the number of members of the group would lead to a decrease in the chance of all members of the group contribute to the posting on the same wall, which in turn would decrease the value for the \"importance\" measure. For instance, adding Holly to the friend group {Amy, Bob} increases the \"importance\" value from 20+10=30 to 20+10+10=40 with respect to postings on Fred's wall, but Holly does not post on Ed's or Gary's wall. Hence, pruning is unavailable; exhaustive enumeration of all friend groups is impractical.",
               "As the mining of important socio-centric friend groups is more computationally intensive and challenging, we need a better and practical solution. To facilitate effective pruning, our system finds candidates for important socio-centric friend groups by using an upper bound of the \"importance\" measure. Specifically, the system computes the upper bound by summing the importance of relevant friend lists (instead of the importance of friend group). If an upper bound for a friend group FG (i.e., sum of the importance of relevant friend lists containing FG) is lower than minImp, then the upper bound for any superset of FG (i.e., sum of the importance of relevant friend lists containing the superset of FG) is guaranteed to be lower than minImp. In other words, such an upper bound satisfies the Apriori property so that pruning is possible. The following summarizes our observation:",
               "5. If an upper bound of the importance of friend group FG meets or exceeds the user-specified minImp threshold, then the upper bound of the importance of any subset of FG is guaranteed to meet or exceed the user-specified minImp threshold.",
               "Once all candidates are found, we perform a post-processing step to filter out the false positives and return to the user the true positives (i.e., friend groups that are important to the entire network). For instance, given the seven friend lists shown in , we compute the importance of these friend lists (as shown in ) and use them as an upper bound for the importance of socio-centric friend groups. As Amy appears on Don's, Ed's, Fred's, Gary's and Bob's friend lists, the upper bound of the importance of the friend group {Amy} is the sum of importance of these five friend lists, i.e., 80+120+70+110+30 = 410. Similarly, as both Amy and Bob appears on Ed's, Fred's, and Gary's friend lists, the upper bound of the importance of the friend group {Amy, Bob} is the sum of importance of these three friend lists, i.e., 120+70+110 = 300. As Amy, Bob and Holly all appear only on Fred's friend list, the upper bound of the importance of the friend group {Amy, Bob, Holly} is the importance of Fred's friend list, i.e., 70. Based on Observation 5, our system prunes those friend groups with low values for the upper bounds because their supersets would have even lower values for the upper bounds.",
               "To tighten the upper bound, we could remove those friends that are unimportant to the entire network because they would not contribute to the importance of any of their supersets. shows the tightened upper bound for the importance of friend lists in . For instance, as Holly does not contribute too much to the postings in the entire network, she is not considered important to the network. By pruning her, the upper bound of the importance of the friend group {Amy} is tightened from 80+120+70+110+30 = 410 to 70+120+60+110+10 = 370. Let us use UB(imp(FG)) to denote the tightened upper bound of the importance of a friend group FG with respect to the e n t i r e s o c i a l n e t w o r k . F o r e x a m p l e , UB(imp({Amy})) = 70+120+60+110+10 = 370."
          ],
          "paper_id": "24ad53c0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 5,
          "fromPaper": "Analyzing Social Networks to Mine Important Friends"
     },
     {
          "head": {
               "text": "Capturing Social Networks by an Important-Friend Tree (IF-Tree)",
               "type": "relatedwork"
          },
          "paragraphs": [
               "In the previous sections, we discussed the key concepts for finding both ego-centric and socio-centric friend groups. An observant reader may notice that, between the two mining tasks performed by our proposed system (i.e., mining of ego-centric friend groups, mining of socio-centric friend groups), mining of socio-centric friend group is more computationally intensive. In the remainder of this section, we focus on the algorithmic details of how we use a tree-based approach to mine friend groups that are important to the entire network. In particular, we discuss how we build an important-friend tree (IF-tree) to capture the relevant information about the social network and how we use the IF-tree for the mining of important friend groups.",
               "Each node of an IF-tree consists of (1) a friend F, (2) the tightened upper bound of the importance of F, (3) a parent pointer pointing to its parent node, (4) a list of child pointers pointing to its child nodes, and (5) a node pointer linking to the next node of the same social entity E in the IF-tree. In addition, the name of the social entity E is also maintained at the last node of the friend list of E.",
               "The IF-tree is constructed with two scans. First, the system scans the friend list of each social entity E once to compute the upper bound of the importance of social entity E in the network. Then, the system removes unimportant social . An example of the tightened importance of friend lists . The content of the IF-tree after inserting Don's friend list entities (i.e., entities with importance measure < user-specified minImp threshold) and sort all remaining important social entities according to their importance values. For instance, to construct an IF-tree for the friend lists shown in with minImp=25%, our system scans these lists and obtains upper bound of the importance of social entities. As the upper bound of the importance of Fred, Gary and Holly are 90, 80+30 = 110 and 70+60 = 130 (which are all lower than minImp = 25% of a total of 560 wall postings in the entire network), their importance values are lower than the user-specified minImp threshold. So, they are pruned. Note that these pruned unimportant friends have no influence on the computation of important friend groups. The removal helps to tighten the upper bound and to reduce the number of false positives (before the final post-processing step to keep only those true positives). The remaining social entities are sorted according to their upper bounds: UB(imp({Amy})) = 70+120+60+110+50 = 410, UB(imp({Bob})) = 120+60+110+50+10 = 350, UB(imp({Cara})) = 120+60+110 = 290, UB(imp({Don})) = 120+60+50 = 230, and UB(imp({Ed})) = 70+50+50 = 170.",
               "Our system then scans the friend lists the second time to construct the IF-tree. With this scan, all the friend lists are inserted into the IF-tree oneby-one (with except of those unimportant friends identified in the first scan). For example, after we discarded those unimportant friends (namely, Fred, Gary, and Holly), our system scans the friend lists the second time. The first list to be scanned is Don's list. The system ignores Gary (an unimportant social entity) from the list, and inserts ?Amy:70, Ed:70 (Don)?-which indicates that Amy and Ed are friends of Don with a tightened upper bound of the importance of any entity in Don's list-into the IF-tree. See . Next, the system scans Ed's list and tries to insert ?Amy:120, Bob:120, Cara:120, Don:120 (Ed)? into the IF-tree. We note that the previously inserted list (i.e., Don's friend list) and this list (i.e., Ed's friend list) share the common prefix (namely, Amy). To make the IF-tree more compact (and thus save memory space), the system increments the upper bound value of Amy by 120 (which increases the value from 70 to 70+120=190) and inserts ?Bob:120, Cara:120, Don:120 (Ed)? as a child of Amy:120. The header table is also updated accordingly, as shown in .",
               "The other five friend lists are scanned and inserted in a similar fashion. shows the contents of our IF-trees after the insertion of each of the remaining five friend lists. It is interesting to observe the following: 6. The system only needs to perform the projection for each social entity in the header table once. "
          ],
          "paper_id": "24ad53c0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 6,
          "fromPaper": "Analyzing Social Networks to Mine Important Friends"
     },
     {
          "head": {
               "text": "Mining of Important Socio-Centric Friend Groups from the IF-Tree",
               "type": "relatedwork"
          },
          "paragraphs": [
               "Observed from the above tree construction step, the IF-tree keeps the friend information about the social network in a highly compact tree structure. This enables a fast subsequent mining of important socio-centric friend groups from the IF-tree. Our system finds important friend groups by recursively mining the IF-tree to generate candidate important friend groups without any additional scans of the original friend lists. Hence, the basic operations in IF-tree mining are (1) the construction of the projected network for a potentially important friend group and (2) the recursive mining of the further potentially important friend extensions of that group. Our algorithm performs these operations by creating conditional pattern-base (or pattern-base in short) for each potentially important friend group and examining all such pattern-bases for conditional IF-trees consisting of the set of potentially important friend groups occurring with a suffix group. Let us continue with our running example. Our system starts the mining process by constructing the projected network for the last social entity (namely, Ed) in the header table of the IF-tree. The projected network for Ed is constructed by taking all the branches from the IF-tree with suffix Ed. See (a). After creating the projected network, the IF-tree is adjusted by pushing up the information at all nodes for Ed to their respective parent. For example, the information of node \"Ed:120\" (i.e., Bob, Don) and node \"Ed:50\" The conditional IF-trees are constructed by removing all unimportant friends from the projected network. Because none of the friends in the header table of Ed's projected network is important (i.e., upper bound values are below minImp), we remove all friends from Ed's pattern-base. Hence, no further candidate important friend group will be generated from Ed's conditional database, which terminates mining for Ed.",
               "Mining for the next friend in the header table (namely, Don) is then performed by constructing Don's pattern-base and conditional trees (as shown in [b]) in the same fashion from the IF-tree. After constructing the pattern-base for Don, the original IF-tree is again adjusted by pushing the information at each node for Don to its parent. The candidate friend group {Cara, . Important groups of friends Don} is generated first from the conditional tree for Don in (b) with an upper bound value of 180, and a similar recursive mining process (of constructing the pattern-bases and conditional trees) is followed for {Cara, Don} and others. The pattern-base for {Cara, Don} is shown in (c). Note that, to ensure the recursive mining, the tree adjustment phase of pushing the information towards the parent for a deleted node is also performed, while constructing conditional trees from a pattern-base. The pattern-base and conditional tree for the next extension of {Cara, Don}, i.e., {Bob, Cara, Don} is shown in (d). Consequently, the set of all candidate important socio-centric friend groups generated by mining the IF-tree is shown in . Our system applies an additional scan of friend lists as a postprocessing step, and eliminates all unimportant friend groups (i.e., false positives) from the set of candidate important friend groups. media for all and only those important friend groups that satisfy the user-specified constraints directly-without having a post-processing step to filter out those important friend groups that do not satisfy the user-specified constraints.",
               "Currently, our presented system returns to users all important friend groups in a textual form, i.e., a textual list of all friend groups. As suggested by the adage \"a picture is worth a thousand words,\" visual representation of the mining results is usually more comprehensive to users. Thus, it is desirable to show the mining results interactively by applying the concepts of visual analytics. As such, to enhance user experience in exploring the social networks, our second future research direction is to extend our system by incorporating visual analytics and interactive technologies ) so that the resulting interactive visual analytics system could mine social networks, from which the mined important friend groups are returned to the users in visual forms."
          ],
          "paper_id": "24ad53c0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 7,
          "fromPaper": "Analyzing Social Networks to Mine Important Friends"
     },
     {
          "head": {
               "text": "FUTURE RESEARCH DIRECTIONS",
               "type": "relatedwork"
          },
          "paragraphs": [
               "So far, we have presented a system for analyzing social networks for mining important friend groups. The system discovers the important friend groups based on the frequency and importance of friends within the social networks. In many real-life situations, users may want to focus the mining on certain friend groups by specifying some constraints expressing their interest. A na?ve approach of handling these user-specified constraints is to first find all important friend groups and then apply a post-processing step to filter out those that do not satisfy the userspecified constraints. As future work, we plan to adapt the constraint-based association rule mining techniques to social media mining and social network analysis. Specifically, we plan to extend our system by pushing constraints into the mining process so that the users could freely express their interest by specifying constraints and the resulting system could mine from social"
          ],
          "paper_id": "24ad53c0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 8,
          "fromPaper": "Analyzing Social Networks to Mine Important Friends"
     },
     {
          "head": {
               "text": "CONCLUSION",
               "type": "conclusion"
          },
          "paragraphs": [
               "The emergence of social networking sites such as Facebook has led to a vast volume of social media data, embedded in which are rich sets of meaningful knowledge such as important friends of social entities in a social network. In this chapter, we applied social media mining and social network analysis techniques, which are non-trivial integration of data mining and social computing. Moreover, we also presented a system for analyzing social networks to mine important groups of friends. Such a tree-based system systematically examines social networks to identify, extract, represent, and exploit friendship relationships among social entities. Specifically, the system first computes the importance of friend groups for each social entity within the social network of interest. The system then captures the relevant importance of each friend group within the network in the IF-tree, from which important friend groups are mined. By recursively extracting appropriate paths from the IF-tree, the system finds meaningful knowledge such as friend groups that are important to the social network."
          ],
          "paper_id": "24ad53c0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 9,
          "fromPaper": "Analyzing Social Networks to Mine Important Friends"
     }
]