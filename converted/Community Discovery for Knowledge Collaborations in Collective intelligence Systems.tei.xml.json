[
     {
          "head": {
               "n": "0",
               "text": "abstract",
               "type": "abstract"
          },
          "paragraphs": [
               "Knowledge collaborative communities play an important role in collective intelligence systems. To discover a knowledge collaborative community, we need to consider not only the structure of a network but also the performance of knowledge collaboration among members within the community. Traditional community discovery approaches are not suitable to discover knowledge collaborative communities since most of them focus too much on the network topologies, and ignore some other important factors. In this paper, we propose two community discovery approaches, which can be used in different sizes of networks, and take more knowledge collaboration factors into account. Compared with some other existing approaches, the proposed approach can perform better in forming knowledge collaborative communities for multi-domain problem solving."
          ],
          "paper_id": "21b96820-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 0,
          "fromPaper": "Regular Paper Community Discovery for Knowledge Collaborations in Collective intelligence Systems"
     },
     {
          "head": {
               "n": "1.",
               "text": "Introduction",
               "type": "introduction"
          },
          "paragraphs": [
               "Collective intelligence is aggregate intelligence that emerges from the collaboration and competition of many individuals . For decades, knowledge collaboration and collective intelligence have been considered as effective ways for enhancing problem solving and decision making capabilities of human and computer systems , , . Especially in nowadays, with the rapid evolution of computer and Internet technologies, people more rely on collaborations to solve complex problems. Meanwhile, more and more information and knowledge are generated by groups of experts rather than individuals , . Hence, how to facilitate the generation of collective intelligence has become an important research question.",
               "In a collective intelligence system, a Knowledge Collaborative Community (KCC) can be considered as a group of experts combining and sharing their knowledge to solve a problem. Such hidden knowledge is required for many recommendation systems for complex problem solving or cross-domain problem solving. However, in large scale and fast changing collective intelligence systems, how to select suitable experts from candidates with overlapping or even identical knowledge and skills, and ensure successful collaboration among them is still a challenging problem.",
               "In this paper, we introduce a community discovery approach for recommending suitable expert groups for multi-domain problems. The experts may be from different domains, and connected together through some interactions. The proposed approach can analyse and estimate the collaboration quality of expert groups (i.e., how well they can work together), and recommend suitable groups for a cross-domain complex problem.",
               "The rest of this paper is arranged as follow. In Section 2, some related work has been reviewed. The problem description and related definitions are proposed in Section 3. Factors which may affect the knowledge collaboration are introduced in Section 4. The Knowledge Collaborative Community Discovery (KCCD) approach for centralized networks and the 2-Step approach for distributed networks are introduced in Section 5. The experimental results and analysis are given in Section 6. Finally, the paper is concluded in Section 7. In recent years, community discovery in networks has attracted the attention of researchers from different areas including collective intelligence, social network analysis, knowledge engineering, etc , , . In general, community can be considered as a kind of hidden knowledge in network or social transactional data . A community can be discovered by using data-driven approaches or domain expertise. Community detection focuses on understanding and supporting knowledge transferring and collaboration. Several popular community detection model will be introduced in this section."
          ],
          "paper_id": "21b96820-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 1,
          "fromPaper": "Regular Paper Community Discovery for Knowledge Collaborations in Collective intelligence Systems"
     },
     {
          "head": {
               "n": "2.",
               "text": "Related Work",
               "type": "relatedwork"
          },
          "paragraphs": [
               "The Dynamic Community (DC) was proposed by Ye et. al , . The goal of a DC approach was to find experts for knowledge collaboration. It was supposed that there was a candidate who had a problem to be solved. Then the candidate used the DC approach to discover experts who might help the candidate. The candidate posted the problem to potential experts and waited for solutions. All chosen experts and the candidate together were called as a Dynamic Community . The DC method includes all experts who have related expertise and have connections with the candidate, while the proposed approach in this paper includes only the experts with required expertise. Wikipedia is an internet-based, user contributed knowledge collaboration platform, and is a very popular tool to create or change contents (articles). The goal of Wikipedia was to maintain a neutral point of view . The mechanism of Wikipedia could support manyto-many communication and editing. Our approach is different from Wikipedia in two aspects. Firstly, Wikipedia has many participants, but the KCCD/2-Step approach proposed in this paper only contains necessary experts. Secondly, Wikipedia allows all users, no matter what their specialised areas are, to contribute to collaborated knowledge. However, in order to guarantee the quality of KCC for mutli-domain problems, our community discovery approaches only include experts who have high knowledge levels in the required domains to a KCC.",
               "A Dynamic Social Networking System (D-SNS) was introduced by Ohira et al. . The D-SNS can be used to support knowledge collaboration in distributed networks. The D-SNS built a well connected network via \"hub\" candidates. In their system, if a questioner (requester) wanted to solve a problem, all candidates who had related expertise and had connections with the questioner, would receive the problem description. Then some of chosen candidates replied the questioner, and the questioner could judge whether the multi-domain problem could be solved by these candidates. The D-SNS can be used to develop a well connected network. However, the Collective Attention Cost in D-SNS was high since all candidates connected to the questioner with required expertise would spend their attention on understanding the multi-domain problem, and some of them needed to spend much time on finding a solution of the multi-domain problem. In fact, only a few experts in the same field were needed to contribute on the solution of a requested problem. The differences between D-SNS and our community discovery approaches are that (1) D-SNS uses \"hub\" candidates to build a well connected network to overcome the poor performance in a poorly connected network, while our approaches have high probability to discover a KCC in any network without spending resources to rebuild a network; (2) D-SNS does not control the number of experts when building a network, while our approaches assemble a KCC with only necessary experts; and (3) D-SNS assumes that every expert has a same knowledge level, while our approaches consider different knowledge levels of different experts, and choose experts with higher knowledge levels. multi-domain problem p. As p requires multi-domain expertise, which q does not have, we need to find a knowledge collaborative community for solving the p. In addition, we also assume that each expert can only have at most one specialised domain. Namely, most experts usually have substantial knowledge in their own specialised domains, while in other domains, their knowledge might not be sufficient. The networks could be classified into two types based on their topologies, i.e., centralized networks and distributed networks. In centralized networks, we suppose there is a central control system and all nodes of network could be explored. When a multi-domain request is proposed, the central control system can go through all available nodes in the system and compose a community for the request. However, for distributed networks, there is no global view for all nodes in a network, and the node information is stored in distributed repositories without central control system. Obviously, approaches for discovering KCCs in the two types of networks should be different. We also assume that the factors which may impact the efficiency of knowledge collaboration for centralized networks and distributed networks are same.",
               "In this paper, two approaches are proposed for KCC discovery, i.e., the KCCD approach and the 2-Step approach. The KCCD is developed for community discovery for centralized networks, and the 2-Step approach is designed for distributed networks. Definition 1: A network N is an undirected graph, which is defined as a two-tuple, i.e., N = (A, E). A = {a 1 , . . . , a n } is a finite node set which contains all nodes in N. E = {e 1 , . . . , e r } is a finite arc set which contains all arcs in N. Definition 2: A node (a i ) in N represents an expert in the system.",
               "It is defined by a five-tuple, i.e., a i = (nID, domain, rank, coAuthor, kcc). nID is the unique id of a i . domain is the tag which indicates the specialised domain of a i . rank is the number which indicates the knowledge level of a i (higher rank value means the expert has higher knowledge level in domain). kcc is a set of Knowledge Collaborative Communities that a i belongs to. coAuthor is a matrix which represents the co-authorship relationships of a i and other expert nodes in the system (see Eq. ). a k in coAuthor is an expert node with co-publications with a i . n ik in coAuthor is the numbers of copublications between a i and a k ."
          ],
          "paper_id": "21b96820-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 2,
          "fromPaper": "Regular Paper Community Discovery for Knowledge Collaborations in Collective intelligence Systems"
     },
     {
          "head": {
               "n": "3.",
               "text": "Problem Description and Definitions",
               "type": "modelling"
          },
          "paragraphs": [
               "A collective intelligence system can be modeled as a network containing a number of interactive experts (nodes). The network can also be represented as a graph, where the nodes in the graph stand for the experts in the network, and the graph edges denote the interaction relationships among experts . There can be different kinds of interaction relationships among experts, e.g., co-authorship, membership of the same department, participant of a conference, or citation. In this paper, we focus on the analysis of co-authorship as the data can be easily obtained.",
               "This research is based on the following assumptions. Suppose there is an expert node q in the network who wants to solve a Definition 3: An arc e i j is an undirected weighted edge in N. It defined by a three-tuple e i j = (a i , a j , w i j ) where a i and a j are the connected expert nodes of e i j , and w i j is the weight of e i j .",
               "e i j is established after a i and a j have some interactions. Meanwhile, the establishment of e i j means that there is an effective knowledge collaboration path between a i and a j . In addition, w i j (the weight of e i j ) denotes the knowledge collaboration degree between the two expert nodes, namely, how effective collaborations a i and a j can have. As we mainly focus on the co-authorship relationships here, an interaction means that the two expert nodes have a co-publication. Definition 4: A multi-domain problem p i is a problem, which needs to be solved by using knowledge from more than one do-mains. p i can be defined by a two-tuple, p i = (pID, T PC), where pID is a unique id of the problem, and T PC is a matrix denotes required knowledge for solving p i (see Eq. ). In Eq. , tpc j is a required knowledge domain for solving p i , andi means how important the knowledge in tpc i in solving p i and the sum of values ofi is 1. (Here, we assume knowledge from different knowledge domains has different contributions for solving p i ).",
               "Definition 5: A requester q is a node in N with a multi-domain problem to be solved. Any node in N can become a requester if it has a multi-domain problem, and then, will call for a KCC to solve the problem. After solving the problem (or failing to solve the problem), a requester will turn back to a normal node. Definition 6: A Knowledge Collaborative Community kcc i is a subgraph in N, which is defined by a six-tuple, kcc i = (p i , q, KCM, KCE, KD), where p i represents the multi-domain problem that kcc i corresponding to, q i is the requester who proposed p i , KCM is a finite set of nodes which contains all expert members in kcc i , KCE is a set of arcs which contains all arcs in the kcc i , and KD is a set of knowledge domains that all expert nodes in kcc i are specilised in. For each knowledge domain in KD, there exists at least one expert node a kkcc i who is specialised on it.",
               "kcc i is formed for solving p i , and will be disassembled after p i is solved. where PCA is a node set containing all nodes in PC, q is a requester with a multi-domain problem to be solved, PCE is an arc set containing all arcs of the PC, PCD is a set of knowledge domains containing all knowledge domains member of PC specialised on, PCN is a node set which contains all neighbour nodes of PC and PCNE is an arc set which contains all arcs connecting PC with its neighbour nodes.",
               "A Potential Community is formed only when we want to discover KCCs in a distributed network. Namely, when a network is too large to be explored, a Potential Community (PC) is identified for community discovery. A Potential Community is dispersed after a KCC is discovered. factors are (1) the knowledge domain coverage, (2) the average knowledge level, (3) the average connective level, (4) the community connectivity, and (5) the catastrophe level. In our approach, these five factors are used to evaluate the quality of KCCs."
          ],
          "paper_id": "21b96820-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 3,
          "fromPaper": "Regular Paper Community Discovery for Knowledge Collaborations in Collective intelligence Systems"
     },
     {
          "head": {
               "text": "( 1 ) Knowledge Domain Coverage",
               "type": "modelling"
          },
          "paragraphs": [
               "Suppose there is a multi-domain problem p i . The knowledge domains that are required to solve p i could be represented as T (p i ). kcc i is a potential community for solving p i . The knowledge domains covered by kcc i could be represented as T PCC (kcc i ) = {a i .domain|a ikcc i }. Ideally, the knowledge domains required by p i should be covered by kcc i . Eq. is the function for checking whether kcc i has sufficient domains of p i .",
               "( 2 ) Average Knowledge Level Each member in kcc i has a rank value in their individual knowledge domain. The rank represents the knowledge level of each candidate. In most cases, a candidate with a higher knowledge level could solve same problems more efficiently than the one with a lower knowledge level. The average knowledge level of kcc i represents the overall knowledge level of the whole community and can be calculated by using Eq. .",
               "where ||kcc i .KCM|| represent the cardinality of kcc i .KCM, and kcc i .KCM represents all members of kcc i ."
          ],
          "paper_id": "21b96820-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 4,
          "fromPaper": "Regular Paper Community Discovery for Knowledge Collaborations in Collective intelligence Systems"
     },
     {
          "head": {
               "text": "( 3 ) Average Connective Level",
               "type": "modelling"
          },
          "paragraphs": [
               "The connections among members of a KCC also have great impact on the quality of knowledge collaboration , . The average connective level of a KCC is a factor for evaluating how well a KCC (kcc i ) is connected. It can be calculated by using Eq. .",
               "where (a i , a j ) represents the total number of edges in"
          ],
          "paper_id": "21b96820-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 5,
          "fromPaper": "Regular Paper Community Discovery for Knowledge Collaborations in Collective intelligence Systems"
     },
     {
          "head": {
               "n": "4.",
               "text": "Evaluation of Knowledge Collaborative Community Quality",
               "type": "experiment"
          },
          "paragraphs": [
               "The success of solving a multi-domain problem relies on both the expertise of participated members and the collaboration quality among expert members. In this section, we will introduce the factors of effective team configuration, which can yield the best trade-off among knowledge coverage for multi-domain problem, and the rank function based on members' competence for the required knowledge and cohesion of community . Furthermore, we will introduce how to use the factors to evaluate the quality of a KCC.",
               "In this research, we consider five major factors, which may impact on the efficiency of knowledge collaboration. The five kcc i , E represents all edges in the network, and EDG is the number of edges to make kcc i as a fully-connected network. EDG can be calculated by using Eq. (6). If ||kcc i .KCM|| = 1, we define EDG as 1."
          ],
          "paper_id": "21b96820-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 6,
          "fromPaper": "Regular Paper Community Discovery for Knowledge Collaborations in Collective intelligence Systems"
     },
     {
          "head": {
               "text": "( 4 ) Community Connectivity",
               "type": "experiment"
          },
          "paragraphs": [
               "The frequency of previous interactions is an important indicator of successful community collaboration. Co-Author of two researchers implies that the function of expert a i and the function of expert a j interact with each other . We calculate the experts connection degree ECD based on publicly available publication records, given by:",
               "where, f (a i , a j ) is the total number of papers which experts a i and a j co-authored; and f (a i ) denotes the total number of papers which experts a i publish; f (a j ) denotes the total number of papers which experts a j publish. In order to measure how well an individual expert belongs to the rest of the community, we also define a local clustering coefficient for a node in the community (a jkcc i ) as follows :",
               "performance of knowledge collaboration. To discover a knowledge collaborative community, which has good performance and could efficiently solve a multi-domain problem, considering all above factors is very necessary."
          ],
          "paper_id": "21b96820-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 7,
          "fromPaper": "Regular Paper Community Discovery for Knowledge Collaborations in Collective intelligence Systems"
     },
     {
          "head": {
               "n": "5.",
               "text": "The Knowledge Collaborative Community Discovery Approach",
               "type": "modelling"
          },
          "paragraphs": [
               "Two approaches are introduced in this paper. The first approach is the KCCD approach, it is utilized to discover a KCC in a centralized network, where a global view of all expert nodes of a network is available. However, such a condition cannot be satisfied in many large scale networks, so the second approach is the 2-Step approach for discovering KCCs in distributed networks.",
               "The global clustering coefficient for the community is then the average of local coefficients of all nodes, and the community connectivity Con(kdd i ) can be calculated by using Eq. ."
          ],
          "paper_id": "21b96820-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 8,
          "fromPaper": "Regular Paper Community Discovery for Knowledge Collaborations in Collective intelligence Systems"
     },
     {
          "head": {
               "text": "( 5 ) Catastrophe Level",
               "type": "modelling"
          },
          "paragraphs": [
               "The number of experts in a knowledge collaborative community should not exceed the number of knowledge domains required by a problem p j . More experts in a KCC could provide high probability to cause a catastrophe . If there are too many experts in a knowledge collaborative community, the community needs more collaboration paths to support the knowledge collaboration and the cost of communication will be also increased. Equation (10) shows the catastrophe level of a knowledge collaborative community kcc i where p j .T PC represents the knowledge domains that p j requires."
          ],
          "paper_id": "21b96820-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 9,
          "fromPaper": "Regular Paper Community Discovery for Knowledge Collaborations in Collective intelligence Systems"
     },
     {
          "head": {
               "n": "5.1",
               "text": "The KCCD Approach",
               "type": "modelling"
          },
          "paragraphs": [
               "In the KCCD approach, all nodes of a network can be explored, and potential expert nodes for a problem can be gathered to form a KCC. The details of the KCC approach is presented by Algorithm 1 in . Line 1 in Algorithm 1 sets requester q as the only member of kcc i . Line 2 to Line 6 browse all nodes in N, and select candidates with required expertise in each knowledge domain of p as a member of kcc i . Line 7 to Line 9 check whether the N contains a KCC of p or not. For each member in particular domain domain k of kcc i , Line 10 to Line 19 search the whole network to find whether there is any node can replace the member and improve the performance of kcc i . If such a node exists, then the corresponding member will be replaced. Line 20 returns the final knowledge collaborative community kcc i .",
               "As introduced in previous paragraphs, the above five factors will impact on the quality of knowledge collaboration, and should be taken into account in the evaluation of KCC performance. Hence we propose the following equation which can give an overall evaluation about the performance of kcc i .",
               "In Eq. (11), k 1 , k 2 and",
               ", are coefficients of the average knowledge level, average connective level and community connectivity, respectively. The values of k 1 , k 2 and k 3 can be varied in different application domains. The value of pc(kcc i ) indicates the performance of kcc i . The higher value pc(kcc i ) is, the better performance kcc i can achieve in solving p i . If pc(kcc i ) = 0, it can be concluded that kcc i could not solve p i . For example, if the knowledge domains of kcc i cannot cover the required knowledge domains of p i , the value of com (p i , kcc i ) is 0, and the value of pc(kcc i ) is also 0. In such a situation, p i cannot be solved by kcc i . Most previous research only considered parts of the factors, which might affect the efficiency and/or shows the major procedures in the 2-Step approach. When a requester q proposes a problem p i to be solved in N, the 2-Step approach will firstly generate a potential community PC from q (i.e., Step 1). Then, a KCC will be discovered from all members of the PC (i.e., Step 2)."
          ],
          "paper_id": "21b96820-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 10,
          "fromPaper": "Regular Paper Community Discovery for Knowledge Collaborations in Collective intelligence Systems"
     },
     {
          "head": {
               "n": "5.2",
               "text": "The 2-Step Approach",
               "type": "modelling"
          },
          "paragraphs": [
               "A PC is discovered by using the following criteria: ( 1 ) The PC is a small-size subgraph of N. The first criterion is grounded in transferring the problem from a distributed network to a centralized network. The reason behind this criterion is that it is not realistic to explore all nodes in a distributed network, concerning the cost of time and computation. The second criterion is grounded in that every member in a PC should contribute some expertise in solving p i , in which case all nodes are potential members of a KCC. The third criterion is grounded in that all required knowledge domains of p i are important for finding a KCC. A KCC could solve a multi-domain problem only if the KCC can cover all required knowledge domains of p i .",
               "In Step 1 of the 2-Step approach (see ), initially, only q is included as the only member in PC. Then, the PC will be reorganised by following the the steps below.",
               "( 1 ) At the beginning, an uncompleted PC has only one member q, which could be presented as PC.PCA = q (see ).  ( 2 ) All neighbours of q are joined into PC. If the PC could cover all knowledge domains of p i , then the PC is completely formed. ( 3 ) If the current PC could not cover all required knowledge domains of p, neighbours of all members in PC are added into PC (see . Step 3 is repeated until the PC can cover all knowledge domains of p i , or there is no more neighbours can be included. If there is no more neighbours to add, and PC.PCDp.T PC p.T PC, the task fails. ( 5 ) After a PC is found, then the size of PC is needed to be narrowed. Those nodes whose knowledge domains are not in p.T PC would be removed from PC (except q). After the execution of Step 1, if the approach fails to find enough candidates to solve p i , the whole approach is terminated (and the task is failed). If a PC with sufficient candidates for solving p i can be discovered, the approach process to Step 2. Similar to the KCCD approach, the forming of the KCC in the 2-Step approach is also based on the evaluation of the performance of KCC. At the beginning of Step 2, only q is included in the KCC. Then, each member of PC temporarily joins into KCC, and the performance of the temporal KCC will be evaluated by using Eq. (11).",
               "The community discovery algorithm of the 2-Step approach is shown in . In the algorithm, Line 1 to Line 14 are used to find a PC from N for solving a multi-domain problem p i (i.e., Step 1). Line 15 to Line 31 are to find a KCC (kcc i ) from the PC, which is discovered in Step 1 (i.e., Step 2). More detailed explanation of the algorithm is given below.",
               "? Line 1-Line 2: The approach is initialised. The requester q is the only member in PC; ? Line 3: A temporal community tempKCC is generated;",
               "? Line 4-Line 6: PC is expanded by including members' neighbours into PC until existing members in PC can solve p i or no neighbours can be included; 247 c"
          ],
          "paper_id": "21b96820-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 11,
          "fromPaper": "Regular Paper Community Discovery for Knowledge Collaborations in Collective intelligence Systems"
     },
     {
          "head": {
               "n": "6.1",
               "text": "The DC Approach",
               "type": "modelling"
          },
          "paragraphs": [
               "In the DC approach, when there is a candidate with a multidomain problem to be solved, the DC approach discovers experts who might help him/her. There were two criteria to find suitable experts to assemble a DC. The first criterion was that an expert must have expertise for a specific problem. The second criterion was that the expert should have social contacts with the candidate. Therefore, the DC approach has good performance in a well connected network or when the candidate was well connected, but it might have poor performance (i.e., it cannot find suitable experts) in a poorly connected network or when the candidate was not well connected with other nodes in the network.",
               "A dynamic community (DC) is dynamically formed in a knowledge work space which consists of a group knowledge workers and the knowledge that the workers hold. There are three kinds of relations in such a knowledge work space: the relation between workers; the relation between worker and knowledge; and the relation between knowledge. Suppose a requestor q needs a set of required knowledge domain p i .T PC for solving multidomain problem p i . The DC will include all related workers who satisfy all three kinds of relations. Within the same dynamic community DC for specific multi-domain problem p i , not only all workers are used to have interaction with the requestor q, but also they hold knowledge in specific domain d k which belongs to the set of required knowledge domain p i .T PC or is related to the domains in the p i .T PC. ? Line 7-Line 14: Checking whether members in PC can solve p i , and whether existing members have required knowledge. Members with required expertise could remain in PC, and others are removed; ? Line 15-Line 20: Evaluating whether adding a node into KCC can increase knowledge domains of the KCC, and improve the performance of KCC; ? Line 21-Line 31: Checking whether existing nodes in the KCC can be removed. If removing a node does not decline the performance of the KCC, the node will be removed;"
          ],
          "paper_id": "21b96820-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 12,
          "fromPaper": "Regular Paper Community Discovery for Knowledge Collaborations in Collective intelligence Systems"
     },
     {
          "head": {
               "n": "6.",
               "text": "Experiment",
               "type": "experiment"
          },
          "paragraphs": [
               "Three experiments are conducted for demonstrating the performance of the KCCD approach and the 2-Step approach in KCC discovery. In the experiments, the Dynamic Community (DC) approach is selected as the benchmark in the experiments. In Experiment 1, both KCCD approach and DC approach are conducted in a centralized network and compared by four factors mentioned in Section 4, i.e., average catastrophe level, knowledge domain coverage, average knowledge level and average connective level. Experiments 2 and 3 evaluate the performance of the 2-Step approach and DC approach in a distributed network by changing the networks size and connectivities."
          ],
          "paper_id": "21b96820-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 13,
          "fromPaper": "Regular Paper Community Discovery for Knowledge Collaborations in Collective intelligence Systems"
     },
     {
          "head": {
               "n": "6.2",
               "text": "Dataset",
               "type": "experiment"
          },
          "paragraphs": [
               "According to the KDDC approach and the 2-Step approach, the dataset for experiments requires following essential attributes:",
               "? Knowledge Domain: According to TPC, each multi-domain problem requires more than one knowledge domain and each required domain with a particular important degree.",
               "? Expert: A set of experts belong to a particular knowledge domain. Certain experts can have multi-domain knowledge, but they will have different IDs in different domains. Such multi-domain experts mainly contribute to decrease catastrophe level.",
               "? Knowledge Level: In terms of a particular domain, each expert has a specific knowledge level.",
               "? Collaboration History: For each particular expert a i , there is a matrix which represents the collaboration records of a i and other experts in the systems. It is hard to find a realistic dataset which can include all previous mentioned attributes. For example, the most popular dataset for community discovery research is DBLP dataset. However, it is hard to get the knowledge domain and knowledge level for a particular author. Therefore, we generates datasets including the co-authorship collaborations and knowledge domain relationships to imitate the co-authorship networks. We define a knowledge domain set consisting of five knowledge domains. A multidomain problem p i is proposed by a particular expert node q, and p i randomly includes not less than two and no more than five different knowledge domains from predefined knowledge domain set. We suppose that an expert node q wants to publish a new paper p i , which needs several different domain knowledge and each domain occupies different important degree in p i , so the system will compose a knowledge collaborative community including a group of experts, which not only satisfise all knowledge domain required by the expert node q, but also has better performance than the other candidate groups. Detailed datasets generation will be described in each experiments. Average catastrophe level."
          ],
          "paper_id": "21b96820-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 14,
          "fromPaper": "Regular Paper Community Discovery for Knowledge Collaborations in Collective intelligence Systems"
     },
     {
          "head": {
               "n": "6.3",
               "text": "Experiment 1",
               "type": "experiment"
          },
          "paragraphs": [
               "Experiment 1 is conducted to demonstrate how to discover a knowledge collaborative community by using the KCCD approach in the centralized network with global information."
          ],
          "paper_id": "21b96820-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 15,
          "fromPaper": "Regular Paper Community Discovery for Knowledge Collaborations in Collective intelligence Systems"
     },
     {
          "head": {
               "n": "6.3.1",
               "text": "Experimental Setup",
               "type": "experiment"
          },
          "paragraphs": [
               "In the experiment, the synthetic dataset that contains a network with five knowledge domains and each domain consists of five expert nodes with specific knowledge level from 1 (lowest) to 5 (highest). The network structure of the dataset is shown in and the attributes of each expert node in the network is shown in .",
               "In the experiment, a requester q and a multi-domain problem p i were randomly generated for 100 times where the number of knowledge domains for p i ranges from 2 to 5. The probability of the link between a pair-node was set as 30%. In order to imitate the realistic environment, the coefficients in Eq. (11) were also set randomly in each multi-domain problem p i . In the experiment, we compared the KCCD approach with the Dynamic Community (DC) approach and the comparison results are introduced in the following paragraphs."
          ],
          "paper_id": "21b96820-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 16,
          "fromPaper": "Regular Paper Community Discovery for Knowledge Collaborations in Collective intelligence Systems"
     },
     {
          "head": {
               "n": "6.3.2",
               "text": "Experimental Results",
               "type": "experiment"
          },
          "paragraphs": [
               "In Experiment 1, we mainly compared following four aspects of the KCCD approach and the DC approach. Due to the low probability of the link between a pair-node, the community connectivity is very small, so we will not use it as an evaluation factor in this experiments.  p i .T PC, which tends to have positive influence of a KCC. However, the average catastrophe level of the DC approach is larger than zero, which decreases the performance of a KCC. Normally, a smaller community needs less communication overheads. Hence, the communities formed by using the KCCD approach can promise more efficient interactions among community members. . From , it can be seen that the average knowledge level of communities formed in the KCCD approach is lower than that of the communities formed in the DC approach. This is because that the DC approach only calculates the highest domain knowledge level in each required knowl- edge domain in p i .T PC without taking care of the actual community size of DC and other knowledge domain rank. However, the KCCD approach considers all members' ranks in the required knowledge domains in p i .T PC. ( 4 ) Average Connective Level: As mentioned earlier, the connective level is another important factor for evaluating the efficiency of knowledge collaboration. The average connective levels of formed communities in the two approaches are shown in . From the table, it can be seen that the KCCD approach has a higher connective level than that of the DC approach. From the above comparison, it can be seen that the DC approach had better performance in only one aspect (i.e., the Average Knowledge Level), where the KCCD approach has better results in other aspects. The average performance of formed communities in the two approaches are shown in . We can claim that the KCCD approach can perform better in centralized networks than the DC approach, which is 2.12 and 1.32 respectively. "
          ],
          "paper_id": "21b96820-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 17,
          "fromPaper": "Regular Paper Community Discovery for Knowledge Collaborations in Collective intelligence Systems"
     },
     {
          "head": {
               "n": "6.4",
               "text": "Experiment 2",
               "type": "experiment"
          },
          "paragraphs": [
               "Experiment 2 was conducted for evaluating the 2-Step approach in distributed network and the DC approach is also adopted in the experiments for comparison. In terms of distributed network, there is no global view, so we only can expand the network and explore the node from the neighborhood or available nodes within current potential community PC as defined in Definition 7 in Section 3. The potential community PC network expends from only requester q, and then all q's neighbors are added into. In Experiment 2, we fixed the size of the network, but applied different connection probabilities. It is mainly focused on the evaluation of performance of the 2-Step approach and the DC approach in networks with different connectivities. In this experiment, we mainly evaluate three factors: success rate, connective level and catastrophe level. As mentioned in Experiment 1, the knowledge level of DC approach does not consider the actual community size of DC, so we still do not take it into account in Experiment 2."
          ],
          "paper_id": "21b96820-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 18,
          "fromPaper": "Regular Paper Community Discovery for Knowledge Collaborations in Collective intelligence Systems"
     },
     {
          "head": {
               "n": "6.4.1",
               "text": "Experimental Setup",
               "type": "experiment"
          },
          "paragraphs": [
               "In this experiment, we use the similar dataset as Experiment 1. There are five knowledge domains and each domain has 20 expert candidates. Therefore, the number of nodes in the network was set to 100, and the probability of the link between a pair-node was set in different values, i.e., 0.01, 0.02, . . . , 0.2, where different probability of links between a pair-node indicated different connectivities in the network. For each connection probability, p i and q were randomly created for 100 times. At each time, the 2-Step approach and the DC approach were used to discover a community for solving p i , respectively. The smaller the probability of links between a pair-node is, the less the community connectivity contributes to the performance of KCC, so we will not use it as an evaluation factor in this experiments."
          ],
          "paper_id": "21b96820-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 19,
          "fromPaper": "Regular Paper Community Discovery for Knowledge Collaborations in Collective intelligence Systems"
     },
     {
          "head": {
               "n": "6.4.2",
               "text": "Experimental Results",
               "type": "experiment"
          },
          "paragraphs": [
               "The success rates of the 2-Step approach and DC approach in different Connective Networks are shown in . The X axis in represents the connection probability, while the Y axis indicates the percentage of success rate to discover a proper KCC for solving p i . , it can be seen that when connection probability is less than 0.08, the 2-Step approach had better performance compared with the DC approach. For both approaches, higher connection probabilities could lead to better performance. The 2-Step approach could achieve 100% success rate after the probability reached 0.04. The DC approach could reach 100% success rate after the probability was increased to 0.08.",
               "The average connective levels of the 2-Step approach and DC approach in different Connective Networks are shown in . The X axis in represents the connection probability, while the Y axis indicates the value of average connective level of a proper KCC for solving p i . , it can be seen that once both two approaches can achieve 100% success rate after the probability reached 0.08, the 2-Step approach not only had higher average connective level than the DC approach, but also increased more dramatically. shows the average catastrophe levels of the 2-Step approach and DC approach in different connective networks. The X axis in represents the connection probability, while the Y axis indicates the value of the average catastrophe level of a proper KCC for solving p i . , it can be seen that the average catastrophe level of the 2-Step approach always maintained performance in centralized networks. On the other side, the 2-Step approach could always have better performance with above 50% success rate. Also, the experimental result indicates that the performance of the 2-Step approach was fractionally impacted by the size of network. Due to the low success of DC approach, it is meaningless to evaluate the other factors. Average catastrophe level in different connective networks. The success rate in different size networks. at 0. However, the average catastrophe level of the DC approach increased significantly by rising the connection probability from 0.01 to 0.2."
          ],
          "paper_id": "21b96820-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 20,
          "fromPaper": "Regular Paper Community Discovery for Knowledge Collaborations in Collective intelligence Systems"
     },
     {
          "head": {
               "n": "7.",
               "text": "Conclusion and Future Work",
               "type": "conclusion"
          },
          "paragraphs": [
               "KCC discovery is an important problem for collective intelligence systems. To discover a KCC successfully, the consideration of a network structure is necessary, and the consideration of knowledge collaboration is also essential. In this paper, two approaches (i.e., the KCCD approach and the 2-Step approach) for mining knowledge collaborative communities are introduced. The KCC approach is used for centralized networks to discover suitable KCCs for solving multi-domain problems. The 2-Step approach is designed for distributed networks. Comparing with some existing community mining approaches, the proposed approaches consider more factors when forming KCCs, and can perform better in networks with different scalabilities and connectivities. This has been supported by the experimental results.",
               "As mentioned in Section 6, we do not conduct experiments on realistic datasets, because both KCCD and 2-Step approach require four basic attributes: Knowledge Domain, Expert, Knowledge Level and Collaboration History, in the dataset. This might limit their application in some domains. Therefore, in future work, we will do more research to mine such attributes from general social networks without requiring further information to extend the usage scope of our KCCD and 2-Step approaches."
          ],
          "paper_id": "21b96820-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 21,
          "fromPaper": "Regular Paper Community Discovery for Knowledge Collaborations in Collective intelligence Systems"
     },
     {
          "head": {
               "n": "6.5",
               "text": "Experiment 3",
               "type": "experiment"
          },
          "paragraphs": [
               "In terms of the distributed networks, Experiment 3 compares the succuss rate of 2-Step approach and DC approach in different sizes of networks."
          ],
          "paper_id": "21b96820-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 22,
          "fromPaper": "Regular Paper Community Discovery for Knowledge Collaborations in Collective intelligence Systems"
     },
     {
          "head": {
               "n": "6.5.1",
               "text": "Experimental Setup",
               "type": "experiment"
          },
          "paragraphs": [
               "A random network, which contains different numbers of nodes, is generated in the experiment. A random knowledge domain and the knowledge level are assigned to each node. Then a multidomain problem p i is created and assigned to a random node q. q then becomes a requester, and it may or may not have a required expertise for solving p i .",
               "In Experiment 3, node numbers of the network (n) were set to 20, 50, 100, 200, 300, 500 and 1,000, and the probability of two nodes, which can be connected, was set to (2/n)%. Then p i and q were generated/selected for ten times in each size of networks. The goal of this experiment was to compare the performances of the 2-Step approach and the DC approach in different size of networks."
          ],
          "paper_id": "21b96820-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 23,
          "fromPaper": "Regular Paper Community Discovery for Knowledge Collaborations in Collective intelligence Systems"
     },
     {
          "head": {
               "n": "6.5.2",
               "text": "Experimental Results",
               "type": "experiment"
          },
          "paragraphs": [
               "The result is shown in . The X axis in represents the number of nodes in a network, and the Y axis represents the success rate to discover a KCC. , it can be found that in all cases, the 2-Step approach had better performance than the DC approach. The best result for DC was 30%, appeared in the experiment with 20 nodes. When a network contains more than 200 nodes, the best result of the DC approach reduced to 10%. The experimental result obviously shows that the DC had better"
          ],
          "paper_id": "21b96820-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 24,
          "fromPaper": "Regular Paper Community Discovery for Knowledge Collaborations in Collective intelligence Systems"
     }
]