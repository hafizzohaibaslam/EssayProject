[
     {
          "head": {
               "n": "0",
               "text": "abstract",
               "type": "abstract"
          },
          "paragraphs": [
               "Finding the most influential people is an NP-hard problem that has attracted many researchers in the field of social networks. The problem is also known as influence maximization and aims to find a number of people that are able to maximize the spread of influence through a target social network. In this paper, a new algorithm based on the linear threshold model of influence maximization is proposed. The main benefit of the algorithm is that it reduces the number of investigated nodes without loss of quality to decrease its execution time. Our experimental results based on two well-known datasets show that the proposed algorithm is much faster and at the same time more efficient than the state of the art algorithms."
          ],
          "paper_id": "21092af0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 0,
          "fromPaper": "A fast algorithm for finding most influential people based on the linear threshold model"
     },
     {
          "head": {
               "n": "1.",
               "text": "Introduction",
               "type": "introduction"
          },
          "paragraphs": [
               "Social networks play an important role in our new world. After invention of online social networks, people are able to influence each other much more easily. This fact caused many researchers to look for an efficient method for finding top-k most influential people through social networks. This problem is also known as influence maximization (IM) and has many applications such as: opinion propagation, studying acceptance of political movements or acceptance of technology in economics. For example, suppose that we need to advertise a product in a country or we need to propagate news. For this purpose, we need to choose some people as a starting point and maximize the news or the products influence in the target society.",
               "Finding most influential people has been found useful for many applications such as: developing recommender systems ), choosing useful weblogs ( ) and finding influential twitters ). The problem was introduced in ) for the first time. After that in ) the authors formalized the problem as follows: given a weighted graph in which nodes are people and edge weights represent influence of the people on each other, it is desired to find K starting nodes that their activation leads to maximum propagation based on a chosen influence maximization model. Inspired from humanities science, two well-known influence maximization models were presented for the first time in : Linear Threshold (LT) and Independent Cascade (IC). Also, different algorithms have been proposed based on IC model and LT model . In this paper, a new algorithm will be introduced for finding top-k most influential people based on the LT model. Also, through experimental results on two real world datasets, we will show that the proposed algorithm is faster and even more efficient than the state of the art algorithms, so it would be applicable to larger social networks.",
               "In this paper, we focus on selecting the most important nodes that lead to maximum influence based on the LT model. For this purpose, community structures of the input graph are identified first and the most influential communities are selected among them; then a number of representative nodes are chosen from the resulted communities and form the final output of the proposed algorithm. Our experiments show that the proposed algorithm is very efficient in finding the most influential nodes with minimum execution time. In other words, in this paper we will focus on optimizing both the influence spread and the execution time.",
               "The rest of the paper is organized as follows: the next section reviews the related works; the proposed algorithm is presented in Section 3; comparison and analysis of the results are presented in Section 4 and finally, Section 5 concludes the paper."
          ],
          "paper_id": "21092af0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 1,
          "fromPaper": "A fast algorithm for finding most influential people based on the linear threshold model"
     },
     {
          "head": {
               "n": "2.",
               "text": "Related works",
               "type": "relatedwork"
          },
          "paragraphs": [
               "As stated in the previous section, two different information diffusion processes are presented in ( : IC and LT models. In IC model, when a node is activated in time t, it has only one chance to activate its neighbors in time t + 1. In LT model, inlinks of each node are weighted with a value less than one and each person has an activation threshold between zero and one. Then, if total influence rate of neighboring nodes of a node is greater than its threshold, the node will be activated.",
               "The influence function is monotone and sub-modular in both models. The function set f: 2 U ? R + is monotone if f ?S? 6 f ?T? for all S # T # U. Also, if f ?S [ fwg? ? f ?S? P f ?T [ fwg? ? f ?T? is true for all S # T and w 2 U n T, then the function is sub-modular. So, both IT and IC models of influence maximization are NP-hard problems. Furthermore, in ) the authors study the complexity of the influence maximization problem in deterministic linear threshold model. They show that there is no n 1?e -factor polynomial time approximation for the problem in the deterministic linear threshold model unless P = NP. Also, they show that the exact computation of the influence given a seed set can be solved in polynomial time.",
               "The rest of this section reviews LT and IC based influence maximization algorithms. Then the most important community detection algorithms are discussed and finally a formalization of linear threshold model will be presented. CELF. Then CELF++ that is an extension of CELF which reduces the number of iterations of the algorithm considerably .",
               "There exists different works on influence models such as: ). Simpath algorithm ( ) estimates activation probability of nodes by investigating paths that exists between seed nodes and other nodes in the input network. used a greedy algorithm to add K nodes with maximum marginal gain to the seeds set ( . Exact calculation of marginal nodes is #P-hard in both IC and LT models . Hence, they are estimated by use of Monte Carlo (MC) simulation. Unfortunately, the greedy algorithm has the following drawbacks:",
               "-MC simulation should be run for many times (e.g. 10,000 times). -This greedy algorithm should use MC for n ? k times. Where n is the number of nodes and k is the number of selected nodes.",
               "Chen et al. came to the conclusion that based on LT models, influence maximization problem is #P-hard ( and it can be executed on directed acyclic graphs (DAGs) in linear time. They supposed that each node can only influence a limited number of its neighbors. So, a local DAG (LDAG) is considered for each node and its influence is investigated for its LDAG. They showed that this heuristic algorithm is faster and even more efficient than its greedy counterparts. However, their idea has the following limitations:"
          ],
          "paper_id": "21092af0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 2,
          "fromPaper": "A fast algorithm for finding most influential people based on the linear threshold model"
     },
     {
          "head": {
               "n": "2.1.",
               "text": "IC-based influence maximization algorithms",
               "type": "relatedwork"
          },
          "paragraphs": [
               "There exist different solutions for Independent Cascade (IC) model of the problem. In , the authors present a dynamic selection approach referred to as the Item-based top-k influential user Discovering Approach (IDA). IDA identifies the top-k influential users for a given topic based on real-world diffusion traces and on-line relationships. In , the authors propose a scalable influence approximation algorithm named Independent Path Algorithm (IPA). In ( ), the polarity-related influence maximization (PRIM) problem is proposed which aims to find the seed node set with maximum positive influence or maximum negative influence in signed social networks. In ( , the authors propose GS algorithm for quick approximation of influence spread by solving a linear system, based on the fact that propagation probabilities in real-world social networks are usually quite small. Furthermore, for better approximation, they study the structural defect problem existing in networks, and correspondingly, propose enhanced algorithms, GSbyStep and SSSbyStep, by incorporating the Maximum Influence Path heuristic. In ( , the authors propose to measure the seed's independent influence by a linear social influence model. In ( ), a novel conformity aware cascade model is proposed which leverages on the interplay between influence and conformity in obtaining the influence probabilities of nodes from underlying data for estimating influence spreads. Also, in , the authors propose a new method that produces solutions of high quality base on Monte Carlo simulation. -Finding LDAGs is an NP-hard problem, so a greedy heuristic is employed to discover a good LDAG in . Using a greedy LDAG may introduce loss in quality of the seed set. -It is supposed that a node can influence others through the paths that exist in its LDAG, so its influence on other paths is ignored. -Storage of all LDAGs needs a huge memory in large networks."
          ],
          "paper_id": "21092af0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 3,
          "fromPaper": "A fast algorithm for finding most influential people based on the linear threshold model"
     },
     {
          "head": {
               "n": "2.4.",
               "text": "Linear threshold model",
               "type": "modelling"
          },
          "paragraphs": [
               "Consider the graph G = (V, E, b) in which (u, v) 2 E is an edge and each edge has a weight b u,v that shows the influence of u on v. in ( ) they proved that the Linear Threshold (LT) model is equal to Live-Edge model, if each node v 2 V chooses at most one edge with a probability that is equal to the weight of the edge. If an edge is selected, it is live else it is dead. Then a diffusion process is carried out on the live edges. The influence of a node is equal to the number of nodes that are accessible from the node. Let X be the accessible space and let d X (S) be the total number of nodes that are accessible from members of S; then influence of S is calculated as follows:",
               "The main steps of the proposed algorithm are summarized in ",
               "The input network",
               "In which Max is the number of nodes of the largest community, Min is the number of nodes of the smallest community and N i is the number of nodes of the ith community. The value of ? Ni Max?Min ? falls between zero and one, so it is multiplied by a constant b to amplify its effect. Also, a is a constant that ensures the selection of at least a nodes from each community. The appropriate value of a depends"
          ],
          "paper_id": "21092af0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 4,
          "fromPaper": "A fast algorithm for finding most influential people based on the linear threshold model"
     },
     {
          "head": {
               "text": "Step1: Community detection",
               "type": "modelling"
          },
          "paragraphs": [
               "on the input network. Our experiments on different datasets show that b = 10 and a = 2 are suitable for most usual networks.",
               "Let Selected_Nodes be the set of selected nodes that are candidates for the final output of our algorithm. Larger seeds set needs investigation of more communities that leads to a larger Selected_Nodes. The last step of the algorithm is devoted to choosing k nodes from the Selected_Nodes set.",
               "Step2: Selecting the most influential communities and candidate nodes"
          ],
          "paper_id": "21092af0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 5,
          "fromPaper": "A fast algorithm for finding most influential people based on the linear threshold model"
     },
     {
          "head": {
               "n": "3.3.",
               "text": "Step 3: finding nodes with maximum influence",
               "type": "modelling"
          },
          "paragraphs": [
               "Step3: Selecting seeds from the candidate nodes . The main steps of the proposed algorithm: In step1, the input network is reduced into a new small network by use of a community detection algorithm, in step 2, some candidate nodes are .selected from each community and in step3, final seeds are selected from the candidate nodes.",
               "centrality to from candidates set. Then top-k most influential nodes are chosen from the candidates set based on the paths that exist in the network. Details of the algorithm are depicted in and will be discussed in the following subsections. Also, the following figure summarizes the steps of the proposed algorithm, named ComPath:",
               "The inputs of the algorithm are: path length L and the input network N. Details of the algorithm will be discussed step by step in the following subsections.",
               "This step selects k nodes from the output of the previous step in such a way that their activation leads to maximum influence in the input network. In order to find the final set of seed nodes, all paths from each node of the network to the nodes in Selected_Nodes are inspected and the nodes with maximum influence are obtained. First, the path length is considered equal to 2 and seed nodes with maximum influence are selected. Then the path length is increased and the seeds set is calculated again. If average influence of the seed nodes is increased compared to the previous path length, then the path length is increased and the seeds set is calculated again.",
               "After increasing the path length, some new nodes may be found that are not present in the Selected_Nodes set. So, these nodes are added to a new set v 0 that will be inspected later. The new set's size depends on Selected_Nodes and the chosen path length. So, v' set is defined as follows:",
               "3.1.",
               "Step 1: creating a new network",
               "In the first step of the algorithm, community structures of the input network are identified and then a reduced network is built as follows: first SLPA algorithm ) is used to detect communities of the input network then each community is considered as a node in a new graph G = (V, E). Where V is the set of nodes (communities) and E is the directed edges that exist between the graph nodes. So, a directed edge (A, B) shows that members of the community A are linked to members of B in the original network (see ).",
               "Where L is the path length, N out is the set of neighbors of a node that are not present in Selected_Nodes set. If i number of seeds are found till the ith step then all seeds of the ith step are removed from v' to find a seed in the i + 1th step. Then influence of all u 2 Selected_Nodes-S i that are present in paths with different length is computed (where S i is the set of selected nodes till the ith step). As an example consider the network of and let S 1 = {x}. In order to find the second node, x is removed from S 1 and if the two remaining nodes are in Selected_Nodes, their influence will be c y,z = 0.2 and c z,y = 0.5. Then if the path length is equal"
          ],
          "paper_id": "21092af0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 6,
          "fromPaper": "A fast algorithm for finding most influential people based on the linear threshold model"
     },
     {
          "head": {
               "n": "3.2.",
               "text": "Step 2: detecting nodes with maximum influence",
               "type": "modelling"
          },
          "paragraphs": [
               "After construction of the communities graph in the previous section, the graph nodes are sorted based on their betweenness centrality measure. This measure shows the importance of each node in the input network. A node has a high betweenness centrality value if it is situated between many other nodes of the input graph. In this way, those communities that can potentially extend communication with others are selected.",
               "After choosing important communities, some representative nodes should be selected from each of them. Degree centrality is a simple and efficient measure for this purpose. High degree centrality value of a node means it has more communication links to the other nodes. Now, a question may arise: how many nodes should be chosen from each community? A community that contains more nodes should play a more important role in the final result. The following formula is applied for this purpose: to one, z will be selected as the next seed.",
               "For calculating top-k nodes in the 3rd step of the algorithm, the following Backtrack algorithm will be computed for each node that was proposed by the previous step. The Backtrack algorithm is a lazy-forward algorithm that is presented in ( for path finding. The three inputs of the algorithm are: u, a node from Selected_Nodes set, w, a part of the input network that is under investigation and L that is the path length.  The algorithms used in our experiments."
          ],
          "paper_id": "21092af0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 7,
          "fromPaper": "A fast algorithm for finding most influential people based on the linear threshold model"
     },
     {
          "head": {
               "text": "Algorithm Description",
               "type": "modelling"
          },
          "paragraphs": [
               "Maximum degree ( ) A heuristic based on the degree centrality measure. Seeds set contains top-k nodes with maximum degree Page rank This algorithm is commonly used for ranking webpages based on their importance in the web graph. This algorithm is ran with parameter p = 0.85 and e = 0.001 and then top-k nodes of the ranking are selected LDAG ( This algorithm is ran on the input graph with the parameter h = 1.32 to control creation of local DAG for each node MC-CELF ( A greedy algorithm that is actually an optimized version of CELF. In this algorithm, Monte Carlo simulation is run for 10,000 times to obtain the final seeds CELF++ ( This algorithm is also a faster and more efficient version of CELF . Steps of the proposed algorithm.",
               "All paths starting from u are identified in this algorithm. For this purpose, Backtrack uses the Forward algorithm that is designed to find all paths of length L. During the path finding process, weight of edges between different nodes in the path are multiplied to find the value of c u,v , using formula 3. "
          ],
          "paper_id": "21092af0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 8,
          "fromPaper": "A fast algorithm for finding most influential people based on the linear threshold model"
     },
     {
          "head": {
               "text": "5:",
               "type": "modelling"
          },
          "paragraphs": [
               "pp pp/b v,u . 6: return spd",
               "The inputs of the Forward algorithm are: Q is a stack that contains nodes of the found path, pp is the influence weight of the path, spd is the influence rate of u in the input sub-graph W, and L is the path length. Also, D is the set of neighbors of x that have an input link from x and have not been investigated yet. When a node is removed from the stack, pp is updated. Then b v,u will be the b u;v ? A?u; v?=N?v? ? 12? weight of the edge between u and v.",
               "In which, A(u,v) is the mutual actions of u and v and N(v) is a Please note that the original Forward algorithm of ( ) is changed here to reduce its execution time. The path length is reduced as much as possible to decrease the number of investigated nodes. In Forward algorithm, all neighbors of x are added to the stack if: normalization factor that is calculated as follows:",
               "Where N in (v) is the set of nodes that has an edge to v. Also, the influence weight of edges to v is considered as 1/M(v). -Their path to x is less than Len (L 6 Len)",
               "Then pp and spd variables are updated. This process is continued till the maximum path length is achieved. After this step the influence of the nodes in the proposed set is computed. spd contains the value of c u,v between u and v in formula 3. The node with maximum influence is selected as a member of the seeds set.",
               "Analysis of this step of the algorithm shows that it is a greedy algorithm that tries to select the node x with maximum d(x). In order to find the ith seed, if x is a candidate node, all i ? 1 number of already selected seeds are eliminated from v' and the influence function is computed for the remaining nodes:",
               "In other words, d(x) is the influence of all nodes in the Selected_Nodes set on other nodes of v'. Finally the node x with the maximum influence Max ?d?x?? on other nodes is chosen as a seed for the next step:3 d?x? ? Maxfd?x 1 ?; d?x 2 ?; . . . ; d?x n ?g; x i 2 Selected Nodes ?10?",
               "Therefore, it is needed to call the Backtrack function (algorithm 1) for each node in the Selected_Nodes set to obtain the final seed nodes. Each node with maximum influence spread is detected after running the Backtrack function for n times (n = |Selected_Nodes|). Then this node is omitted from the Selected_Nodes set. This process runs for k times to obtain the final seeds set (k = |seeds|)."
          ],
          "paper_id": "21092af0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 9,
          "fromPaper": "A fast algorithm for finding most influential people based on the linear threshold model"
     },
     {
          "head": {
               "n": "4.",
               "text": "Evaluation and experimental results",
               "type": "experiment"
          },
          "paragraphs": [
               "In this section, the proposed algorithm is evaluated based on two well-known datasets and results are compared with 5 other state of the art algorithms."
          ],
          "paper_id": "21092af0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 10,
          "fromPaper": "A fast algorithm for finding most influential people based on the linear threshold model"
     },
     {
          "head": {
               "n": "4.1.",
               "text": "Datasets",
               "type": "experiment"
          },
          "paragraphs": [
               "There exist some well-known algorithms that will be compared with our proposed algorithm in this sub-section. The algorithms are listed in :",
               "At first, the optimum number of chosen communities and candidate nodes that are selected from each of them should be identified. For this purpose different experiments are carried out. More than 2800 communities are identified for NetHEPT by SLPA algorithm ). The number of candidate nodes from each community depends on the number of selected communities and the number of nodes in each community. shows the number of communities and the number of nodes selected from 255 communities with maximum betweenness centrality in the network. We need to select 50 nodes as the final seeds set. As the figure shows, 12 nodes are selected from the community with highest betweenness centrality measure.",
               "Also, the number of communities and size of Selected_Nodes in NetHEPT and Epinion are shown in and 4 respectively. As shows, if 5, 50 or 100 seeds are needed, only 39, 437, 870 nodes are inspected in the proposed algorithm while the total number of nodes of the network is 15233. Also, for Epinion dataset, a few numbers of communities are investigated that helps our algorithm runs much faster in the next step.",
               "Different number of nodes will be activated for different values of path length. summarizes the algorithms results on NetH-EPT dataset for path length of 3, 4 and 5 and seeds set size of 50 and 100.",
               "Our experiments for path length greater than 5 showed negligible improvement. So, the experiments are reported for the path length of 5.",
               "Figs. 6 and 7, compare ComPath with other algorithms for different size of seeds set based on the two datasets. It can be observed that the proposed method performed better than the others.",
               "Because of very high execution time of the algorithms on NetH-EPT, their execution is not possible for 100 seeds and no results are reported for this number of seeds. The following figures compare execution time of the algorithms:",
               "Two real networks are used in our experiments (see ):",
               "-NetHEPT: a well-known dataset that has been used in many studies (  . The number of candidate nodes selected from each community for k = 50. Since all communities in rank 30th or higher have 2 representative nodes in the final seeds set, they are not presented in this figure. Communities size and no. of selected nodes in experiments on NetHEPT."
          ],
          "paper_id": "21092af0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 11,
          "fromPaper": "A fast algorithm for finding most influential people based on the linear threshold model"
     },
     {
          "paragraphs": [
               "Size of Selected_Nodes"
          ],
          "paper_id": "21092af0-97d4-11e8-9580-1f0eb29018a9",
          "head": {
               "type": "experiment"
          },
          "paragraphNo": 12,
          "fromPaper": "A fast algorithm for finding most influential people based on the linear threshold model"
     },
     {
          "head": {
               "text": "No. of communities with maximum betweenness",
               "type": "experiment"
          },
          "paragraphs": [
               "Size of seeds set 14000 12000 2000 ",
               "Where, S i is the seeds set after the ith step (i = |S i |). In order to identify the i + 1th seed, Simpath calculates both d?S i ? x? and In this research, we tried to identify the initial nodes among the members of the Selected_Nodes set. While CELF and CELF++ carry out the calculations among all nodes of the input graph. Also, Simpath uses Vertex Cover Optimization for the first initial node and Look Ahead Optimization for the rest of them that leads to reducing the number of Backtrack iterations (  As the figures show, the execution time of ComPath is much less than the others. The following table compares execution time improvement of ComPath compared to the other algorithms:",
               "The experiments show that ComPath not only selects better initial seeds but also it is much faster than the other comparable state of the art algorithms. LDAG is comparable with ComPath in terms of execution time but it is not accurate in selecting high quality initial seeds, especially if a large number of initial seeds are needed (See ). path uses a threshold g to balance a trade-off between influence spread and execution time; e.g. smaller g means larger influence spread and larger execution time. This parameter specifies which paths should be investigated in the algorithm. In other words, if the influence weight between two nodes is less than the g  "
          ],
          "paper_id": "21092af0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 13,
          "fromPaper": "A fast algorithm for finding most influential people based on the linear threshold model"
     },
     {
          "paragraphs": [
               "In this research, an efficient algorithm, named ComPath, was proposed based on the linear model to find top-k most influential people in social networks. Our experiments showed the algorithm provides a good balance between execution time and efficiency. The algorithm detects the communities of the input network at first and investigates a limited number of them to reduce the execution time. Also, ComPath is able to suggest a limited number of communities to be investigated from the input network. This is very useful in our real world because it enables us to choose a few number of communities as our target and reduce the expenses for different applications such as product advertisement, etc.",
               "As mentioned before, for computing the influence spread of nodes in the linear threshold model, the formula d?v? In this research, we introduced two modifications to this formula. The first one was to limit the number of nodes that are examined that is accomplished by using the centrality measures, community detection and computing the Selected_Nodes set. The second one was to limit the search space of the input graph in the set v'. The size of v' depends on the Selected_Nodes set and the chosen path length. Finally, the formula used in this paper is:"
          ],
          "paper_id": "21092af0-97d4-11e8-9580-1f0eb29018a9",
          "head": {
               "type": "experiment"
          },
          "paragraphNo": 14,
          "fromPaper": "A fast algorithm for finding most influential people based on the linear threshold model"
     },
     {
          "head": {
               "text": "CELF++",
               "type": "experiment"
          },
          "paragraphs": [
               "647.267 15435.7 threshold, the edge between them is ignored by the algorithm."
          ],
          "paper_id": "21092af0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 15,
          "fromPaper": "A fast algorithm for finding most influential people based on the linear threshold model"
     },
     {
          "head": {
               "text": "Number of Seeds",
               "type": "experiment"
          },
          "paragraphs": [
               "Determining an optimized value of g may be very hard for many graphs. On the other hand, our proposed algorithm uses a path length parameter that can be easily estimated in real world networks (the optimized path length value is 3, 4 or 5 for most graphs). Our experimental evaluation of ComPath showed that by computing each node's influence on its neighbors with a path length less than 5, most influential nodes of the network can be identified by the algorithm. Also, the proposed algorithm only requires to obtain the number of nodes in the Selected_Nodes set with maximum value of d(x), therefore the algorithm requires to execute the Backtrack function for j-i times where j is equal to the number of nodes in the Selected_Nodes set, and i is the cardinality of the Seed set. This fact helps to reduce the number of inspected nodes and so the proposed algorithm runs much faster than the other algorithms (See . Another benefit of the proposed algorithm, compared to other algorithms like UBLF ( ) and Simpath ( ) is that it identifies the most influential communities of the network. In many occasions it is highly desirable to focus on a small sub-graph that can maximize the influence spread all over the input graph. For example, let us consider the problem of advertising a product in a social network. In our real world it is very hard to start advertising from some people that are distributed all over the network. So, advertisement companies try to focus on a community (or communities) that can maximize their advertisement effectiveness. They would like to know which communities (and which people in each community) are better to be considered as their advertisement target. The proposed algorithm can also provide a good answer for this kind of influence maximization problem.",
               "As the experimental results showed, the mentioned modifications improved the execution time and the information spread.",
               "Several challenges and future directions remain to investigate: one of them would be to use other centrality measures such as PageRank or K-Center to calculate the member of the Selected_Nodes set. Another challenge would be to use different algorithms for detecting communities and to investigate the parameters that affect the community detection algorithms. "
          ],
          "paper_id": "21092af0-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 16,
          "fromPaper": "A fast algorithm for finding most influential people based on the linear threshold model"
     }
]