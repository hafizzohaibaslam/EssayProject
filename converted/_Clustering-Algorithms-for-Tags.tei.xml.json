[
     {
          "head": {
               "n": "0",
               "text": "abstract",
               "type": "abstract"
          },
          "paragraphs": [
               "With the development and application of social media, more and more user-generated contents are created. Tag data, a kind of typical user generated content, has attracted lots of interests of researchers. In general, tags are the freely chosen textual descriptions by users to label digital data sources in social tagging systems. Poor retrieval performance remains a major problem of most social tagging systems resulting from the severe difficulty of ambiguity, redundancy, and less semantic nature of tags. Clustering method is a useful tool to increase the ability of information retrieval in the aforementioned systems. In this chapter, the authors (1) review the background of state-of-the-art tagging clustering and the tag data description, (2) present five kinds of tag similarity measurements proposed by researchers, and (3) finally propose a new clustering algorithm for tags based on local information that is derived from Kernel function. This chapter aims to benefit both academic and industry communities who are interested in the techniques and applications of tagging clustering."
          ],
          "paper_id": "24b06100-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 0,
          "fromPaper": "Clustering Algorithms for Tags"
     },
     {
          "head": {
               "text": "INTRODUCTION",
               "type": "introduction"
          },
          "paragraphs": [
               "With the proliferation of social media, lots of User Generated Content (UGC) have been brought and UGC becomes one of the main prevailing Web trends . Various types of data, e.g., text, photo, music, and video, are generated and viewed.",
               "As a typical type of UGC, social tag (also known as collaborative tag or social annotation) has obtained significant development and it also has become popular for their revolutionary ways of organizing online resources. Tags are simple, uncontrolled and ad-hoc labels that are assigned by users to describe or annotate any kind of resource. Since the distribution or types of contents are diverse and change dynamically, tagging is especially suitable for online copra.",
               "Many social tagging sites have been established, such as Del.icio.us (http://delicious.com) for Web pages bookmarking, Flickr (http://www. flickr.com) for photo sharing, CiteULike (http:// citeulike.org) for academic publishing management, Youtube (http://youtube.com) for video sharing, etc. The former discussed tagging sites are only focused on special topics. For the common request, however, some general sites have also provided the features for users. Users are allowed to add freely uncontrolled tags for products in Amazon. Twitter (http://twitter.com), a kind of micro-blog, allows users to annotate their short tweets with a type of hash tags for content annotation. Recently, lots of Weibo sites, such as, Sina Weibo (Weibo.com), Yahoo Weibo (http://itwwt. com/tag), etc., have been established in China for users to annotate their topics.",
               "The low technical barrier of tag based recommender system and easy usage of tagging have attracted a large amount of research interest. The user-contributed tags are not only an effective way to facilitate personal organization but also provide a possibility for users to search for information or discover new things. However, the ambiguity, redundancy and less semantic nature are the major problems suffering all tagging systems. For example, for one same resource, different users will use their own textual description to annotate, resulting in the tagging behavior much ambiguous and redundant. In order to deal with these difficulties, recently clustering method has been introduced into tag-based recommender system to find meaningful information conveyed by tags. As the user tagging behaviors can be modeled as data record with triple attributes, i.e. user, resource, and tag, clustering on tag data could be conducted on these three attributes respectively. The effectiveness of clustering of tag data is the ability of aggregating tags into topic domains. In this chapter, we (1) briefly discuss research background and related work on tagging clustering, (2) introduce the form of tag data and various tag similarity measurements, (3) propose a clustering algorithm named Local Information Passing Clustering algorithm (LIPC). Especially, in LIPC, We first estimate a KNN neighbor directed graph G of tags, the Kernel density of each tag in its neighborhood is calculated at the same time; we then use Local coverage and Local Kernel to capture the local information of each tag; thirdly, we define two operators, that is, I and O, to pass the local information on G; then a tag priority is generated when I and O are converged; at last, we use the tag priority values to find out the clusters of tags by using Depth First Search (DFS) on G.",
               "Experimental results demonstrate the efficiency and the improved outcome of tag clusters by using the proposed method."
          ],
          "paper_id": "24b06100-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 1,
          "fromPaper": "Clustering Algorithms for Tags"
     },
     {
          "head": {
               "text": "BACKGROUND",
               "type": "relatedwork"
          },
          "paragraphs": [
               "Recently tag has been widely used in recommender systems for many applications ). The common usage of tags in these systems is to add them as an additional feature to re-model users or resources over the tag vector space, and in turn, making tag-expanded collaborative filtering recommendation or personalized recommendation. However, as the tags are of syntactic nature, in a free style and do not reflect sufficient semantics, the problems of redundancy, ambiguity and less semantics of tags are often incurred in all kinds of social tagging recommender systems. For example, for one resource, different users will use their own words to describe their feeling of likeness, such as \"favorite, preference, like\" or even the plural form of \"favorites\"; and another obstacle is that not all users are willing to annotate the tags, resulting in the severe problem of sparseness, redundancy and ambiguity of tags. In order to deal with these difficulties, recently clustering method has been introduced into social tagging recommender systems to find meaningful information conveyed by tag aggregates. The aim of tagging clustering is to reveal the coherence of tags from the perspective of how resources are annotated and how users annotate in the tagging behaviors. Undoubtedly, the tag cluster form is able to deliver user tagging interest or resource topic information in a more concise and semantic way, which, in some extent, to handle the problems of tag sparseness and redundancy, in turn facilitating the tag-based recommender systems. Thus, this demand mainly motivates the research of tagging clustering in social annotation systems.",
               "In the context of tagging clustering, most of the researches on tagging clustering are directly using the traditional clustering algorithms such as K-means or Hierarchical Agglomerative Clustering on tag data, which possess the inherent drawbacks, such as the sensitivity of initial values and high computational cost etc. In , topic relevant partitions are created by clustering resources rather than tags. By clustering resources, it improves recommendations by distinguishing between alternative meanings of query. While in Chen (2010), clusters of resources are shown to improve recommendation by categorizing the resources into topic domains. A framework named Semantic Tagging clustering Search which is able to cope with the syntactic and semantic tag variations is proposed in van . and U-Map techniques to visualize and cluster tag data and discover emergent structures in collections of music . Self-organizing maps are artificial neural networks that map high-dimensional data points to nodes in a lowdimensional grid, that is, the output layer. Usually the grid is two-dimensional and can be viewed as a graphical map, where similar data points are placed close together or at the same point on the map. In order to deal with the high dimensionality of tag data set, Marco et al. use a Self Organizing Map (SOM) to cluster tagged bookmarks which were taken from the website http://delicious.com/about/ . State-of-the-art methods suffice for simple search, but they often fail to handle more complicated or noisy Web page structures due to a key limitation. Miao et al. propose a new method for record extraction that captures a list of objects in a more robust way based on a holistic analysis of a Web page . In Giannakidou (2008), a co-clustering approach is employed, that exploits joint groups of related tags and social data resources, in which both social and semantic aspects of tags are considered simultaneously. Li et al. were motivated by the key observation that in a social network, human users tend to use descriptive tags to annotate the contents that they are interested, and in particular, they proposed an Internet Social Interest Discovery system (ISID) to discover the common user interest and cluster the users and their saved URLs by different interest topics . Ramage et al. explore the usage of tags in K-means clustering by using an extended vector space model which included tags as well as page text . In order to reduce the set of different tags which to be considered by a part-of-speech tagger, Felipe et al. propose a clustering algorithm by using the hidden Markov model ). Practically, the authors (1) train the HMM by considering information not only from the source language but also from the target language; (2) obtain taggers involved in machine translation system; (3) generated the tag clusters by executing a bottom-up agglomerative clustering algorithm. Due to the complexity of social tag data, recently researchers focus on spectral clustering that has been proven effective in addressing complex data. However, existing spectral clustering algorithms work with 2-way relationships. To overcome this problem, Karydis et al. develop a novel data-modeling scheme and a tag-aware spectral clustering procedure that uses tensors to store the multi-graph structures that the personalized similarity . By taking the idea that the tag semantics is the key for deep understanding the correlation of objects in their mind, Jiang et al., propose the concept of core-tag and the model of core-tag clusters. In order to find out the core-cluster, a core-tagging clustering algorithm CET Clustering based on ensemble method is designed )."
          ],
          "paper_id": "24b06100-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 2,
          "fromPaper": "Clustering Algorithms for Tags"
     },
     {
          "head": {
               "text": "Tag Data Description",
               "type": "relatedwork"
          },
          "paragraphs": [
               "In a social tagging system or tagging services, the users are easily allowed to organize, share and retrieve online resources with tags. A user can assign a tag to a resource according to his/her background, or other user's tag. gives an example about tagging on Del.icio.us tagging system. In each bookmark, the upper left corner shows the title of the Web page and the lower right corner gives the tags assigned to that page.",
               "Though tag data is similar to rating data, there also have two major differences between them:",
               "(1) tag data does not contain users' explicit preference information on resources, but ranking data has; (2) tag data involves users, tags and resources, however, rating data only contain users and resources.",
               "The users of social tagging systems have created large amounts of tag data, which have attracted much attention from the research community. There, in general, have two types of tags in the social tagging system. The first tag type is the triple tags or machine tag, which uses a special syntax to define extra semantic information about the tag and make it easier or more meaningful for interpretation by a computer program. For example, \"geo: long=48.900000\" is a tag for geographical longitude coordinate whose value is 48.900000. Another tag type is called as Hashtags, which were commonly used as short message in social tagging system, such as Twitter or identi.ca. gives an example of Hashtag. A person can search for the string #freiheitstattangst and this tagged word will appear in the search engine results. In addition, these Hashtags show up in a number of trending topics websites, including Twitter's own front page.",
               "In fact, the usage of tagging also has its advantages and disadvantages, as follows concluded.",
               "The advantages of tagging are: "
          ],
          "paper_id": "24b06100-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 3,
          "fromPaper": "Clustering Algorithms for Tags"
     },
     {
          "head": {
               "text": ". An example of hashtag in Twitter",
               "type": "relatedwork"
          },
          "paragraphs": [
               "? Flexibility: The flexibility of tagging allows users to classify their collections of items or resources in the ways that they find useful.",
               "? Simplicity: In a typical tagging system, there is no explicit information about the meaning of each tag. A user is allowed to apply new tags to an item or resources or to use older tags.",
               "? Share Property: Users in a tagging system can use tags to share the interesting items or resource with others. a social tagging system can be viewed as a tripartite hyper-graph ) with users, tags and resources represented as nodes and the annotations represented as hyper-edges connecting one user, tag and resource. is an example of this hyper-graph about tag data. From , we can find that u 1 has assigned t 1 to r 1 , t 3 to r 2 and r 4 , as well as t to r 3 and r 4 . Resource r 1 has been annotated by tag t 1 , t 2 and t 4 ."
          ],
          "paper_id": "24b06100-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 4,
          "fromPaper": "Clustering Algorithms for Tags"
     },
     {
          "head": {
               "text": "Tag Similarity Measurements",
               "type": "relatedwork"
          },
          "paragraphs": [
               "The disadvantages of tagging are:",
               "? Ambiguity: Because users can freely choose tags, the resulting metadata can include homonyms (e.g., the same tags with different meanings) and synonyms (e.g., different tags for the same concept). For example, the tag \"orange\" may refer to the fruit or the color.",
               "? Spamming: Tagging systems open to the public are also open to tag spam. In tagging system, people can apply excessive number of tags or unrelated tags to an item or results for getting more attraction.",
               "Given a set of data objects, the goal of a clustering algorithm is to depart them into a set of clusters so that objects in the same cluster are close together, while objects in different clusters are far apart. The similarity between objects takes an important role in clustering. In tagging clustering situation, there have three different roles-tags, resources, and users, need to be considered. According to the aim of tagging clustering, several different similarity measurements are defined as follows to capture the similar objects in tag data set."
          ],
          "paper_id": "24b06100-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 5,
          "fromPaper": "Clustering Algorithms for Tags"
     },
     {
          "head": {
               "text": "Lexical Similarity",
               "type": "relatedwork"
          },
          "paragraphs": [
               "In spite of there have two types of tag in tagging system, however, they have the common information, that is tag data always contains three parts: users, U , tags, T , and resources, R . Formally, social tag data can be viewed as a set of triples . Each triple u t r represents a user u annotates a tag t to a resource r . A social tagging system can described as",
               "The tag data set obtained from a tagging system can be enriched by using online lexical resources. In this way, tags can be replaced by concepts and homonyms, and then, Lexical Similarity can be . An example of hyper-graph of tagging system",
               ", where exists a set of users, U ; a set of tags, T ; a set of resources, R ; and a set of annotations, A N . The annotations are represented as a set of triples contains a user, tag a n d r e s o u r c e d e f i n e d a s :",
               ". Therefore used to capture the similarity of tags. Lexical Similarity measurement use an external thesaurus or semantic lexicon such as Wordnet or Wikipeda ) to obtain the relationship between terms which were used as tags. This measurement, in one hand, suffers when new concepts and words are used, or when spell checking on misspelled tag fails. On the other hand, the tag relationships are less likely to reflect the way that tags are used by a particular group of users, as the meaning and association between tags is likely to vary between users interested in different topics. For example, the tag \"cluster\" has two specific meanings in Computer Science, which are both different to general English )."
          ],
          "paper_id": "24b06100-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 6,
          "fromPaper": "Clustering Algorithms for Tags"
     },
     {
          "head": {
               "text": "Co-Occurrence Similarity",
               "type": "relatedwork"
          },
          "paragraphs": [
               "In tagging system, users allowed to annotate interesting resource by using any selected words (tags). Essentially, similarity between tags could be capture by the co-occurrence resources. In this situation, we (1) construct a tag vector which is consisted by a set of resources which labeled by the same tag, e.g. t i ={r 1 ,r 2 ,..,r m }, where r l , l=1,, m is a resource; (2) calculate the Co-occurrence similarity between tags as follows."
          ],
          "paper_id": "24b06100-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 7,
          "fromPaper": "Clustering Algorithms for Tags"
     },
     {
          "head": {
               "text": "Document-Term Similarity",
               "type": "relatedwork"
          },
          "paragraphs": [
               "It is an interesting research task that we group resources, which share tags into clusters and then compare the similarity of all resources within a cluster. This task based on a hypothesis that a cluster of resources shared a tag should be more similar than a randomly constructed set of resources. In order to describe the similarity between resources, researchers introduce Document-term similarity, which stems from document-similarity in text clustering to capture similar tags. The similarity between tags is calculated from the textual similarity of documents. Brooks (2006) first created a term-frequency vector for each tag, and then use cosine similarity to compare pairs of tags, where cosine similarity is defined as follows. Given two tags t i ={tr i1 ,tr i2 ,..,tr im } and t j ={tr j1 ,tr j2 ,..,tr jm }, where tr il and tr jl , l=1,,m is the TF-IDF score of tags occurred in a resource. The cosine similarity between t i and t j is represented by using a dot product and magnitude as:",
               "In tagging system, each resource can be represented by the set of tags which have been used f o r i t s a n n o t a t i o n , e . g . "
          ],
          "paper_id": "24b06100-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 8,
          "fromPaper": "Clustering Algorithms for Tags"
     },
     {
          "head": {
               "text": "Normalized Levenshtein Similarity",
               "type": "relatedwork"
          },
          "paragraphs": [
               "where lev ij is the Levenshtein similarity ). The normalized Levenshtein similarity addresses the string lengths."
          ],
          "paper_id": "24b06100-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 9,
          "fromPaper": "Clustering Algorithms for Tags"
     },
     {
          "head": {
               "text": "Local Information Passing Clustering Algorithm for Tags",
               "type": "relatedwork"
          },
          "paragraphs": [
               "In the context of conventional tagging clustering, the first step is to define the tag similarity by using the similarity measurements which are described above; and then to find out the clustering structure from tag data by executing clustering algorithm; eventually to make use this structure for further applications such as forming recommended information. In this case, the quality of the clustering result has critical effect for the tag based recommender system. Most of the researches on tagging clustering are directly use the traditional clustering algorithms on tag data. These clustering algorithms often focus on local aspect of tag data and cannot capture the global information of tagging. However, various tags used in tag data apparently possess different significance in tag groups due to the semantic or domain topic tendency of tags, for example, \"image\" should locate close to the center of one tag cluster of \"photograph,\" while some other tags possessing the broad and diverse topic relatedness to any other tag clusters, for example, \"blue,\" are always scattered around the outer brim of tag aggregate clouds. Bearing this observation in our mind, the basic idea of this chapter is originated from the latent significance of each tag in tagging activities to creating tag clusters. Particularly, we propose a clustering algorithm named Local Information Passing Clustering algorithm (LIPC). In LIPC, we first construct a KNN neighbor directed graph G of tags, the kernel density of each tag in its neighborhood is calculated at the same time; We then use Local coverage and Local Kernel to capture the local information of each tag; thirdly, we define two operators, that is, I and O, to pass the local information on G; then a tag priority is generated when I and O operators are converged; at last, we use the tag priority to find out the clusters of tags. Experimental results demonstrate the efficiency and the improved outcome of tag clusters by using the proposed method."
          ],
          "paper_id": "24b06100-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 10,
          "fromPaper": "Clustering Algorithms for Tags"
     },
     {
          "head": {
               "text": "TagVector Model and Tag Similarity",
               "type": "modelling"
          },
          "paragraphs": [
               "Li et al. analyze the bookmark data set and find a phenomenon that the distribution of URLs, Users, and Tags follows power law distribution. This phenomenon indicates that most URLs are only bookmarked once and most users only bookmark one URL, in the same way, most tags are only annotated on one URL . Recently, an experiment on detecting the pair-wise relationship between tags and resources and between tags and users has shown that only a small part of resources are annotated frequently by many tags, whereas as a large number of resources are annotated once, and that the same observation of power law distribution also exists in the relationship between tags and users. Most of applications on tags are using tags to describe resources or users, that is, a resource or user is defined as a tags vector. In this model, thus the tag vector is in a very high dimension due to the free style of tag texts. In addition, most of tags are redundant and ambiguous, in turn; bring in a difficulty of similarity calculation. Therefore, tagging clustering is able to capture the topic domains of tags, which is expected to partially handle the above problems. In a tagging system, resources are mostly fixed and unique. Tag can be described by a set of resources which the tag has been assigned to it by users. In this way, a tag vector was constructed by using resources as dimensions, e.g., t r r matrix by accumulating the frequency of each tag along users. In this expression, each tag is described by a set of resources to which this tag has been assigned, i.e., t i = (w i1 ,,w im ), where w ik denotes the weight on resource dimension r k of tag t i , which could be determined by the occurrence frequency. In this manner, the similarity between any two tags is defined as Definition 1. Upon the mutual tag, similarity is determined; various clustering algorithms could be applied to partition the tags. gives a simple working example to show how five tags are assigned to two groups by using various clustering strategies (in red or black dashed circles). The clustering results in show that different clustering algorithm will capture totally different clustering result. So the design of clustering algorithm for tags is an important task in tagging clustering. "
          ],
          "paper_id": "24b06100-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 11,
          "fromPaper": "Clustering Algorithms for Tags"
     },
     {
          "head": {
               "text": "A Working Example of Tagging Clustering",
               "type": "modelling"
          },
          "paragraphs": [
               "In the above discussed tag vector model, the tag is usually in a very high dimension due to the free style of tag texts, which results in the problem of redundancy and ambiguity of tags, in turn; bring in the difficulty in tag computing such as the similarity calculation in terms of tag vector. Therefore, tagging clustering is often employed to capture the topical aggregates of tags, which is to capture the structural semantics of tags. In real applications, we start from the tripartite graph of social annotations to compose a resource-tag",
               "In real world, how should we know other peoples whom we did not know before? The recommendations from our friends are commonly used way. In Web world, users are always using tags to appraise a resource and other users can accept the resource according to the annotated tags. This behavior of Web could be regarded as the copy of real world, that is, the social network. Similarly, the tags could be regarded as the recommendation information.",
               "If we assume that the most similar K tags are the K friends of one tag, we can use the behavior of social network recommender system in the real world to simulate the tag's recommendation. However, these recommendation information are always locally, so we need to define operators to pass these information to all the tags. In this section, we first use the KNN neighbor method to find out the K nearest neighbors of one tag and then construct a KNN directed graph G. Local information is defined by using the kernel density estimator method. In order to pass local information, we define two operators I and O to . A working example of tagging clustering transit the local information to all the tags and the priority of each tag is generated. The purpose of this chapter is to find the groups with similar tags, so we devise a clustering algorithm based on tag priority to generate tag clusters."
          ],
          "paper_id": "24b06100-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 12,
          "fromPaper": "Clustering Algorithms for Tags"
     },
     {
          "head": {
               "text": "KNN Directed Graph and Local Information",
               "type": "modelling"
          },
          "paragraphs": [
               "According to Definition 1, a similarity matrix S could be constructed for a given tag data set. From S, we can find KNN neighbors of each tag and then a KNN directed graph G could be created.",
               "Graph G=<V,{E}>, where V is the tag set and {E} is the directed edge set between tags, <p,q>{E} denotes that tag q is a KNN neighbor of tag p. shows an example of a part of graph G. On one hand, the black node is tag p, and five heavy dark nodes with black line are the KNNneighbors of p and there have arches between p and them. On the other hand, p is the KNN-neighbor of four nodes which are denoted by light line circles and there have arches between these nodes and p. In this way a KNN directed graph G could be constructed and the adjacency matrix A of G is defined as Definition 2.",
               "Definition 2: Given a KNN directed graph G, the adjacency matrix is defined as A, where A(p,q)=1, if the directed arch <p,q> exists, and A(p,q)=0, otherwise.",
               "The KNN Kernel estimate method ( has mainly been used in capturing local character and density distribution. In this chapter, we first use it to calculate the KNN kernel density of each node, and then define two important indexes named Local Coverage (LC) and Local Kernel (LK) to capture the local information of each node.",
               "Definition 3: Given a node pG and its KNN neighborhood N(p), the Local Coverage of p is defined by the KNN kernel density of its neighbors:",
               "where f(q) denotes the KNN kernel density value of node q. LC(p) is defined as the sum of KNN kernel density of p's KNN neighbors, the higher value . An example of a part of directed graph G of LC(p) indicates more nodes with higher KNN kernel density in its neighborhood, and the probability of it locating in a high density area is higher.",
               "Definition 4: Given a node pG and a node set Q which contains p, the Local Kernel of p is defined as the KNN kernel density of Q:",
               "According to Definition 4, we can find that LK(p) is the sum of KNN kernel density of nodes which directed to p. The higher value of LK(p) indicates more nodes with higher KNN kernel density connected to p and p has a higher dependability to represent a local center."
          ],
          "paper_id": "24b06100-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 13,
          "fromPaper": "Clustering Algorithms for Tags"
     },
     {
          "head": {
               "text": "Experimental Evaluations of LIPC",
               "type": "experiment"
          },
          "paragraphs": [
               "To evaluate our approach, we conducted extensive experiments. We performed the experiments using Intel Core 2 Duo CPU (2.4GHz) workstation with a 4G memory, running windows XP. All the algorithms were written in Matlab 7.0. We conducted experiments on two real datasets, MedWorm (http://www.medworm.com/) and MovieLens (http://www.movielens.org/)."
          ],
          "paper_id": "24b06100-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 14,
          "fromPaper": "Clustering Algorithms for Tags"
     },
     {
          "head": {
               "text": "Datasets Description",
               "type": "experiment"
          },
          "paragraphs": [
               "In order to evaluate our approach, we crawled the article repository in MedWorm system during April 2010 and downloaded the contents into our local experimental environment. After stemming out the entity attributes from the data, four data files, namely users, resources, tags and quads, are obtained as the source datasets. The first three files are recorded the user, tag and document information, whereas the fourth presents the social annotation activities where for each row, it denotes a user u annotates a resource r by a tag t. The second dataset is MovieLens, which is provided by GroupLens (http://www.grouplens. org/). It is a movie rating dataset. Users were selected at random for inclusion. All selected users had rated at least 20 movies. Unlike previous MovieLens datasets, no demographic information is included. Each user is represented by an id, and no other information is provided. The data are contained in three files, movies.data, rating.dat and tags.dat. Also included are scripts for generating subsets of the data to support five-old cross validation of rating predictions. The statistical results of these two datasets are listed in . These two datasets are pre-processed to filter out some noisy and extremely sparse data subjects to increase the data quality.",
               "In this chapter, we use resources to describe tags, that is, each tag described by a set of resource which assigned to it by users. In order to reduce the length of tag vector, we first omit the resources which tags are less than the average tags for each resource in where"
          ],
          "paper_id": "24b06100-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 15,
          "fromPaper": "Clustering Algorithms for Tags"
     },
     {
          "head": {
               "text": "Evaluation Measurements",
               "type": "experiment"
          },
          "paragraphs": [
               "According to the requirement of clustering, we know that higher Similarity value and smaller Dissimilarity value indicate better clustering results.",
               "Our aim of the proposed method is to find out the similar tags, which assign to different resources. Here we assume a better tag cluster composed by lots of similar tags and these tags are dissimilar to tags, which belong to other different tag clusters. In particular, we use Similarity and Dissimilarity to validate our method.",
               "Definition 6: Given tag cluster C, the Similarity is defined as"
          ],
          "paper_id": "24b06100-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 16,
          "fromPaper": "Clustering Algorithms for Tags"
     },
     {
          "head": {
               "text": "Experimental Results and Discussion",
               "type": "experiment"
          },
          "paragraphs": [
               "Definition 7: Given tag cluster C, the Dissimilarity is defined as",
               "Due to the priority of each tag has a close relationship with the kernel density which depends on the KNN neighbor, there have a relationship between the number of K and the tag's priority.",
               "In order to present this relationship, we manually extract thirty tags, which form two clusters from MedWorm data set. The priority of each tag has shown in (the value of priority is multi by 100) with K equal to 4, 8, and 12, respectively. From , we can find that the change of K has no influence on the tag's priority, as well as the structure of cluster.",
               "As we discussed in the previous sections, tagging clustering can make tags be organized into groups over clusters. That is to say, by clustering, tags can be centralized into groups. In the following, we will conduct the experiments to evaluate the effect on the tag cluster's quality. gives the comparison result of Similarity and Dissimilar- . The relationship between tag's priority and K ity on Medworm and MovieLens datasets. From , we can first find that the cluster results on two datasets are nearly coincident under different K's settings. This phenomenon validates our previous experiment of the relationship between tag's priority and K's setting. As we defined in Definition 6 and 7, the higher Similarity value and the smaller Dissimilarity value indicate high quality of the tag cluster. On these two datasets, the Dissimilarity values are all small, and at the same time, the Similarity values are all high. This phenomenon shows that the quality of tag clusters obtained from Medworm and MovieLens by using our method are high. Interestingly, the clustering results derived from Medowrm look better than that of Movielens, which might be due to the tags used in Medowrm dataset is focused on a more specialized medical domain, while the domain topics span more diversely on Movielens dataset. This finding is also verified by the measures of Dissimilarity.",
               "In order to show the effectiveness of the proposed method, we execute traditional clustering algorithm K-means and our proposed algorithm LIPC on these two real world datasets as well. The experimental results are shown in .",
               "From , we can find that the quality of clustering results obtained by LIPC is better than that of K-means. Particularly, in one hand, the Dissimilarity values of LIPC on two datasets are smaller than that of K-means, and on the other hand, the Similarity values of LIPC on two datasets are, on the contrary, larger than that of Kmeans. This phenomenon indicates that LIPC algorithm has ability of finding better clustering results than that of K-means."
          ],
          "paper_id": "24b06100-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 17,
          "fromPaper": "Clustering Algorithms for Tags"
     },
     {
          "head": {
               "text": "CONCLUSION",
               "type": "conclusion"
          },
          "paragraphs": [
               "Tagging clustering is a useful method to find out interest tag cluster embedded in tag datasets and it has a potential in improving the effectiveness and accuracy of tag based recommender system. In this chapter, we (1) briefly discuss the background and related work of tagging clustering; (2) conclude five different tag similarity measurements which commonly used in the lectures; (3) propose a Local Information Passing Clustering algorithm (LIPC) for tags which is based on calculating the priority of tag. In LIPC, we first use the KNN neighbor and Kernel density estimate method to find out the local information of each tag, and then, and define I and O operators to transit the local information over all the tags and further generate tag priority, at last, we use the tag priority to find the representative centre of various clusters.",
               "Experimental results conducted on two real world datasets have demonstrated the effectiveness and advantage of the proposed method in comparison to other traditional clustering approaches. This chapter will benefit both academic and industry communities, who are interested in the techniques and applications of tagging clustering, recommendation, as well as Web community and social network analysis, for either in-depth academic research or industrial development in related areas.",
               "Felipe, S. M., . Target-language-driven agglomerative part-of-speech tagging clustering for machine translation. Advances in Artificial Intelligence, 4239, 844-854."
          ],
          "paper_id": "24b06100-97d4-11e8-9580-1f0eb29018a9",
          "paragraphNo": 18,
          "fromPaper": "Clustering Algorithms for Tags"
     }
]