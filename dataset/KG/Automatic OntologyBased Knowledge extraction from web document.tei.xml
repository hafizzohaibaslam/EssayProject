<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 D:\grobid-master\grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.1-SNAPSHOT" ident="GROBID" when="2019-10-04T09:59+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Automatic Ontology- Based Knowledge Extraction from Web Documents</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Harith</forename><surname>Alani</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of Southampton</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sanghee</forename><surname>Kim</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of Southampton</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><forename type="middle">E</forename><surname>Millard</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of Southampton</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mark</forename><forename type="middle">J</forename><surname>Weal</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of Southampton</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wendy</forename><surname>Hall</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of Southampton</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Paul</forename><forename type="middle">H</forename><surname>Lewis</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of Southampton</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nigel</forename><forename type="middle">R</forename><surname>Shadbolt</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of Southampton</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Automatic Ontology- Based Knowledge Extraction from Web Documents</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<note>N a t u r a l L a n g u a g e P r o c e s s i n g</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>T o bring the Semantic Web to life and provide advanced knowledge services, we need efficient ways to access and extract knowledge from Web documents. Although Web page annotations could facilitate such knowledge gathering, annotations are rare and will probably never be rich or detailed enough to cover all the knowledge these documents contain. Manual annotation is impractical and unscalable, and automatic annotation tools remain largely undeveloped. Specialized knowledge services therefore require tools that can search and extract specific knowledge directly from unstructured text on the Web, guided by an ontology that details what type of knowledge to harvest. An ontology uses concepts and relations to classify domain knowledge. Other researchers have used ontologies to support knowledge extraction, 1,2 but few have explored their full potential in this domain. The Artequakt project links a knowledge extraction tool with an ontology to achieve continuous knowledge support and guide information extraction. The extraction tool searches online documents and extracts knowledge that matches the given classification structure. It provides this knowledge in a machine-readable format that will be automatically maintained in a knowledge base (KB). Knowledge extraction is further enhanced using a lexicon-based term expansion mechanism that provides extended ontology terminology. plete knowledge to populate the ontology. Artequakt attempts to identify entity relationships using ontol-ogy relation declarations and lexical information. Storing information in a structured KB supports diverse knowledge services-for example, reconstructing the original source material to produce a dynamic presentation tailored to user needs. Previous work in this area has highlighted the difficulties of maintaining a rhetorical structure across a dynamically assembled sequence. 3 Most dynamic narrative techniques have used robust story schema such as the typical news program format (a sequence of atomic bulletins). 4 Building a story-schema layer over an ontology lets us create dynamic stories within specific domains. By populating the ontology through automatic-knowledge-acquisition software, we let users construct those stories from the Web&apos;s vast wealth of information. Artequakt combines expertise and experience from three separate projects: Artequakt automatically extracts knowledge about artists from the Web, populates a knowledge base, and uses it to generate personalized biographies.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Artequakt</head><p>Many information extraction (IE) systems can recognize entities in documents-for example, that "Rembrandt" is a person or "15 July 1606" is a date. However, such information isn't very useful without the relation between these entities-that is, Rembrandt was born on 15 July 1606. Extracting such relations automatically lets us acquire more com-</p><p>? Artiste: A European project to develop a distributed database of art images. This has recently been succeeded by Sculpteur, which will extend the database to 3D objects and integrate with the Semantic Web.</p><p>? The Equator IRC: An Engineering and Physical Sciences Research Council-funded Interdisciplinary Research Collaboration that uses narrative techniques to structure and present information.</p><p>? The AKT IRC: An EPSRC-funded IRC examining all aspects of the knowledge life cycle.</p><p>During Artequakt's first stage, we created an ontology for the artists and paintings domain. We developed and applied several IE tools and techniques that automatically populate the ontology with information extracts from online documents on the basis of the given ontology's representations and WordNet lexicons. The system stores information in a KB and analyzes it for duplications. In the second stage, we developed narrative construction tools to query the KB through an ontology server, search and retrieve relevant facts or text, and generate a specific biography on demand.</p><p>Automatically generating tailored biographies offers two benefits. First, it can provide biographies of artists for whom available information is sparse and strewn across the Web. This might mean constructing text from basic factual information or combining text from several sources. Second, the method provides biographies tailored to a user's interests and requirements. To provide a project focus and a demonstration corpus of data, we chose the subject domain of impressionist artists and their paintings. The techniques developed do apply, however, to other domains. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Architecture</head><p>Artequakt's architecture (see <ref type="figure" target="#fig_1">Figure 1</ref>) comprises three key areas. First, knowledge extraction tools glean information items along with sentences and paragraphs from Web documents manually selected or obtained automatically using appropriate search engine technology. The tools pass the information fragments to the ontology server along with metadata derived from the ontology's vocabulary. Second, the ontology server stores and consolidates the information so that the biography generation tool can query the KB using an inference engine. Third, the Artequakt server takes user requests to generate narratives through a simple Web interface. The user might request a particular style of biography, such as a chronology or summary, or a specific focus such as the artist's style or body of work. The server uses story templates to render a narrative from the KB.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Ontology</head><p>An ontology conceptualizes a domain into a machine-readable format. For Artequakt, we created an ontology to represent the artist and artifacts domain. We implemented this ontology in Prot¨¦g¨¦ (http://protege.stanford.edu), a graphical ontology editing tool that also stores the knowledge base. We constructed this ontology using sections of the CIDOC Conceptual Reference Model ontology (http://cidoc.ics.forth.gr/index.html). The ICOM/CIDOC Documentation Standards Group developed CRM to represent an ontology for cultural-heritage information and gather existing disparate museum and cultural-heritage information sources into one coherent source.</p><p>The CRM ontology represents artifacts and their production, ownership, location, and other attributes. We modified this ontology for Artequakt and enriched it with additional classes and relationships to represent artists' personal information, family relations, relations with other artists, details of their work, and so on. The Artequakt ontology also stores text with its source URLs so that the system can later reorganize them using the ontology as a guide.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Knowledge extraction</head><p>Much Web information exists as natural language documents. A promising approach to accessing this knowledge uses IE to reduce the documents to tabular structures from which you retrieve document fragments as answers to queries. However, exploiting such techniques for practical purposes remains difficult because of the time and effort needed to manually annotate many texts and the need for templates that stipulate information types to extract. 5 Many IE systems rely on predefined templates and patternbased extraction rules or machine learning techniques to identify certain entities in text documents. Web documents, however, use limitless vocabularies, structures, and composition styles to define approximately the same content, making it hard for any IE technique to cover all writing pattern variations. For example, even if two biographic documents have similar content, they might use different expressions or linguistic structures. More important, traditional IE systems lack the domain knowledge required to pick out relationships between the extracted entities.</p><p>These observations prompted us to use an ontology coupled with WordNet (www. cogsci.princeton.edu/~wn), a general-purpose lexical database, and GATE 6 (General Architecture for Text Engineering, http://gate. ac.uk), an entity recognizer, to identify knowl-then sentences. It analyzes each paragraph syntactically and semantically to identify relevant knowledge. The Apple Pie Parser (www.cs.nyu.edu/cs/projects/proteus/ app) groups phrases that the syntactical analysis determines to be grammatically related. Using semantic analysis, the tool then locates a sentence's main components (subject, verb, object, and so on) and identifies named entities (for example, Rembrandt is a person and Leiden is a place) using GATE and WordNet. The system also uses GATE to resolve anaphoric references (personal pronouns).</p><p>The following is a paragraph extracted from the first Web document selected:</p><p>Rembrandt Harmenszoon van Rijn was born on 15 July 1606 in Leiden, the Netherlands. His father was a miller who wanted the boy to follow a learned profession, but Rembrandt left the University of Leiden to study painting. His early work was devoted to showing the lines, light and shade, and color of the people he saw about him.  edge fragments consisting of not just entities but also the relations between them. We used automatic term expansion to widen the scope of text analysis and cover syntactic patterns that imprecisely matched our definitions. <ref type="figure" target="#fig_2">Figure 2</ref> shows the prototype interface for searching for an artist and selecting the profile of interest. When a user enters an artist's name, such as Rembrandt, the system quickly searches the KB to see whether biographical knowledge for this artist exists.</p><p>If the given artist is new to the KB, the system deploys a script to search the Web using the artist's name as input. Because we needed a way to filter out irrelevant documents from the search engine results, we searched by example, using sample documents from trusted sites to measure similarity between query and search results. We obtained exemplars from the Web Museum site (www. ibiblio.org/wm/paint), which provides short artist biographies. Artequakt applies a vector similarity measure to compare the Web Museum page on a given artist with the search engine results, selecting only those with a similarity above a certain threshold. <ref type="table" target="#tab_0">Table 1</ref> shows some of the accepted and rejected Web sites for Rembrandt. The accepted sites, filtered out of more than 60 URLs returned by the Yahoo and AltaVista search engines, provide information about Rembrandt's life and paintings. The rejected sites represent restaurants and hotels named "Rembrandt."</p><p>This filtering method doesn't always locate a good example document, however, especially when the query seeks a relatively new or unknown artist. We could expand queries with related terms to improve the results, but this probably won't remove the need for filtering. We're experimenting with techniques to measure document relevancy using term vectors constructed directly from the ontology terminology.</p><p>Once the extraction system has selected the documents, it divides them into paragraphs, To extract binary relationships between a pair of entities, we need domain-specific semantic knowledge, which we can infer from the ontology and use to determine required and expected relations between the entities. At this stage, Artequakt submits a query to the ontology server to obtain such knowledge. It also uses WordNet lexical chains to reduce linguistic variations among relations defined in the ontology and the extracted text. The chains include synonyms, hypernyms (broader terms), and hyponyms (narrower terms).</p><p>For example, the system can match the concept of depict with portray (synonym) and represent (hypernym). Because a relation can have multiple WordNet entries (polysemous words), the mapping between a relation and an entry in WordNet accounts for syntactic and semantic clues in a sentence. For example, the date_of_birth relation maps onto the concept of birth which, according to WordNet, has four noun senses and one verb sense. The system selects the first noun sense because one of its hypernyms, time period, has date as a hyponym. The extracted synonyms for the verb sense include give birth and bear. By giving the IE process direct access to the ontology concepts and relations, our approach bypasses the need for predefined external templates. <ref type="figure" target="#fig_3">Figure 3a</ref> shows the extraction results from the sentence "Rembrandt Harmenszoon van Rijn was born on 15 July 1606 in Leiden, the <ref type="figure" target="#fig_3">Figure 3b)</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Netherlands." GATE and WordNet annotations highlight that Rembrandt Harmenszoon van Rijn is a person's name, 15 July 1606 is a date, and Leiden and</head><note type="other">Netherlands are locations. Artequakt extracts relations by the categorization result of the verb bear, which matches with two potential relations: date_of_birth and place_of_birth. Because both relations are associated with 15 July 1606 and Leiden and Netherlands, respectively, this sentence generates two knowledge triples about Rembrandt (see</note><p>Each extraction process yields an XML representation of the facts, paragraphs, sentences, and keywords identified in the selected documents. The extraction process terminates by sending the new XML files to the ontology server to be inserted into the KB.</p><p>Currently, Artequakt only launches knowledge acquisition when the KB contains no information about the queried artist. We plan to extend the system to let users submit a specific URL for analysis or request a new search if the biographies presented lack the required information. Also, users could periodically reinitiate the extraction process, searching for new Web sites to add to or update the KB's knowledge stores. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>XML</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Automatic ontology population</head><p>To provide valuable, consistent ontologybased knowledge services, we must populate ontologies with many high-quality instantiations. By ontology population we mean the insertion of information into the KB following the ontology domain representation. Manual ontology population is labor intensive and time consuming. Some semiautomatic approaches create document annotations and store the results as assertions in an ontology. One method adds relationships automatically between instances only if they already exist in the KB; otherwise user intervention is needed. <ref type="bibr" target="#b1">2</ref> Another framework applies user-driven ontology-based annotations, 1 reinforced with the IE learning tool Amilcare. <ref type="bibr">7</ref> However, this framework can't reliably identify relationships. Artequakt moves toward fully automatic feeding of Web-based knowledge to the ontology. XML files, one per document, represent information extracted in Artequakt with respect to a given ontology using tags mapped directly from ontology class and relationship names. <ref type="figure" target="#fig_6">Figure 4</ref> shows an example of this XML representation and how Artequakt asserts it in the ontology.</p><p>The ontology server we're experimenting &lt;person&gt; &lt;name&gt;Rembrandt Harmenszoon van Rijn&gt;&lt;/name&gt; &lt;place_of_birth&gt;Leiden, Netherlands &lt;/place_of_birth&gt; &lt;date_of_birth&gt; &lt;day&gt;15&lt;/day&gt; &lt;month&gt;July&lt;/month&gt; &lt;year&gt;1606&lt;/year&gt; &lt;/date_of_birth&gt; &lt;/person&gt; with uses Java sockets and connects to the Artequakt KB through the Prot¨¦g¨¦ application programming interface. A limited inference engine built on this server lets us query the KB to retrieve specific information-for example, all paragraphs that mention a specific artist's birth date, a painting's creator, or all available facts about an artist. Artequakt's ontology server sends some extracted knowledge to a relational database for quick access to frequently used information through SQL queries when generating biographies.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Narrative generation</head><p>Machines can effectively use structured ontologies to exchange information, but humans need a more intuitive interface. Storytelling offers a natural way to do this, and a wealth of critical and philosophical thought exists on using narrative to construct stories (in our case, biographies) from raw information. Narratologists frequently divide narration into story, the basic description of the fundamental events, and discourse, the techniques used to vary the presentation.   &lt;url&gt;http://www.ibiblio.org/wm/paint/auth/rembrandt&lt;/url&gt; &lt;text&gt;Rembrandt Harmenszoon van Rijn was born on July 15, 1606, in Leiden, the Netherlands. His father was a miller who wanted the boy to follow a learned profession.... He was influenced by the work of Caravaggio and was fascinated by the work of many other Italian artists. &lt;/text&gt; &lt;sentence&gt; &lt;text&gt;Rembrandt Harmenszoon van Rijn was born on July 15, 1606 in Leiden the Netherlands&lt;/text&gt; &lt;Person&gt; &lt;name&gt;Rembrandt Harmenszoon van Rijn&lt;/name&gt; &lt;place_of_birth&gt;leiden,netherlands&lt;place_of_birth&gt; &lt;date_of_birth&gt; &lt;day&gt;15&lt;/day&gt; &lt;month&gt;7&lt;/month&gt; &lt;year&gt;1606&lt;/year&gt; &lt;/date_of_birth&gt; &lt;/Person&gt; &lt;/sentence&gt; .... &lt;sentence&gt; &lt;text&gt;He was influenced by the work of Caravaggio and was&lt;/text&gt; &lt;Person&gt; &lt;name&gt;Rembrandt Harmenszoon van Rijn&lt;/name&gt; &lt;inspired_by&gt;by the work of caravaggio&lt;/inspired_by&gt; &lt;/Person&gt; &lt;/sentence&gt; .... &lt;Paragraph&gt; In Artequakt, the KB essentially contains our underlying story-it stores abstract pieces of information without any explicit ordering, just relationships. Strictly speaking, because the fragments consist mainly of text paragraphs harvested from Web pages, they might already contain discourse elements (focalization, tense information, and so on). To produce the eventual discourse (here, HTML pages), we must first arrange story elements into a sensible sequence and then render them into a text.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Biography templates</head><p>To arrange the story, Artequakt uses human-authored biography templates that contain data and KB queries. The templates are authored in the Fundamental Open Hypermedia Model and stored as XML files in the Auld Linky contextual structure server. <ref type="bibr">8</ref> Artequakt constructs any given biography from several substructures. The basic structure is the sequence; it represents a list of queries that must be instantiated and inserted into the biography in order. We author these queries using the terms defined in the ontology. Other structures allow more complex effects. For example, a concept contains several queries, any of which may be used at this point in the biography. A level of detail (LOD) resembles a concept but orders the queries on the basis of preference-that is, use the highest-numbered query; if that's not possible, use the next highest, and so on. These structures can be nested (for example, a sequence of concepts).</p><p>Some queries retrieve paragraphs directly, whereas others query the KB for specific facts and construct sentences dynamically from the results. This can be useful for inferred facts (that therefore have no corresponding text sections) or when no paragraph fits the rest of the biography's literary form (for example, the biography is in the third person, but all available paragraphs are in the first person). <ref type="figure" target="#fig_9">Figure 5</ref> shows a sample template that uses a sequence of four story fragments. These can be either database queries (resolved into an original paragraph) or KB queries (sentences that the system must construct). The fourth entry in the sequence is an XOR (exclusive OR) choice (implemented by a LOD structure): if the query finds no paragraph, the system constructs the sentence from the KB.</p><p>The templates also contain information on appropriate biography structure elements for different contexts. When a user querying Auld Linky for the template specifies a context, the system prunes unnecessary template parts. For example, <ref type="figure" target="#fig_9">Figure 5</ref> shows the third sequence item, artist style, marked as suitable for only those interested in this topic; otherwise the system ignores the entire third branch. This mechanism helps Artequakt tailor the biography's structure and contents to user interests.</p><p>Once the system retrieves the template from Auld Linky, it must instantiate the template by making each query in turn and then rendering the results into an HTML page for display. <ref type="figure" target="#fig_10">Figure 6</ref> shows a biography of Rembrandt rendered from our sample template (where context specifies an interest in style). Taking the artist instance name from the KB generated the heading. Templates can include their own text-for example, the sample template's subheading Summary Biography. The first paragraph, extracted from the Web Museum site, concerns Rembrandt's birth. The second section uses text from different sites to describes Rembrandt's painting style.</p><p>The final sentence provides details of Rembrandt's death. No suitable paragraph existed in the database, so the system constructed a simple sentence from basic facts in the KB.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Results</head><p>Query database: A paragraph containing the "style" theme.</p><p>We've had reasonable success producing readable biographies using Artequakt. In an initial experiment, we ran Artequakt to search and extract information from the Web on 10 impressionist artists. We set up the knowledge extraction tool to select the first 10 relevant pages for each artist, for a total of 100 Web pages to analyze. The extraction process identified over 800 paragraphs and thousands of entities and relations, many of which were duplicates. Once we fed the extracted knowledge to the KB and consolidated it, 280 unique person-entities remained, along with over 600 unique relations associating these people with various pieces of information such as their professional relationships to other artists, family members, where they lived or studied, and where and when they were born or died.</p><p>When generating the biographies, we used our main summary template that attempts to chronicle an artist's life and include both personal and professional information. This template contained 10 queries that the system could instantiate. We found that it typically instantiated four of the possible 10 branches and included one paragraph for each branch.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Further challenges</head><p>The Artequakt project faces several challenges with ontology population and maintenance, knowledge extraction, and the generation of personalized artist biographies. User-driven ontology population tools must avoid duplicating information across documents and creating redundant annotations. <ref type="bibr" target="#b5">9</ref> Automatic ontology population approaches face similar issues, and, although they speed knowledge acquisition, precision and recall might decrease. Automatically populating an ontology from diverse, distributed Web resources also presents difficulties, particularly that of consolidating duplicate information that arises when extracting similar or overlapping information from different sources. We must tackle this problem to maintain the referential integrity and results quality of any ontology-based knowledge service. <ref type="bibr" target="#b7">10</ref> We have made some headway on this with Artequakt. <ref type="bibr">11</ref> The Artequakt extraction tool automatically retrieves metadata triplets (subjectrelation-object) from the ontology to overcome the limitations of predefined fixed templates. This flexibility increases as the number of ontology class and relationship names decrease, thus avoiding, for example, compound or obscure names that might confuse concept identification and term expansion. Our approach covers semantic variations well, but coverage might decrease with limited term expansion. Also, the extraction tool cannot distinguish between ontology relations with synonymous names that connect the same classes. We avoid this by specifying appropriate synonyms for the classes and relations during ontology design to remove possible ambiguities.</p><p>Specificity also presents challenges to automatic extraction. For example, while we can easily identify an entity as a person, it's harder to tell whether this person is a painter or a sculptor. We could infer that knowledge when we extract more facts about that person, such as information about paintings or sculptures produced. Likewise, generating a narrative can prove difficult if extracted sentences contain coreferences that must be resolved in the overall narrative context. For example, a sentence using the pronoun "he" makes sense only if the artist was the previous subject. Similarly, replacing artist name occurrences with appropriate pronouns might make the text more readable.</p><p>Finally, during narrative rendering, duplication might occur when selected sentences contain more information than the template requests. A query for a sentence containing a birthdate might include information on the artist's parents, and a system that tracks this additional information could avoid later duplication. On the other hand, if we have many paragraphs about the artist's family life, determining how many of these to include in the biography will depend on such factors as the biography's desired length, interest level in that topic, and so on. Refining narrative generation techniques will improve biographies' quality and relevance to users. W e should, theoretically, be able to apply Artequakt to other domains with little technical change. For example, we can replace the current artist ontology with an actor ontology that extracts specified information about actors. To improve entity recognition performance, domain-specific entities such as painting styles or films need specialized extraction rules that we can modify when the domain changes. We plan to further investigate and develop Artequakt's generic architecture. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>Artequakt automatically extracts knowledge about artists from the Web, populates a knowledge base, and uses it to generate personalized biographies.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 .</head><label>1</label><figDesc>Figure 1. The Artequakt architecture.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 .</head><label>2</label><figDesc>Figure 2. Artequakt's user interface.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 . An example of knowledge extraction: (a) extraction results and (b) knowledge triples.</head><label>3</label><figDesc>Figure 3. An example of knowledge extraction: (a) extraction results and (b) knowledge triples.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 4 . Automatic ontology population: (a) XML file of extracted information; (b) the corresponding instances and relationships in the ontology.</head><label>4</label><figDesc>Figure 4. Automatic ontology population: (a) XML file of extracted information; (b) the corresponding instances and relationships in the ontology.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Queries</head><label></label><figDesc></figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 5 .</head><label>5</label><figDesc>Figure 5. Templates contain queries that are resolved into the final text.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 6 .</head><label>6</label><figDesc>Figure 6. The final rendered biography of Rembrandt.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>5</head><label></label><figDesc>. R. Yangarber and R. Grishman, "Machine Learning of Extraction Patterns from Unan- notated Corpora: Position Statement," Work- shop Machine Learning for Information Extraction (14th European Conf. Artificial Intelligence), IOS Press, Amsterdam, 2000, pp. 76-83.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>Table 1 .</head><label>1</label><figDesc></figDesc><table>Filtered set of Web documents about Rembrandt. 

Accepted sites 
Rejected sites 

www.ibiblio.org/wm/paint/auth/rembrandt 
www.rembrandt-s.com 
www.mcs.csuhayward.edu/~malek/Rembran.html 
www.rembrandts.com 
www.artchive.com/artchive/R/rembrandt.htmls 
www.hotelrembrandt.co.uk 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="false"><head>://www.ibiblio.org/wm/paint/ auth/rembrandt Paragraph url part of</head><label></label><figDesc></figDesc><table>Sentence 

Rembrandt Harmenszoon van Rijn was born 
on July 15, 1606, in Leiden, the Netherlands. 
His father was a miller who wanted the boy 
to follow a learned profession.... He was 
influenced by the work of Caravaggio and 
was fascinated by the work of many other 
Italian artists. 

part of 

part of 

Rembrandt Harmenszoon van Rijn 
was born on July 15 1606 in Leiden 

He was influenced by 
the work of Caravaggio 

has_information_text 

Person_1 

Rembrandt 
Harmenszoon 
van Rijn 

Person 

name 

inspired_by 

place_ of_birth 

Person_2 
Place_2 

Place 

name 

name 

Leiden Netherlands 
Caravaggio 

</table></figure>

			<note place="foot">JANUARY/FEBRUARY 2003 computer.org/intelligent</note>

			<note place="foot" n="16"> computer.org/intelligent IEEE INTELLIGENT SYSTEMS</note>

			<note place="foot">computer.org/intelligent IEEE INTELLIGENT SYSTEMS</note>

			<note place="foot">JANUARY/FEBRUARY 2003 computer.org/intelligent 19</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>This work is part of a larger project funded in part by the EU Framework 5 Information Societies Technology project Sculpteur <ref type="bibr">(IST-2001-35372)</ref>, the Engineering and Physical Sciences Research Council's Interdisciplinary Research Collaborations project Equator (GR/N15986/01), and the EPSRC IRC project Advanced Knowledge Technologies (GR/N15764/01). We thank Hugh Glaser, Srinandan Dasmahapatra, and David De Roure for their contributions.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Knowledge Engineering and Knowledge Management: Ontologies and the Semantic Web</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Handschuh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Staab</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Ciravegna</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 13th Int&apos;l Conf. Knowledge Eng. and Knowledge Management (EKAW 02)</title>
		<meeting>13th Int&apos;l Conf. Knowledge Eng. and Knowledge Management (EKAW 02)<address><addrLine>Germany</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2002" />
			<biblScope unit="page" from="358" to="372" />
		</imprint>
	</monogr>
	<note>Heidelberg</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Knowledge Extraction Using an Ontology-Based Annotation Tool</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Vargas-Vera</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Workshop on Knowledge Markup &amp; Semantic Annotation</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="5" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Generating Presentation Constraints from Rhetorical Structure</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Rutledge</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 11th ACM Conf. Hypertext and Hypermedia</title>
		<meeting>11th ACM Conf. Hypertext and Hypermedia<address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2000" />
			<biblScope unit="page" from="19" to="28" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Automatic Construction of Personalized TV News Programs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Merialdo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 7th ACM Conf. Multimedia</title>
		<meeting>7th ACM Conf. Multimedia<address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1999" />
			<biblScope unit="page" from="323" to="331" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Fragments from the Web</title>
	</analytic>
	<monogr>
		<title level="m">Workshop Semantic Authoring, Annotation &amp; Knowledge Markup (15th European Conf. Artificial Intelligence)</title>
		<editor>ness, and Adaptivity-Proc. OHS-7, SC-3, and AH-3</editor>
		<meeting><address><addrLine>Heidelberg, Germany; Amsterdam</addrLine></address></meeting>
		<imprint>
			<publisher>IOS Press</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">An Annotation Framework for the Semantic Web</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Staab</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Maedche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Handschuh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 1st Int&apos;l Workshop MultiMedia Annotation</title>
		<meeting>1st Int&apos;l Workshop MultiMedia Annotation</meeting>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Knowledge Engineering and Knowledge Management: Ontologies and the Semantic Web</title>
	</analytic>
	<monogr>
		<title level="m">Proc. 13th Int&apos;l Conf. Knowledge Eng. and Knowledge Management (EKAW 02)</title>
		<meeting>13th Int&apos;l Conf. Knowledge Eng. and Knowledge Management (EKAW 02)<address><addrLine>Germany</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2002" />
			<biblScope unit="page" from="317" to="334" />
		</imprint>
	</monogr>
	<note>Heidelberg</note>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Artequakt: Generating Tailored Biographies with Automatically Annotated For more information on this or any other computing topic</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Alani</surname></persName>
		</author>
		<ptr target="http://computer.org/publications/dlib" />
		<imprint/>
	</monogr>
	<note>Managing Reference: Ensur-11</note>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">January/</forename><surname>February</surname></persName>
		</author>
		<idno>computer.org/intelligent</idno>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
