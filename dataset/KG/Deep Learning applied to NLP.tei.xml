<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 D:\grobid-master\grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.1-SNAPSHOT" ident="GROBID" when="2019-10-04T09:59+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Deep Learning applied to NLP</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marc</forename><surname>Moreno Lopez</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">College of Engineering and Applied Sciences</orgName>
								<orgName type="institution" key="instit1">University of Colorado Colorado Springs Colorado Springs</orgName>
								<orgName type="institution" key="instit2">University of Colorado Colorado Springs Colorado Springs</orgName>
								<address>
									<region>Colorado, Colorado</region>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jugal</forename><surname>Kalita</surname></persName>
							<email>jkalita@uccs.edu</email>
							<affiliation key="aff0">
								<orgName type="department">College of Engineering and Applied Sciences</orgName>
								<orgName type="institution" key="instit1">University of Colorado Colorado Springs Colorado Springs</orgName>
								<orgName type="institution" key="instit2">University of Colorado Colorado Springs Colorado Springs</orgName>
								<address>
									<region>Colorado, Colorado</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Deep Learning applied to NLP</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<note>College of Engineering and Applied Sciences</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<textClass>
				<keywords>Index Terms-Convolutional Neural Network, Natural Lan- guage</keywords>
			</textClass>
			<abstract>
				<p>Convolutional Neural Network (CNNs) are typically associated with Computer Vision. CNNs are responsible for major breakthroughs in Image Classification and are the core of most Computer Vision systems today. More recently CNNs have been applied to problems in Natural Language Processing and gotten some interesting results. In this paper, we will try to explain the basics of CNNs, its different variations and how they have been applied to NLP.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>Deep learning methods are becoming important due to their demonstrated success at tackling complex learning problems. At the same time, increasing access to high-performance computing resources and state-of-the-art open-source libraries are making it more and more feasible for everyone to use these methods.</p><p>Natural Language Processing focuses on the interactions between human language and computers. It sits at the intersection of computer science, artificial intelligence, and computational linguistics. NLP is a way for computers to analyze, understand, and derive meaning from human language in a smart and useful way. By utilizing NLP, developers can organize and structure knowledge to perform tasks such as automatic summarization, translation, named entity recognition, relationship extraction, sentiment analysis, speech recognition, and topic segmentation. The development of NLP applications is challenging because computers traditionally require humans to communicate to them via a programming language. Programming languages are precise, unambiguous and highly structured. Human speech, however, is not always precise, it is often ambiguous and the linguistic structure can depend on many complex variables, including slang, regional dialects and social context. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>arXiv:1703.03091v1 [cs.CL] 9 Mar 2017</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Introduction to CNN</head><p>A Neural Network is a biologically-inspired programming paradigm which enables a computer to learn from observed data. It is composed of a large number of interconnected processing elements, neurons, working in unison to solve a problem. An ANN is configured for a specific application, such as pattern recognition or data classification, through a learning process.</p><p>Convolutional Neural Networks are very similar to ordinary Neural Networks. They are also made up of neurons that have learnable weights and biases. The main difference is the number of layers. CNN are just several layers of convolutions with nonlinear activation functions applied to the results. In a traditional NN each input neuron is connected to each output neuron in the next layer. That is called a fully connected layer. In CNNs, instead, convolutions are used over the input layer to compute the output. This results in local connections, where each region of the input is connected to a neuron in the output. Each layer applies different filters, typically hundreds or thousands and combines their results.</p><p>A key aspect of Convolutional Neural Networks is the use of pooling layers, typically applied after the convolutional layers. Pooling layers subsample their input. The most common way to perform pooling it to apply a max operation to the result of each filter. The pooling process can also be applied over a window. There are two main reasons to perform pooling.</p><p>One property of pooling is that it provides a fixed size output matrix, which typically is required for classification. This allows the use of variable size sentences, and variable size filters, but always obtaining the same output dimensions to feed into a classifier.</p><p>Pooling also reduces the output dimensionality while keeping the most salient information. You can think of each filter as detecting a specific feature. If this feature occurs somewhere in the sentence, the result of applying the filter to that region will yield a large value, but a small value in other regions. By performing the max operation information is kept about whether or not the feature appeared in the sentence, but information is lost about where exactly it appeared. Resuming, global information about locality is lost (where in a sentence something happens), but local information is kept since it is captured by the filters.</p><p>During the training phase, a CNN automatically learns the values of its filters based on the task that to be performed. For example, in Image Classification a CNN may learn to detect edges from raw pixels in the first layer, then use the edges to detect simple shapes in the second layer, and then use these shapes to deter higher-level features, such as facial shapes in higher layers. The last layer is then a classifier that uses these high-level features.</p><p>Instead of image pixels, the input to most NLP tasks are sentences or documents represented as a matrix. Each row of the matrix corresponds to one token, typically a word, but it could be a character. That is, each row is vector that represents a word. Typically, these vectors are word embeddings (lowdimensional representations), but they could also be one-hot vectors that index the word into a vocabulary. For a 10 word sentence using a 100-dimensional embedding we would have a 10x100 matrix as our input.</p><p>In computer vision, the filters slide over local patches of an image, but in NLP filters slide over full rows of the matrix (words). Thus, the width of the filters is usually the same as the width of the input matrix. The height, or region size, may vary, but sliding windows over 2-5 words at a time is the typical size.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. MOTIVATION</head><p>In this paper, Bitvai et al. compare the efficiency of an CNN over an ANN. They consider problem of predicting the future box-office takings of movies based on reviews by movie critics and movie attributes. An artificial neural network (ANN) is proposed for modelling text regression. In language processing, ANNs were first proposed for probabilistic language modelling, followed by models of sentences and parsing inter alia. These approaches have shown strong results through automatic learning dense low-dimensional distributed representations for words and other linguistic units, which have been shown to encode important aspects of language syntax and semantics. They also develop a convolutional neural network, inspired by their breakthrough results in image processing and recent applications to language processing. Past works have mainly focused on ?big data? problems with plentiful training examples. Given the large numbers of parameters, often in the millions, one would expect that such models can only be effectively learned on very large datasets. However in this paper they show that a complex deep convolution network can be trained on about a thousand training examples, although careful model design and regularisation is paramount. They consider the problem of predicting the future box-office takings of movies based on reviews by movie critics and movie attributes. Their approach is based on the method and dataset of <ref type="bibr">Joshi et al. (2010)</ref>, who presented a linear regression model over uni-, bi-, and tri-gram term frequency counts extracted from reviews, as well as movie and reviewer metadata. This problem is especially interesting, as comparatively few instances are available for training while each instance (movie) includes a rich array of data including the text of several critic reviews from various review sites, as well as structured data (genre, rating, actors, etc.) Inspired by <ref type="bibr">Joshi et al. (2010)</ref> their model also operates over n-grams, 1 ? n ? 3, and movie metadata, using an ANN instead of a linear model. They use word embeddings to represent words in a low dimensional space, a convolutional network with max-pooling to represent documents in terms of n-grams, and several fully connected hidden layers to allow for learning of complex nonlinear interactions. They show that including non-linearities in the model is crucial for accurate modelling, providing a relative error reduction of 40 per cent (MAE) over the best linear model. Their final contribution is a novel means of model interpretation.</p><p>Although it is notoriously difficult to interpret the parameters of an ANN, they show a simple method of quantifying the effect of text n-grams on the prediction output. This allows for identification of the most important textual inputs, and investigation of non-linear interactions between these words and phrases in different data instances.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. TYPES OF DEEP NEURAL NETWORKS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Recurrent neural network</head><p>The idea behind RNNs is to make use of sequential information. In a traditional neural network all inputs (and outputs) are independent of each other. But for many tasks that results in a bad performance. If the next word in a sentence is going to be predicted, there is the need know which words came before it. RNNs are called recurrent because they perform the same task for every element of a sequence, with the output being depended on the previous computations. Another way to think about RNNs is that they have a memory which captures information about what has been calculated so far. Theoretically RNNs can make use of information in arbitrarily long sequences, but in practice they are limited to looking back only a few steps. In <ref type="figure" target="#fig_3">Figure 4</ref> we can see what a typical RNN looks like.</p><p>Over the years researchers have developed more sophisticated types of RNNs to deal with some of the shortcomings of the original RNN model. 1) Bidirectional RNN: Bidirectional RNNs are based on the idea that the output at time t may not only depend on the previous elements in the sequence, but also future elements. For example, to predict a missing word in a sequence you want to look at both the left and the right context. Bidirectional RNNs are quite simple. They are just two RNNs stacked on top of each other. The output is then computed based on the hidden state of both RNNs.</p><p>2) Deep RNN: Deep (Bidirectional) RNNs are similar to Bidirectional RNNs, only that we now have multiple layers per time step. In practice this gives us a higher learning capacity (but we also need a lot of training data). 3) LSTM networks: LSTMs don?t have a fundamentally different architecture from RNNs, but they use a different function to compute the hidden state. The memory in LSTMs are called cells and you can think of them as black boxes that take as input the previous state and the current input. Internally these cells decide what to keep in (and what to erase from) memory. They then combine the previous state, the current memory, and the input. It turns out that these types of units are very efficient at capturing long-term dependencies.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Recursive neural network</head><p>A recursive neural network (RNN or RCNN) is a deep neural network created by applying the same set of weights recursively over a structure, to produce a structured prediction over the input, or a scalar prediction on it, by traversing a given structure in topological order. RNNs have been successful in learning sequence and tree structures in natural language processing, mainly phrase and sentence continuous representations based on word embedding.</p><p>RNN is a general architecture to model the distributed representations of a phrase or sentence with its dependency tree. It can be regarded as semantic modelling of text sequences and handle the input sequences of varying length into a fixedlength vector. The parameters in RCNN can be learned jointly with some other NLP tasks, such as text classification.</p><p>Each RNN unit can model the complicated interactions of the head word and its children. Combined with a specific task, RNN can capture the most useful semantic and structure information by the convolution and pooling layers.</p><p>Recursive neural networks, comprise a class of architecture that operates on structured inputs, and in particular, on directed acyclic graphs. A recursive neural network can be seen as a generalization of the recurrent neural network, which has a specific type of skewed tree structure. They have been applied to parsing, sentence-level sentiment analysis, and paraphrase detection. Given the structural representation of a sentence, e.g. a parse tree, they recursively generate parent representations in a bottom-up fashion, by combining tokens to produce representations for phrases, eventually producing the whole sentence. The sentence-level representation (or, alternatively, its phrases) can then be used to make a final classification for a given input sentence.</p><p>Similar to how recurrent neural networks are deep in time, recursive neural networks are deep in structure, because of the repeated application of recursive connections. Recently, the notions of depth in time the result of recurrent connections, and depth in space the result of stacking multiple layers on top of one another, are distinguished for recurrent neural networks. In order to combine these concepts, deep recurrent networks were proposed. They are constructed by stacking multiple recurrent layers on top of each other, which allows this extra notion of depth to be incorporated into temporal processing. Empirical investigations showed that this results in a natural hierarchy for how the information is processed. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Dependency based neural network</head><p>In order to capture long-distance dependencies a dependency-based convolution model (DCNN) is proposed. DCNN consists of a convolutional layer built on top of Long Short-Term Memory (LSTM) networks. DCNN takes slightly different forms depending on its input. For a single sentence, the LSTM network processes the sequence of word embeddings to capture long-distance dependencies within the sentence. The hidden states of the LSTM are extracted to form the low-level representation, and a convolutional layer with variable-size filters and max-pooling operators <ref type="figure" target="#fig_0">Figure 10</ref> illustrates such a graph. Small filters at higher layers can capture syntactic or semantic relations between noncontinuous phrases that are far apart in the input sentence. The feature graph induces a hierarchical structure somewhat akin to that in a syntactic parse tree. The structure is not tied to purely syntactic relations and is internal to the neural network. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E. Other neural networks</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Dynamic k-max pooling neural network</head><p>Dynamic k-max pooling is a generalization of the max pooling operator. The max pooling operator is a non-linear subsampling function that returns the maximum of a set of values. The operator is generalized in two respects. First, k-max pooling over a linear sequence of values returns the subsequence of k maximum values in the sequence, instead of the single maximum value. Secondly, the pooling parameter k can be dynamically chosen by making k a function of other aspects of the network or the input.</p><p>The convolutional layers apply one-dimensional filters across each row of features in the sentence matrix. Convolving the same filter with the n-gram at every position in the sentence allows the features to be extracted independently of their position in the sentence. A convolutional layer followed by a dynamic pooling layer and a non-linearity form a feature map. Like in the convolutional networks for object recognition ( <ref type="bibr">LeCun et al., 1998</ref>), the representation is enriched in the first layer by computing multiple feature maps with different filters applied to the input sentence. Subsequent layers also have multiple feature maps computed by convolving filters with all the maps from the layer below. The weights at these layers form an order-4 tensor. The resulting architecture is dubbed a Dynamic Convolutional Neural Network. Multiple layers of convolutional and dynamic pooling operations induce a structured feature graph over the input sentence. Insert <ref type="figure">figure.</ref> 1) Multi-column CNN: This model shares the same word embeddings, and s multiple columns of convolutional neural networks. The number of columns usually used is three, but it can have more or less depending on the context in which it has to be used. These columns are used to analyze different aspects of a question, i.e., answer path, answer context, and answer type. Typically this framework is combined with the learning of embeddings. The overview of this framework is shown in <ref type="figure" target="#fig_0">Figure 11</ref>. For instance, for the question when did Avatar release in UK, the related nodes of the entity Avatar are queried from FREEBASE. These related nodes are regarded as candidate answers (Cq). Then, for every candidate answer a, the model predicts a score S (q, a) to determine whether it is a correct answer or not.</p><p>2) Ranking CNN:</p><p>3) Context dependent CNN: The model architecture, shown in <ref type="figure">Figure x</ref>, is a variant of the convolutional architecture of <ref type="bibr">Hu et al. (2014)</ref>. It consists of two components: ? convolutional sentence model that summarizes the meaning of the source sentence and the target phrase; ? matching model that compares the two representations with a multi-layer perceptron <ref type="bibr">(Bengio, 2009)</ref>. Let E be a target phrase and F be the source sentence that contains the source phrase aligning to E. First of all F and E are projected into feature vectors x and y via the convolutional sentence model, and then the matching score s(x, y) is computed by the matching model. Finally, the score is introduced into a conventional SMT system as an additional feature. Convolutional sentence model. As shown in <ref type="figure" target="#fig_0">Figure 13</ref>, the model takes as input the embeddings of words (trained beforehand elsewhere) in F and E. It then iteratively summarizes the meaning of the input through layers of convolution and pooling, until reaching a fixed length vectorial representation in the final layer. In Layer-1, the convolution layer takes sliding windows on F and E respectively, and models all the possible compositions of neighbouring words. The convolution involves a filter to produce a new feature for each possible composition.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. NATURAL LANGUAGE PROCESSING</head><p>A. Basic NLP 1) A Re-ranking Model for Dependency Parser with Recursive Convolutional Neural Network: In this paper, Zhu et al. propose a recursive convolutional neural network (RCNN) architecture to capture syntactic and compositional-semantic representations of phrases and words. RCNN is a general architecture and can deal with k-ary parsing tree, therefore it is very suitable for dependency parsing. For each node in a given dependency tree, they first use a RCNN unit to model the interactions between it and each of its children and choose the most informative features by a pooling layer. Thus, the RCNN unit can be applied recursively to get the vector representation of the whole dependency tree. The output of each RCNN unit is used as the input of the RCNN unit of its parent node, until it outputs a single fixed-length vector at root node. When applied to the re-ranking model for parsing, RCNN improve the accuracy of base parser to make accurate parsing decisions. The experiments on two benchmark datasets show that RCNN outperforms the state-of-the-art models. The results obtained for this paper can be seen in <ref type="table">Table 1</ref> 2) Semantic Clustering and Convolutional Neural Network for Short Text Categorization: In this paper, <ref type="bibr">Wang et al.</ref> propose a novel method to model short texts based on semantic clustering and convolutional neural network. Particularly, they first discover semantic cliques in embedding spaces by a fast clustering algorithm: (1) semantic cliques are discovered using fast clustering method based on searching density peaks; (2) for fine-tuning multi-scale SUs, the semantic cliques are used to super-vise the selection stage. Since the neighbors of each word are semantically related in embedding space, clustering methods can be used to discover semantic cliques. Then, multiscale semantic units are detected under the supervision of semantic cliques, which introduce useful external knowledge for short texts. These meaningful semantic units are combined and fed into convolutional layer, followed by max-pooling operation. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3) Capturing Semantic Similarity for Entity Linking with</head><p>Convolutional Neural Networks: In this work, Francis-landau et al. present a model that uses convolutional neural networks to capture semantic correspondence between a mention?s context and a proposed target entity. These convolutional networks operate at multiple granularities to exploit various kinds of topic information, and their rich parameterization gives them the capacity to learn which n-grams characterize different topics. They model semantic similarity between a mention's source document context and its potential entity targets using CNNs. CNNs have been shown to be effective for sentence classification tasks and for capturing similarity in models for entity linking so they are expected to be effective at isolating the relevant topic semantics for entity linking. They show that convolutions over multiple granularities of the input document are useful for providing different notions of semantic context. Finally, they show how to integrate these networks with a preexisting entity linking system. Through a combination of these two distinct methods into a single system that leverages their complementary strengths, they achieve state-of-the-art performance across several datasets. The results obtained for this paper can be seen in 2) Event Detection and Domain Adaptation with Convolutional Neural Networks: In this paper, Nguyen et al. present a convolutional neural network for event detection that automatically learns features from sentences, and minimizes the dependence on supervised toolkits and resources for features, thus alleviating the error propagation and improving the performance for this task. First, they evaluate CNNs for event detection in the general setting and show that CNNs, though not requiring complicated feature engineering, can still outperform the state-of-the-art feature-based methods extensively relying on the other supervised modules and manual resources for features. Second, they investigate CNNs in a domain adaptation (DA) setting for event detection. They demonstrate that CNNs significantly outperform the traditional featurebased methods with respect to generalization performance across domains due to: (i) their capacity to mitigate the error propagation from the preprocessing modules for features, and (ii) the use of word embeddings to induce a more general representation for trigger candidates.  introduce ranking loss for their optimization. Finally, they show that combining convolutional and recurrent neural networks using a simple voting scheme is accurate enough to improve results. 1) The presented extended middle context, a new context representation for CNNs for relation classification. The extended middle context uses all parts of the sentence (the relation arguments, left of the relation arguments, between the arguments, right of the arguments) and pays special attention to the middle part. 2) They present connectionist bi-directional RNN models which are especially suited for sentence classification tasks since they combine all intermediate hidden layers for their final decision. Furthermore, the ranking loss function is introduced for the RNN model optimization which has not been investigated in the literature for relation classification before. 3) Finally, they combine CNNs and RNNs using a simple voting scheme and achieve new state-of-the-art results on the SemEval 2010 benchmark dataset. The results obtained for this paper can be seen in address relation classification in the context of slot filling, the task of finding and evaluating fillers for different slots. They investigate three complementary approaches to relation classification. The first approach is pattern matching, a leading approach in the TAC evaluations. Fillers are validated based on patterns. In this work, they consider patterns learned with distant supervision. Their second approach is support vector machines. Their third approach is a convolutional neural network (CNN). CNN can recognize phrase patterns independent of their position in the sentence. Furthermore, they make use of word embeddings that directly reflect word similarity. 1) They investigate the complementary strengths and weaknesses of different approaches to relation classification and show that their combination can better deal with a diverse set of problems that slot filling poses than each of the approaches individually. 2) They propose to split the context at the relation arguments before passing it to the CNN in order to better deal with the special characteristics of a sentence in relation classification. This outperforms the state-of-the-art piecewise CNN. 3) They analyze the effect of genre on slot filling and show that it is an important conflating variable that needs to be carefully examined in research on slot filling. 4) They provide a benchmark for slot filling relation classification that will facilitate direct comparisons of models in the future and show that results on this dataset are correlated with end-to-end system results.</p><note type="other">for both sentences and documents. DSCNN hierarchically builds textual representations by processing pretrained word embeddings via Long Short-Term Memory networks and subsequently extracting features with convolution operators. Compared with existing recursive neural models with tree structures,DSCNN does not rely on parsers and expensive phrase labeling, and thus is not restricted to sentence-level tasks. Moreover, unlike other CNN-based models that analyze sentences locally by sliding windows, their system captures both the dependency information within each sentence and relationships across sentences in the same document. They propose Dependency Sensitive Convolutional Neural Networks (DSCNN), an end-to-end classification system that hierarchically builds textual representations with only root-level labels. They evaluate DSCNN on several sentence-level and document-level tasks including sentiment analysis, question type classification, and subjectivity classification.</note></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Information Extraction</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Summarization</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1) Modelling, Visualising and Summarising Documents with a Single Convolutional Neural Network: In this paper Denil et al. introduce a model that is able to represent the meaning of documents by embedding them in a low dimensional vector space, while preserving distinctions of word and sentence order crucial for capturing nuanced semantics. Their model is based on an extended Dynamic Convolution Neural</head><p>Network, which learns convolution filters at both the sentence and document level, hierarchically learning to capture and compose low level lexical features into high level semantic concepts. Their model is compositional; it combines word embeddings into sentence embeddings and then further combines the sentence embeddings into document embeddings. This means that their model is divided into two levels, a sentence level and a document level, both of which are implemented using CNN. At the sentence level CNN are used to transform embeddings for the words in each sentence into an embedding for the entire sentence. At the document level another CNN is used to transform sentence embeddings from the first level into a single embedding vector that represents the entire document. Since their model is based on convolutions, it is able to preserve ordering information between words in a sentence and between sentences in a document. The results obtained for this paper can be seen in <ref type="table">Table 4.</ref> representing phrases and sentence-level contexts by using training examples from easy to difficult.</p><p>2) Encoding Source Language with Convolutional Neural Network for Machine Translation: In this paper, Meng et al. use a CNN plus gating approach. They give a more systematic treatment by summarizing the relevant source information through a convolutional architecture guided by the target information. With different guiding signals during decoding, their specifically designed convolution+gating architectures can pinpoint the parts of a source sentence that are relevant to predicting a target word, and fuse them with the context of entire source sentence to form a unified representation. This representation, together with target language words, are fed to a deep neural network (DNN) to form a stronger neural network joint model,NNJM. Experiments on two NIST ChineseEnglish translation tasks show that the proposed model can achieve significant improvements over the previous NNJM. The results obtained for this paper can be seen in <ref type="table">Table 5</ref> and  propose a novel method for translation selection in statistical machine translation, in which a convolutional neural network is employed to judge the similarity between a phrase pair in two languages. The specifically designed convolutional architecture encodes not only the semantic similarity of the translation pair, but also the context containing the phrase in the source language. Therefore, their approach is able to capture context-dependent semantic similarities of translation pairs. A curriculum learning strategy is adopted to train the model: the training examples are classified into easy, medium, and difficult categories, and gradually build the ability of 1) Question Answering over Freebase with Multi-Column Convolutional Neural Networks: In this paper, Dong et al. introduce the multi-column convolutional neural networks (MCCNNs) to automatically analyze questions from multiple aspects. Specifically, the model shares the same word embeddings to represent question words. MCCNNs use different column networks to extract answer types, relations, and context information from the input questions. The entities and relations in the knowledge base are also represented as low-dimensional vectors. Then, a score layer is employed to rank candidate answers according to the representations of questions and candidate answers. Their proposed information extraction based method utilizes question-answer pairs to automatically learn the model without relying on manually annotated logical forms and hand-crafted features. They do not use any pre-defined lexical triggers and rules. In addition, the question paraphrases are also used to train networks and generalize for the unseen words in a multi-task learning manner. The results obtained for this paper can be seen in <ref type="table" target="#tab_9">Table 7</ref>. <ref type="bibr">Model</ref> </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>MAP MRR</head><p>Method F1 P@1</p><p>( <ref type="bibr">Berant et al., 2013) 31.4 - (Berant and</ref><ref type="bibr">Liang, 2014)</ref> 39.9 -( <ref type="bibr">Bao et al., 2014)</ref> 37.5 - <ref type="table" target="#tab_2">(Yao and Van Durme, 2014)</ref> 33.0 - <ref type="figure" target="#fig_0">(Bordes et al., 2014a)</ref> 39.2 40.4 <ref type="figure" target="#fig_0">(Bordes et al., 2014b)</ref> 28.7 31. <ref type="figure" target="#fig_2">3  MCCNN (theirs)</ref> 40.8 45.1 <ref type="bibr">Wang et al. (2007)</ref> . <ref type="bibr">6029 .6852 Heilman and Smith (2010)</ref> .6091 .6917 <ref type="bibr">Wang and Manning (2010)</ref> .5951 .6951 <ref type="bibr">Yao et al. (2013)</ref> .6307 .7477 <ref type="bibr">Severyn and Moschitti (2013)</ref> .6781 .7358 <ref type="bibr">Yih et al. (2013)</ref> .7092 .7700 <ref type="bibr">Yu et al. (2014)</ref> .7113 .7846 <ref type="bibr">Wang and Ittycheriah (2015)</ref> .7063 .7740 <ref type="bibr">Yin et al. (2015)</ref> .6951 .7633 <ref type="bibr">Miao et al. (2015)</ref> .7339 .8117 CNNR on <ref type="figure">(TRAIN)</ref> .6857 .7660 CNNR on <ref type="figure">(TRAIN-ALL)</ref> .7186 .7828 </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2) Modeling Relational Information in Question-Answer</head><p>Pairs with Convolutional Neural Networks: In this paper, Severyn et al. propose convolutional neural networks for learning an optimal representation of question and answer sentences. The main aspect of this work is the use of relational information given by the matches between words from the two members of the pair. The matches are encoded as embeddings with additional parameters (dimensions), which are tuned by the network. These allows for better capturing interactions between questions and answers, resulting in a significant boost in accuracy. The distinctive properties of their model are: 1) State-of-the-art use of distributional sentence model for learning to map input sentences to vectors, which are then used to measure the similarity between them. 2) Their model encodes question-answer pairs in a richer representation using not only their similarity score but also their intermediate representations. 3) They augment the word embeddings with additional dimensions to encode the fact that certain words overlap in a given question-answer pair and let the network tune these parameters. 4) The architecture of our net-work makes it straightforward to include any additional features encoding question-answer similarities 5) Finally their model is trained end-to-end starting from the input sentences to producing a final score that is used to rerank answers. They only require to initialize word embeddings trained on some large unsupervised corpora. However, given a large training set the network can also optimize the embeddings directly for the task, thus omitting the need for pre-training of the word embeddings. The results obtained for this paper can be seen in <ref type="table">Table 8</ref>.</p><p>Insert table 5 from paper??</p><p>F. Speech recognition 1) Convolutional Neural Networks for Speech Recognition: In this paper Abdel-Hamid et al. describe how to apply CNNs to speech recognition in a novel way, such that the CNN?s structure directly accommodates some types of speech variability. They show a performance improvement relative to standard DNNs with similar numbers of weight parameters using this approach (about 6-10) relative error reduction), in contrast to the more equivocal results of convolving along the time axis, as earlier applications of CNNs to speech had attempted. Their hybrid CNN-HMM approach delegates temporal variability to the HMM, while convolving along the frequency axis creates a degree of invariance to small frequency shifts, which normally occur in actual speech signals due to speaker differences.they porpose a new, limited weight sharing scheme that can handle speech features in a better way than the full weight sharing that is standard in previous CNN architectures such as those used in image processing. Limited weight sharing leads to a much smaller number of units in the pooling layer, resulting in a smaller model size and lower computational complexity than the full weight sharing scheme. An improved performance is observed on two ASR tasks: TIMIT phone recognition and a large-vocabulary voice search task, across a variety of CNN parameter and design settings. They determine that the use of energy information is very beneficial for the CNN in terms of recognition accuracy. Further, the ASR performance was found to be sensitive to the pooling size, but insensitive to the overlap between pooling units, a discovery that will lead to better efficiency in storage and computation. Finally, pretraining of CNNs based on convolutional RBMs was found to yield better performance in the large-vocabulary voice search experiment, but not in the phone recognition experiment. The results obtained for this paper can be seen in <ref type="table">Table 9</ref>.</p><p>2) Analysis of CNN-based Speech Recognition System using Raw Speech as Input: In this paper Palaz et al. analyze CNN to understand the speech information that is modeled between the first two convolution layers. To that end, they present a method to compute the mean frequency responses of the filters in the first convolution layer that match to the specific inputs representing vowels. Studies on TIMIT task indicate that the mean frequency response tends to model the envelope of the sub-segmental (2-4 ms) speech signal. Then, they present a study to evaluate the susceptibility of the CNN-based system to mismatched conditions. This is an open problem in systems trained in a data-driven manner. They investigate this aspect on two tasks, namely, TIMIT phoneme recognition task and Aurora2 connected word recognition task. Our studies show that the performance of the CNN-based system degrades with the decrease in signal-to-noise ratio (SNR) like in a standard spectral feature based system. However, when compared to the spectral feature based system, the CNN-based system using 3) End-to-End Deep Neural Network for Automatic Speech Recognition: In this paper Song et al. implement an end-toend deep learning system that utilizes mel-filter bank features to directly output to spoken phonemes without the need of a traditional Hidden Markov Model for decoding. The system comprises of two variants of neural networks for phoneme recognition. In particular, a CNN is used for frame level classification and recurrent architecture with Connectionist Temporal Classification loss for decoding the frames into a sequence of phonemes. CNNs are exceptionally good at capturing high level features in spatial domain and have demonstrated unparalleled success in computer vision related tasks. One natural advantage of using CNN is that it?s invariant against translations of the variations in frequencies, which are common observed across speaker with different pitch due to their age or gender. For each frame, the actual input is generated to the CNN by taking a window of frames surrounding it. Each input instance is a small one-channel image patch. The CNN architecture closely resembles many of architectures seen in recent years of research. (It consists of 4 convolutional layers where the first two layers have max pooling. After the convolutions, it's followed by two densely connected layer and finally a softmax layer. ReLU is used for all activation functions). One aspect where they differ is that instead of using the typical square convolution kernel, they use rectangular kernels since given a short window of frames, much of the information is stored across the frequency domain rather than the time domain. They propose to use local filtering and max-pooling in frequency domain to normalize speaker variance to achieve higher multi-speaker speech recognition performance. In their method, a pair of local filtering layer and max-pooling layer is added at the lowest end of neural network (NN) to normalize spectral variations of speech signals. Wit the use of the CNN they wish to normalize speech spectral features to achieve speaker invariance and enforce locality of features. The novelty of this paper is to apply the CNN concepts in the frequency domain to exploit CNN invariance to small shifts along the frequency axis through the use of local filtering and max-pooling. In this way, some acoustic variations can be effectively normalized and the resultant feature representation may be immune to speaker variations, colored background and channel noises. The results obtained for this paper can be seen in <ref type="table">Table 11</ref>.   <ref type="figure">(CR-CNN)</ref>, to tackle the relation classification task. The proposed network learns a distributed vector representation for each relation class. Given an input text segment, the network uses a convolutional layer to produce a distributed vector representation of the text and compares it to the class representations in order to produce a score for each class. They propose a new pairwise ranking loss function that makes it easy to reduce the impact of artificial classes. Using CRCNN, and without the need for any costly handcrafted feature, they outperform the state-of-the-art for the SemEval-2010 Task 8 dataset. Their experimental results are evidence that: 1) CR-CNN is more effective than CNN followed by a softmax classifier. 2) Omitting the representation of the artificial class Other improves both precision and recall. 3) Using only word embeddings as input features is enough to achieve state-ofthe-art results if only the text between the two target nominals is considered. The results obtained for this paper can be seen in <ref type="table" target="#tab_2">Table 12</ref>.</p><p>B. A Convolutional Architecture for Word Sequence Prediction. P15-1151 (genCNN, difficult to understand)1/2 I have to add more info, but I'm having troubles to understand it. from speech recognition to automatic summarization. Their model comprises two parts. The first part generates a vector representation for each short text using either the RNN or CNN architecture. The second part classifies the current short text based on the vector representations of the current as well as a few preceding short texts. The results obtained for this paper can be seen in <ref type="table">Table 14</ref>.</p><p>In this paper, et al. propose a novel convolutional architecture, named genCNN, as a model that can efficiently combine local and long range structures of language for the purpose of modeling conditional probabilities. genCNN can be directly used in generating a word sequence (i.e., text generation) or evaluating the likelihood of word sequences (i.e., language modeling). They also show the empirical superiority of genCNN on both tasks over traditional n-grams and its RNN or FFN counterparts. The results obtained for this paper can be seen in <ref type="table" target="#tab_3">Table 13</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. CONCLUSION</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. A Convolutional Neural Network for Modelling Sentences (P14-1062)</head><p>In this paper Kalchbrenner et al. use the Dynamic Convolutional Neural Network (DCNN) for the semantic modeling of sentences. The network handles input sentences of varying length and induces a feature graph over the sentence that is capable of explicitly capturing short and long-range relations. Multiple layers of convolutional and dynamic pooling operations induce a structured feature graph over the input sentence. Small filters at higher layers can capture syntactic or semantic relations between non-continuous phrases that are far apart in the input sentence. The feature graph induces a hierarchical structure somewhat akin to that in a syntactic parse tree. The structure is not tied to purely syntactic relations and is internal to the neural network. They experiment with the network in four settings. The first two experiments involve predicting the sentiment of movie reviews. The network outperforms other approaches in both the binary and the multi-class experiments. The third experiment involves the categorization of questions in six question types. The fourth experiment involves predicting the sentiment of Twitter posts using distant supervision. The network is trained on 1.6 million tweets labelled automatically according to the emoticon that occurs in them.</p><p>This paper presents state-of-the-art deep learning tools for Natural Language Processing. The main contributions of this work are??An overview of CNN and its different subtypes. A get together of all the problems that have been solved using state-of-the-art CNN technologies. A general view of how CNN have been applied to different NLP problems, with results included.</p><p>After the advances made in Computer Vision using deep learning tools, NLP has adapted some of these techniques to make major breakthroughs. However, the results, for now, are only promising. There is evidence that deep learning tools provide good solutions, but they haven't provided such a big leap as the one in Computer Vision.</p><p>One of the main problems is that CNN started being used because of the great success in CV. Due to this there's a lack of a common goal. This uncertainty of what to do causes the results to be good but not as good as expected. One of the reasons could be because CNN are thought to be applied to images and not to words. However, the results and all the ... are encouraging and are an improvement over the previous state-of-the-art techniques.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VII. FUTURE WORK</head><p>There's a need to define common goals and set a better use of CNN. Convolutional Neural Networks are designed to be used on images. Missing component (2D-3D) Speech recognition seems the area with the best results (maybe because it's one of the areas that concerns a bigger number of people). Try to see the model they have used and adapt it to the problem the author is trying to solve.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Classifier</head><p>Feature Set F1 SVM ( <ref type="bibr">Rink and Harabagiu, 2010)</ref> POS, prefixes, morphological, WordNet, dependency parse, Levin classes, ProBank, FrameNet, NomLex-Plus,Google n-gram, paraphrases, TextRunner 82.2 RNN ( <ref type="bibr">Socher et al., 2012)</ref> word embeddings 74.8 RNN ( <ref type="bibr">Socher et al., 2012)</ref> word embeddings, POS, NER, WordNet 77.6 MVRNN ( <ref type="bibr">Socher et al., 2012)</ref> word embeddings 79.1 MVRNN ( <ref type="bibr">Socher et al., 2012)</ref> word embeddings, POS, NER, WordNet 82.4 CNN+Softmax ( <ref type="bibr">Zeng et al., 2014)</ref> word embeddings 69.7 CNN+Softmax ( <ref type="bibr">Zeng et al., 2014)</ref> word embeddings, word position embeddings, word pair, words around word pair, WordNet 82 </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Basic structure of an ANN</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Basic structure of a CNN</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. How the CNN works</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Recurrent Network</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Structure of a bidirectional RNN</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. Structure of a LSTM</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. Recursive Network</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 9 .</head><label>9</label><figDesc>Fig. 9. Dependency Network</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 12 .</head><label>12</label><figDesc>Fig. 12. Ranking Network</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>3 )</head><label>3</label><figDesc>Combining Recurrent and Convolutional Neural Net- works for Relation Classification: In this paper Vu et al. present three different approaches. First of all, a new context representation for convolutional neural networks for relation classification (extended middle context). Secondly, they pro- pose connectionist bi-directional recurrent neural networks and</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 13 .</head><label>13</label><figDesc>Fig. 13. Context dependent Network</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>4 )</head><label>4</label><figDesc>Applying Convolutional Neural Networks Concepts to Hybrid NN-HMM Model for Speech Recognition: In this paper, Abdel-Hamid et al. propose to apply CNN to speech recognition within the framework of hybrid NN-HMM model.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head></head><label></label><figDesc>Method PER NN with 3 hidden layers of 1000 nodes 22.95 CNN with no pre-training (their work) 20.07 NN with DBN pre-training 20.70 NN with DBN pre-training and mcRBM features extraction 20.50</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>.</head><label></label><figDesc></figDesc><table>UAS 

Traditional Methods 
Zhang and Clark (2008) 
91.4 
Huang and Sagae (2010) 
92.1 
Distributed Representations 
Stenetorp (2013) 
86.25 
Chen et al. (2014) 
93.74 
Chen and Manning (2014) 
92.0 
Re-rankers 
Hayashi et al. (2013) 
93.12 
Le and Zuidema (2014) 
93.12 
Our baseline 
92.35 
Our re-ranker 
93.83(+1.48) 
Our re-ranker (with oracle) 
94.16 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><head>TABLE I RESULTS</head><label>I</label><figDesc></figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="false"><head>Table 2 .</head><label>2</label><figDesc>1) Event Extraction via Dynamic Multi-Pooling Convolu- tional Neural Networks: In this paper, Chen et al. introduce a word-representation model to capture meaningful semantic regularities for words and adopt a framework based on a multi- pooling CNN to capture sentence-level clues. Since CNN can only capture the most important information in a sentence and may miss valuable facts when considering multiple-event sentences, they propose a dynamic multi-pooling convolutional neural network (DMCNN), as seen in CNN type 3. DMNCC uses a dynamic multi-pooling layer according to event triggers and arguments, to reserve more crucial information. Explain a bit more.</figDesc><table>ACE 
CoNLL 
WP 

Google News 
87.5 
89.6 
83.8 
Wikipedia 
89.5 
90.6 
85.5 

TABLE II 

RESULTS 

4) Dependency Sensitive Convolutional Neural Networks 
for Modeling Sentences and Documents: In this work, Zhang 
et al. present Dependency Sensitive Convolutional Neural 
Networks (DSCNN) as a general-purpose classification system 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="true"><head>Table 3 .</head><label>3</label><figDesc></figDesc><table>Classifier 
F1 

SVM (Rink and Harabagiu, 2010b) 
82.2 
RNN (Socher et al., 2012) 
77.6 
MVRNN (Socher et al., 2012) 
82.4 
CNN (Zeng et al., 2014) 
82.7 
FCM (Yu et al., 2014) 
83.0 
bi-RNN (Zhang and Wang, 2015) 
82.5 
CR-CNN (Dos Santos et al., 2015) 
84.1 
R-CNN 
83.4 
ER-CNN 
84.2 
ER-CNN+R-RNN 
84.9 

TABLE III 

RESULTS 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4" validated="true"><head>Table 6 .</head><label>6</label><figDesc></figDesc><table>Systems 
MT04 
MT05 
Average 

Deep2str 
34.89 
32.24 
33.57 
tagCNN 
36.33 
33.37 
34.85 
tagCNN-dep 
36.53 
33.61 
35.08 

TABLE V 

RESULTS 

Systems 
MT04 
MT05 
Average 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5" validated="false"><head>TABLE IV</head><label>IV</label><figDesc></figDesc><table>E. Question Answering 

RESULTS 

D. Machine Translation 

1) Context-Dependent Translation Selection Using Convo-
lutional Neural Network: In this paper, Hu et al. </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6" validated="false"><head>TABLE VII RESULTSTABLE VIII RESULTS</head><label>VIIVIII</label><figDesc></figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8" validated="false"><head>TABLE XI</head><label>XI</label><figDesc></figDesc><table>RESULTS 

V. JOURNALS 

A. Classifying Relations by Ranking with Convolutional Neu-
ral Networks (P15-1061) 

In this work, Dong et al. propose a new convolutional 
neural network (CNN), named Classification by Ranking CNN 
</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_9" validated="false"><head>7</head><label>7</label><figDesc></figDesc><table>FCM (Yu et al., 2014) 
word embeddings 
80.6 
FCM (Yu et al., 2014) 
word embeddings, dependency parse, NER 
83.0 
CR-CNN 
word embeddings 
32.8 
CR-CNN 
word embeddings, word position embeddings 
84.1 

TABLE XII 
RESULTS 

Models 
MT06 
MT08 
Average 

Baseline 
38.63 
31.11 
34.87 
RNN rerank 
39.03 
31.50 
35.26 
LSTM rerank 
39.20 
31.90 
35.55 
FFN-LM rerank 
38.93 
31.41 
35.14 
genCNN rerank 
39.90 
32.50 
36.20 
Base+FFN-LM 
39.08 
31.60 
35.34 
genCNN rerank 
40.4 
32.85 
36.63 

TABLE XIII 

RESULTS 

Models 
DSTC 4 
MRDA 
SwDA 

CNN 
65.5 
84.6 
73.1 
LSTM 
66.2 
84.3 
69.6 
Majority class 
25.8 
59.1 
33.7 
SVM 
57.0 
-
-
Graphical model 
-
81.3 
-
Naive Bayes 
-
82.0 
-
HMM 
-
-
71.0 
Memory-based Learning 
-
-
72.3 
Interlabeler agreement 
-
-
84.0 

TABLE XIV 

RESULTS </table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENT</head><p>The authors would like to thank...</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D. Sequential Short-Text Classification with Recurrent and</head><p>Convolutional Neural Networks(N16-1062)</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Inspired by the performance of ANN-based systems for non-sequential shorttext classification, they introduce a model based on recurrent neural networks (RNNs) and CNNs for sequential short-text classification, and evaluate it on the dialog act classification task. A dialog act characterizes an utterance in a dialog based on a combination of pragmatic, semantic, and syntactic criteria. Its accurate detection is useful for a range of applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lee</forename><surname>In This Work</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">present a model based on recurrent neural networks and convolutional neural networks that incorporates the preceding short texts</title>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
	<note>Deep Neural Networks in Machine Translation: An Overview</note>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Qiu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Huang</surname></persName>
		</author>
		<title level="m">A Re-ranking Model for Dependency Parser with Recursive Convolutional Neural Network, Proc</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Annu. Meet. Assoc. Comput. Linguist. 7th Int. Jt. Conf. Nat. Lang. Process</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="1159" to="1168" />
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Semantic Clustering and Convolutional Neural Network for Short Text Categorization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACL</title>
		<meeting>ACL</meeting>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="352" to="357" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Capturing Semantic Similarity for Entity Linking with Convolutional Neural Networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Francis-Landau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Durrett</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Klein</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="1256" to="1261" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Radev</surname></persName>
		</author>
		<title level="m">Dependency Sensitive Convolutional Neural Networks for Modeling Sentences and Documents, Naacl-Hlt-2016</title>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="1512" to="1521" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Event Extraction via Dynamic Multi-Pooling Convolutional Neural Networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Zeng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Zhao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACL</title>
		<meeting>ACL</meeting>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="167" to="176" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Event Detection and Domain Adaptation with Convolutional Neural Networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">H</forename><surname>Nguyen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Grishman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 53rd Annu. Meet. Assoc</title>
		<meeting>53rd Annu. Meet. Assoc</meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Comput. Linguist. 7th Int. Jt. Conf. Nat. Lang. Process</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="365" to="371" />
			<date type="published" when="2015" />
		</imprint>
	</monogr>
	<note>Short Pap.</note>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Combining Recurrent and Convolutional Neural Networks for Relation Classification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">T</forename><surname>Vu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Adel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Gupta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Schutze</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="534" to="539" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Comparing Convolutional Neural Networks to Traditional Models for Slot Filling pp. 1?9</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Denil</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Demiraj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Kalchbrenner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Blunsom</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>De Freitas</surname></persName>
		</author>
		<idno>arXiv1406.3830</idno>
		<title level="m">Modelling, Visualising and Summarising Documents with a Single Convolutional Neural Network</title>
		<imprint>
			<date type="published" when="2014" />
			<biblScope unit="page" from="1" to="10" />
		</imprint>
	</monogr>
<note type="report_type">arXiv Prepr.</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Context-Dependent Translation Selection Using Convolutional Neural Network</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Tu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 53rd Annu. Meet</title>
		<meeting>53rd Annu. Meet</meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Assoc</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Linguist. 7th Int. Jt. Conf. Nat. Lang. Process</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="536" to="541" />
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Encoding Source Language with Convolutional Neural Network for Machine Translation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Meng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 53rd Annu. Meet. Assoc. Comput. Linguist. 7th Int. Jt. Conf. Nat. Lang. Process</title>
		<meeting>53rd Annu. Meet. Assoc. Comput. Linguist. 7th Int. Jt. Conf. Nat. Lang. ess</meeting>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="20" to="30" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Question Answering over Freebase with Multi-Column Convolutional Neural Networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Dong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Wei</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Xu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACL</title>
		<meeting>ACL</meeting>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="260" to="269" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Severyn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Moschitti</surname></persName>
		</author>
		<title level="m">Modeling Relational Information in Question-Answer Pairs with Convolutional Neural Networks, Arxiv</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Analysis of CNN-based speech recognition system using raw speech as input</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Palaz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Magimai-Doss</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Collobert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. Annu. Conf. Int. Speech Commun. Assoc. INTERSPEECH</title>
		<imprint>
			<biblScope unit="page" from="11" to="15" />
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">End-to-End Deep Neural Network for Automatic Speech Recognition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Cai</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="1" to="8" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Applying convolutional neural networks concepts to hybrid NN-HMM model for speech recognition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Abdel-Hamid</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Penn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Speech Signal Process. (ICASSP)</title>
		<meeting><address><addrLine>Toronto, Canada, Acoust</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="page" from="4277" to="4280" />
		</imprint>
		<respStmt>
			<orgName>Department of Computer Science and Engineering, York University, Toronto, Canada Department of Computer Science, University of Toronto</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Classifying Relations by Ranking with Convolutional Neural Networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">N</forename><surname>Santos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Xiang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Zhou</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="626" to="634" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">A Convolutional Architecture for Word Sequence Prediction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Liu</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="1567" to="1576" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">A Convolutional Neural Network for Modelling Sentences</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Kalchbrenner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Grefenstette</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Blunsom</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 52nd Annu. Meet. Assoc. Comput. Linguist. (ACL 2014)</title>
		<meeting>52nd Annu. Meet. Assoc. Comput. Linguist. (ACL 2014)</meeting>
		<imprint>
			<date type="published" when="2014" />
			<biblScope unit="page" from="655" to="665" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">Y</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Dernoncourt</surname></persName>
		</author>
		<title level="m">Sequential Short-Text Classification with Recurrent and Convolutional Neural Networks, Naacl</title>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="515" to="520" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Non-Linear Text Regression with a Deep Convolutional Neural Network</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Bitvai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Cohn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACL 2015</title>
		<meeting>ACL 2015</meeting>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="180" to="185" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Learning Summary Prior Representation for Extractive Summarization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Wei</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACL</title>
		<meeting>ACL</meeting>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="829" to="833" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Convolutional neural networks for acoustic modeling of raw time signal in LVCSR</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Golik</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Tuske</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Schuler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Ney</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. Annu. Conf. Int. Speech Commun. Assoc. INTERSPEECH</title>
		<imprint>
			<biblScope unit="page" from="26" to="30" />
			<date type="published" when="2015" />
		</imprint>
	</monogr>
	<note>Janua</note>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>King</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Jha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Sundararajan</surname></persName>
		</author>
		<title level="m">Experiments in Automatic Text Summarization Using Deep Neural Networks</title>
		<imprint>
			<date type="published" when="2011-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Xiang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Zhou</surname></persName>
		</author>
		<title level="m">Dependency-based Convolutional Neural Networks for Sentence Embedding,? Acl-2015</title>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="174" to="179" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">N</forename><surname>Sainath</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">R</forename><surname>Mohamed</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Kingsbury</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Ramabhadran</surname></persName>
		</author>
		<title level="m">Deep convolutional neural networks for LVCSR,? ICASSP, IEEE Int. Conf. Acoust. Speech Signal Process. -Proc</title>
		<imprint>
			<date type="published" when="2013" />
			<biblScope unit="page" from="8614" to="8618" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Analyzing convolutional neural networks for speech activity detection in mismatched acoustic conditions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Thomas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ganapathy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Saon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Soltau</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICASSP, IEEE Int. Conf. Acoust. Speech Signal Process. -Proc</title>
		<imprint>
			<date type="published" when="2014" />
			<biblScope unit="page" from="2519" to="2523" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Kopka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">W</forename><surname>Daly</surname></persName>
		</author>
		<title level="m">A Guide to kfnng</title>
		<meeting><address><addrLine>England</addrLine></address></meeting>
		<imprint>
			<publisher>Addison-Wesley</publisher>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
	<note>3rd ed. Harlow</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
