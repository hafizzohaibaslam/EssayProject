<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 D:\grobid-master\grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.1-SNAPSHOT" ident="GROBID" when="2018-07-16T23:53+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Graph Mining: A Survey of Graph Mining Techniques</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Saif</forename><surname>Ur</surname></persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Department of Computer Science</orgName>
								<orgName type="department" key="dep2">Institute of Science and Technology (SZABIST)</orgName>
								<orgName type="department" key="dep3">Department of Computer and Information Science</orgName>
								<orgName type="institution">CORD: Center for Research in Data Engineering Mohammad Ali Jinnah University Islamabad</orgName>
								<address>
									<settlement>Islamabad</settlement>
									<country>Pakistan, Pakistan</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rehman</forename><surname>Asmat</surname></persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Department of Computer Science</orgName>
								<orgName type="department" key="dep2">Institute of Science and Technology (SZABIST)</orgName>
								<orgName type="department" key="dep3">Department of Computer and Information Science</orgName>
								<orgName type="institution">CORD: Center for Research in Data Engineering Mohammad Ali Jinnah University Islamabad</orgName>
								<address>
									<settlement>Islamabad</settlement>
									<country>Pakistan, Pakistan</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ullah</forename><surname>Khan</surname></persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Department of Computer Science</orgName>
								<orgName type="department" key="dep2">Institute of Science and Technology (SZABIST)</orgName>
								<orgName type="department" key="dep3">Department of Computer and Information Science</orgName>
								<orgName type="institution">CORD: Center for Research in Data Engineering Mohammad Ali Jinnah University Islamabad</orgName>
								<address>
									<settlement>Islamabad</settlement>
									<country>Pakistan, Pakistan</country>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Simon</forename><surname>Fong</surname></persName>
							<email>ccfong@umac.mo</email>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Department of Computer Science</orgName>
								<orgName type="department" key="dep2">Institute of Science and Technology (SZABIST)</orgName>
								<orgName type="department" key="dep3">Department of Computer and Information Science</orgName>
								<orgName type="institution">CORD: Center for Research in Data Engineering Mohammad Ali Jinnah University Islamabad</orgName>
								<address>
									<settlement>Islamabad</settlement>
									<country>Pakistan, Pakistan</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shaheed</forename><surname>Zulifiqar</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">University of Macau Taipa</orgName>
								<address>
									<settlement>Macau SAR</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ali</forename><surname>Bhutto</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">University of Macau Taipa</orgName>
								<address>
									<settlement>Macau SAR</settlement>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Graph Mining: A Survey of Graph Mining Techniques</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Index Terms-Graph Mining</term>
					<term>Sub graphs</term>
					<term>fre q uent graphs</term>
					<term>Data Mining</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Data mining is comprised of many data analysis techniques. Its basic objective is to discover the hidden and useful data pattern from very large set of data. Graph mining, which has gained much attention in the last few decades, is one of the novel approaches for mining the dataset represented by graph structure. Graph mining finds its applications in various problem domains, including: bioinformatics, chemical reactions, Program flow structures, computer networks, social networks etc. Different data mining approaches are used for mining the graph? based data and performing useful analysis on these mined data. In literature various graph mining approaches have been proposed. Each of these approaches is based on either classification; clustering or decision trees data mining techni q ues. In this study, we present a comprehensive review of various graph mining techni q ues. These different graph mining techni q ues have been critically evalnated in this study. This evalnation is based on different parameters. In our future work, we will provide our own classification based graph mining techni q ue which will efficiently and accurately perform mining on the graph structured data.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Data Mining</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>Over the last few years there has been a number of research work on data mining in seeking for better performance and innovation. One innovation includes mining from structured data, which is a new challenge. Since a structure is represented by proper relations and a graph can easily represent such relations, knowledge discovery from graph-structured data poses a general problem for mining from structured data. Some examples amenable to graph mining are finding typical web browsing patterns, identifying typical substructures of chemical compounds, finding typical subsequences of DNA and discovering diagnostic rules from patient history records <ref type="bibr" target="#b19">[21]</ref>.</p><p>Graph mining techniques have been categorized into following groups. (1) Graph clustering; is the task of grouping the vertices of the graph into clusters taking into consideration the edge structure of the graph in such a way that there should be many edges within each cluster and relatively few between the clusters? Graph clustering in the sense of grouping the vertices of a given input graph into clusters <ref type="bibr" target="#b20">[22]</ref> graph clustering is based on unsupervised learning technique in which the classes are not known in prior to clustering. The graph clusters are formed based on some similarities in the underlying graph structured data graph. (2) Graph Classification; in graph classification the main task is to classify separate, individual graphs in a graph database into two or more categories/classes <ref type="bibr" target="#b20">[22]</ref>. Classification is based on supervised/semi supervised learning technique in which the classes of the data are defined in prior. (3) Sub graph mining; sub graph is a graph whose vertices and edges are subsets of another graph. The frequent sub graph mining problem is to produce the set of sub graphs occurring in at least some given threshold of the given n input example graphs <ref type="bibr" target="#b21">[23]</ref>.</p><p>In this study we have provided comprehensive summary details of the different graph mining techniques. Each of these techniques has been outlined with their techniques details, their major research contributions along with the limitation of the proposed techniques. These techniques have been further criticall y evaluated.</p><p>The rest of this paper is organized as follow: In section II the underlying terminologies used in graph theory is provided. In section III a detailed literature review is provided on the graph mining techniques proposed in the last few decades. Section IV focuses on the critical analysis of these different graph mining techniques, whose details are discussed in section II. This study will end with the conclusion of our work with some future directions in section V</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. BASIC GRAPH THEORY</head><p>A graph G is a pair of sets G = (V, E). V is the set of vertices and the number of vertices n = IVI is the order of the graph. The set E contains the edges of the graph. In an undirected graph, each edge is an unordered pair {v, w}. In a directed graph (also called a digraph in much literature), edges are ordered pairs. The vertices v and w are called the endpoints of the edge. The edge count lEI = m is the size of the graph. In a weighted graph, a weight functions (j) : E -? R is defined that assigns a weight on each edge. A graph is planar if it can be drawn in a plane without any of the edges crossing <ref type="bibr" target="#b20">[22]</ref>. The 978-1-4673-2430-4112/$31.00 ?2012 IEEE density of a graph G = (V, E) is defined as the ratio of the number of edges present in a graph to the maximum possible,</p><formula xml:id="formula_0">8(G)= !!!. . For ne{O,l} ,w e set8(G) = O. n 2</formula><p>A graph of density one is called complete <ref type="bibr" target="#b20">[22]</ref>. The adjacency matrix AG of a given graph G = (V, E) of order n is an n x n matrix AG = (a. C: ) where</p><formula xml:id="formula_1">V,u AG ( G ) {I, if(v,ujEE, th di I . f h = a y = 0 otherwise e agona matnx 0 grap ,u , G(V,E) is o D= r d e g ( V 2 ) 0 0 o d e g ( v 2 ) 0 o o 0 d e g ( v 2 ) o o 0 0 d e g ( v 2 ) j,J</formula><p>The length of a path is the number of edges on it, and the distance between v and u is the length of the shortest path connecting them in G. The distance from a vertex to itself is zero: the path from a vertex to itself is an empty edge sequence. A graph is connected if there exist paths between all pairs of vertices. If there are vertices that cannot be reached from others, the graph is disconnected. The minimum number of edges that would need to be removed from G in order to make it disconnected is the edge connectivity of the graph. A cycle is a simple path that begins and ends at the same vertex. A graph that contains no cycle is acyclic and is also called a forest. A connected forest is called a tree <ref type="bibr" target="#b19">[21]</ref>.</p><p>A sub graph G S =(S, Es) of G=(V, E) is composed of a set of vertices s ? y and a set of edges Es? E such that {v, u} ? Es implies u, v E S; the graph G is a super graph of d. A connected acyclic sub graph that includes all vertices is called a spanning tree of the graph. A spanning tree has necessarily exactly n-l edges. If the edges are assigned weights, the spanning tree with smallest total weight is called the minimum spanning tree. Note that there may exist several minimum spanning trees that may even be edge disjoint <ref type="bibr" target="#b20">[22]</ref>.</p><p>Two graphs Gi = (Vi&gt; Ei) and Gj = (Y;, E) are isomorphic if there exists a bi-jective (one to one) mappingfVi?Y; (called an isomorphism) such that {u, v} E Ei; if and only if (j(v), itw)} E Ei? A bipartite graph is a graph where the vertex set V can be split in two sets A and B such that all edges lie between those two sets: if {u, v} E Ei, either v E A and wEB or v E Band W E A <ref type="bibr" target="#b21">[23]</ref>. A complete graph is a graph where every pair of distinct vertices is adjacent. A complete graph on n vertices is denoted by Kn (or sometimes by K(n) ) and The complete graph Kn of order n is a simple graph with n vertices in which every vertex is adjacent to every other is called clique.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. LITERATURE REVIEW</head><p>This section summarizes the different proposed graph mining algorithms with their major research contributions and limitations.</p><p>In <ref type="bibr">[1]</ref>, Callut et al. have proposed a new technique called D-Walks. This technique can efficiently handle the semi? supervised classification issues associated with the graphs of large size. Their technique is based on the betweeness measures. The detail of betweeness can be found in <ref type="bibr">[1]</ref>. The D? wa lks can classify the unlabeled nodes of different types of graphs including directed or undirected graphs. This classification has a linear time complexity with respect to the (1) number of edges in the graphs, (2) the maximum walk length considered and (3) the number of classes <ref type="bibr">[1]</ref>. The unlabeled nodes of the graphs are predicted by comparing its betweeness measure with that of maximum betweeness measure. The technique proposed in <ref type="bibr">[1]</ref> has been implemented on the CORA database. Then different experiments have been performed using this database. All of these experiments showed that <ref type="bibr">[1]</ref> is more efficient and can accurately classify the unlabeled nodes of the graphs and outperforms the existing techniques available in the literature such as <ref type="bibr" target="#b1">[2]</ref> and <ref type="bibr" target="#b2">[3]</ref>. Their main achievement is to handle the graphs having large number of nodes and edges as compare to <ref type="bibr" target="#b1">[2]</ref> and <ref type="bibr" target="#b2">[3]</ref> techniques</p><p>In <ref type="bibr" target="#b3">[4]</ref>, Kashima et al. have proposed a new method that can handle the classification problem of graphs that have extremely large no of nodes and edges. Their graph classification method is based on kernel method. The details of kernel methods can be found in <ref type="bibr" target="#b4">[5]</ref>. The method proposed in <ref type="bibr" target="#b3">[4]</ref> efficiently computes the inner product of two graphs to make a feature space for classifying the graphs. This technique takes an unknown graph as input and classifies the unknown graph into an appropriate class. Their proposed method calculates the similarity of two graphs based on nodes of the graphs and labels of the edges in the graphs. In <ref type="bibr" target="#b3">[4]</ref> graphs are classified into same group if their similarities are identical. The technique proposed in <ref type="bibr" target="#b3">[4]</ref> has been implemented for the prediction of properties of chemical compound using the mutag and PTC dataset. Then different experiments have been performed using these datasets. All of these experiments showed that <ref type="bibr" target="#b3">[4]</ref> is not as efficient as <ref type="bibr" target="#b5">[6]</ref> for mutag dataset but for PTC dataset it is more efficient then existing techniques available in the literature such as <ref type="bibr" target="#b5">[6]</ref> and <ref type="bibr" target="#b6">[7]</ref>.</p><p>In <ref type="bibr">[8]</ref>, Dhillon et al. have presented an efficient and fast technique for graph clustering. This technique can handles graph having large number of nodes and very large number of edges. Their graph clustering technique is based on multilevel methods using weighted kernel K-means objective function as refinement algorithms .The details of weighted Kernel k-means objective function for multilevel methods can be found in <ref type="bibr" target="#b7">[9]</ref>. The technique proposed in <ref type="bibr">[8]</ref> does not restricts the size of the cluster be nearly equal as compared to existing graph clustering techniques available in literature. Furthermore, the graph clustering objective functions proposed in <ref type="bibr">[8]</ref> can be specialized for all phases of the algorithm according to situation. The technique proposed in <ref type="bibr">[8]</ref> has been implemented on the IMDB Movie dataset. The dataset has 1.2 million nodes and 7.6 million edges. Furthermore different experiments have been performed using this dataset. The proposed techniques compute 5000 cluster and 5000 eigenvectors <ref type="bibr">[8]</ref> which is impractical for the algorithm in <ref type="bibr" target="#b7">[9]</ref> due to requirements of main memory up to 25 GB. All of these experiments showed that <ref type="bibr">[8]</ref> is more efficient not only in memory consumption but also in running time compared to the existing techniques available such as <ref type="bibr" target="#b7">[9]</ref>. Their main achievement is to handle the graphs having large number of nodes and edges which is impractical to be handled in existing graph clustering techniques <ref type="bibr" target="#b7">[9]</ref>.</p><p>In <ref type="bibr" target="#b8">[10]</ref>, Dias and Ochi have presented enhancement in the basic Genetic Algorithms (GAs). Their proposed technique can efficiently handle the issues of graph partitioning in large graph databases. The <ref type="bibr" target="#b8">[10]</ref> proposed different procedure as evolutionary steps for the improvement in the performance of the basic GA. The proposed modifications in <ref type="bibr" target="#b8">[10]</ref> to the basic GA algorithms do not alter the global acting of the basic technique for GA. Therefore these modifications are implemented as fittings to the Basic GA. The proposed procedures in <ref type="bibr" target="#b8">[10]</ref> modify the local search and other diversification procedures <ref type="bibr" target="#b8">[10]</ref>. The proposed procedures in <ref type="bibr" target="#b8">[10]</ref> are implemented in 7 different versions. The performance of the proposed algorithms was evaluated for different no of nodes in graph. The results established that the proposed algorithms produces high quality clusters while maintaining the same running time as compared to existing GA in the literature. The main contribution of the proposed procedures has good performance when the no of nodes are high as 500 nodes.</p><p>In <ref type="bibr">[11]</ref>, Zhao et al have proposed a new technique for mining closed free tree in large graphs. Their technique is called CFFTree (Closed Frequent Free Tree). This technique efficiently mine frequent closed free tree in large graph database whose nodes are labeled. The technique proposed in <ref type="bibr">[11]</ref> can handle the issues of mining frequent free trees in large graph database which is NP complete the details of NP problem is found in <ref type="bibr" target="#b10">[12]</ref>. A tree t with no designated root is called a free tree and a free tree t is closed if no super tree of t that has the same frequency of t <ref type="bibr">[11]</ref> exists. The authors suggested that closed free trees are very few in graph but can maintain the same useful information as free trees. Furthermore, they established that the computational time of closed frequent free trees mining algorithm is polynomial and closed free trees are more efficient. The <ref type="bibr">[11]</ref> proposed efficient pruning methods such as safe labeling pruning , safe positioning pruning, auto-morphisim-based pruning and canonical mapping-based pruning the details of these methods can be found in <ref type="bibr">[11]</ref> to prune free trees that cannot generate closed free tree in order to tune the mining process of closed free trees. The technique proposed in <ref type="bibr">[11]</ref> has been implemented on the AIDS antiviral screen chemical compound from Development Therapeutics program in NCIINIH. Different experiments have been performed by using this database. All of these experiments proved that <ref type="bibr">[11]</ref> is more efficient and can accurately computes free trees compared to <ref type="bibr" target="#b11">[13]</ref>. While the proposed technique is the only technique developed for mining closed frequent free tree in time the paper was written. The main contribution of their proposed technique is working on the novel concept of closed frequent free trees mining and designing an algorithm for mining closed trees from graph databases.</p><p>In <ref type="bibr" target="#b12">[14]</ref>, <ref type="bibr">Le et al.</ref> have proposed a new method for clustering of bi-partite graph. This technique is called Coring technique. The proposed technique can handle the issues of partitioning a large graph into small sub graphs. The nodes of the clustered sub graphs are strongly interconnected within graph and weakly connected to the nodes of other graphs. Their method is called coring method that can handle both weighted and unweighted graphs. The technique in <ref type="bibr" target="#b12">[14]</ref> can computes clusters that have a highly dense core region and encircled by lower density region. The proposed method in <ref type="bibr" target="#b12">[14]</ref> works in following steps Step 1: In this step, the coring method computes the density variation sequence . The method iteratively computes the minimum density D and set of nodes having minimum density M. The output of this step is sequence of D,s and M,s. Setp2: Following step 1, the coring method identify the core nodes . To identify the method calculates the rate of decrease/increase in value of minimum density. If the rate of increase/decrease in the D value is greater than the threshold and the sequence of M is also in some order then the nodes are identified as core nodes. Step 3: In this step, the coring method partition the graph nodes into clusters. The set of core nodes is the output to the next step.</p><p>Step 4: it is the final step of this technique the core groups are expended into full clusters. The core nodes are the center of the clusters and the lower density nodes are encircles these core nodes. The technique proposed in <ref type="bibr" target="#b12">[14]</ref> </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>has been implemented on the microarray dataset containing 62 samples including 40 tumor and 22 normal colon tissues. Each sample consists of 2000</head><p>gene expressions database. The <ref type="bibr" target="#b12">[14]</ref> successfully cluster the tumor tissues and normal tissues in the database further the method was evaluated using image of size 200x300 and the <ref type="bibr" target="#b12">[14]</ref> efficiently cluster the core region from the image. The proposed method was also evaluated for introducing noise into the image. The method successfully clusters the core region. The main strength of the proposed work is that this method can efficiently be used for noisy data.</p><p>In <ref type="bibr" target="#b13">[15]</ref>, Chen et at. have proposed a graph model that can efficiently handle the many to many correspondences problem among concepts in ontologies. Their proposed technique used weighted bi-partite graph to model ontologies. The similarity measure is computed for the all the edges using similarity measure techniques such as in <ref type="bibr" target="#b14">[16]</ref>. The proposed technique, assigns the similarity degree as weights of the edges in the graph. In the proposed technique, edges of the bi-partite graph having weight greater than the threshold are maintained other edges are purged. The <ref type="bibr" target="#b13">[15]</ref> uses graph partitioning technique <ref type="bibr" target="#b13">[15]</ref> to co-cluster the vertex of the graph as concept cluster for two ontologies. The concept cluster produced by <ref type="bibr" target="#b13">[15]</ref> in previous step contains all common concepts from ontologies. In next step the concept cluster is used to set up mappings among ontologies. The contribution of the proposed techniques is that many-to-many mapping can be establish among ontologies.</p><p>In <ref type="bibr" target="#b14">[16]</ref>, Barber has proposed a new graph clustering mechanism for representing graph in the form of matrix. Their proposed technique extends the incidence matrix (showing joining vertex of graph as matrix) to clique matrix. The clique matrix shows that which nodes of the graph can fonn a clique. The clique matrix can be efficiently used for graph clustering. The proposed technique executes in the following steps: (1) in first step, it calculates the maximal clique. (2) In this step, the clustering is performed by <ref type="bibr" target="#b14">[16]</ref> as it identified the matrix with smallest no of columns. The size of the clique is controlled by using threshold parameter that controls how large the clique should be. Their technique is successfully applied to find the large well-connected group in social network and cluster gene? expression that exists in large population.</p><p>The main contribution of the proposed work is the clique matrix notation for graphs.</p><p>In <ref type="bibr" target="#b15">[17]</ref>, Kraus et at. have proposed a new algorithm for handling the graph clustering. Their algorithm is called semi supervised divisive hierarchical Graph clustering algorithm. Their proposed technique can effectively handle the problem of clustering with having no knowledge of the structure of underlying dataset. The authors proposed a hierarchical algorithm that incorporates background knowledge into the graph. The technique in <ref type="bibr" target="#b15">[17]</ref> is used with weighted undirected graph. The Euclidian distance between two adjacent nodes is calculated. To calculate the Euclidian distance fonnula is given below:</p><formula xml:id="formula_2">n d(p, q) == d(q, p) == ?(ql-ql) 2 +(q2-P2i+ .... +{q, ,-p. ,i == L (q;-p;i i==l</formula><p>and the ratio is computed by dividing the distance with average Euclidian distance of all the nodes in a graph. The must link indicates that two data item must be placed in same groups, and can-not links -two data item cannot be placed in same group, are identified. Links with less weight are removed to control the chaining effect of the nodes on the clusters. To propagate background knowledge in adjacent nodes the probability of the visiting nodes with some threshold steps are calculated for two nodes and neighborhood similarity is measured for the nodes. The proposed algorithm increases the weight of the edge if two nodes are similar else the weight of the edge is decrease. Afterward, nodes with small neighborhood are removed for creating clusters. Nodes having similar neighborhood values are cluster in same group. The main contribution of the proposed work is the including of background knowledge in the clustering process.</p><p>In <ref type="bibr" target="#b16">[18]</ref>, Schenker et at. have proposed a graph model for classification of web documents. The proposed method is based on k-NN <ref type="bibr" target="#b16">[18]</ref> that successfully classifies unknown documents to its respective classes automatically. The experiments on <ref type="bibr" target="#b16">[18]</ref> is conducted which reveals that the graph based model for document classification computation time is parallel to other vector based k-NN model. The experiments showed that for small nodes up to 30 the classification time of the proposed technique is as efficient as vector based k-NN techniques but the technique in <ref type="bibr" target="#b16">[18]</ref> out perfonned vector based k-NN methods for large no of nodes both in perfonnance and accuracy.</p><p>In <ref type="bibr" target="#b17">[19]</ref> T.Ozaki et al, have proposed a new method for sub graph mining in graph-structured database. Their method is called HSG. The algorithm proposed in <ref type="bibr" target="#b17">[19]</ref> is based frequent hyper clique patterns; which tries to find the dependencies among graph in the large. The method proposed in <ref type="bibr" target="#b17">[19]</ref> efficiently mine correlation in structured database. The authors proposed efficient pruning methods based on h-confidence measures and depth-first and breadth-depth search methods, the details of these methods can be found in <ref type="bibr" target="#b17">[19]</ref>. The technique proposed in <ref type="bibr" target="#b17">[19]</ref> has been implemented on the PTE and DTP _CM datasets. The <ref type="bibr" target="#b17">[19]</ref> efficiently mine frequent hyperclique patterns in these datasets in reasonable time. The main contribution of the proposed work is that <ref type="bibr" target="#b17">[19]</ref> introduces a new concept of hyperclique to mine correlation in graph databases and proposed an algorithm to mine frequent hyper clique patterns in large graph databases.</p><p>In <ref type="bibr" target="#b18">[20]</ref> Fatta et ai, proposed a new method for sub graph mining in large graph database. The method is called distributed algorithm. Their algorithm is based on distributed peer to peer communication framework. The <ref type="bibr" target="#b18">[20]</ref> can handle to very high workload in distributed manner. The distributed algorithm proposed in <ref type="bibr" target="#b18">[20]</ref> efficiently mines sub graph in molecular compounds, the molecular compounds have very large trees and very large no of sub graph. The <ref type="bibr" target="#b18">[20]</ref> first partitioned the search space dynamically to partition a large tree. In the second step the <ref type="bibr" target="#b18">[20]</ref> distributes the portioned tree in peer-to-peer communication framework and in the last step the distributed algorithm uses load balancing and receiver initiated methods <ref type="bibr" target="#b18">[20]</ref> to execute the sub graph mining process in distributed environment. To further test the effectiveness of the proposed method. The proposed technique has been implemented on the DPT dataset. Then different experiments have been perfonned using this dataset. All of these experiments showed that <ref type="bibr">[1]</ref> is more efficient and can accurately mind sub graph in highly distributed and heterogeneous environment. The method proposed in <ref type="bibr" target="#b18">[20]</ref> also has been tested for fault tolerant and the results showed that the proposed method has handled the situation very efficiently. The main contribution of the proposed work is that it works in highly distributed and heterogeneous environment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. CRITICAL EVALUATION</head><p>In this section we comment about the techniques, critically. The critical evaluation is based on the observation of the following metrics: parameters, technique, method, implementation, features, comparison and efficiency. The details are shown in <ref type="table">Table 1</ref>. According to the comparison in <ref type="table">Table 1</ref>, the work in <ref type="bibr">[8]</ref> seems to be more efficient in computation time and memory usage during the clustering process than <ref type="bibr">[1]</ref> and <ref type="bibr" target="#b3">[4]</ref> for classification. The model in <ref type="bibr" target="#b8">[10]</ref> is capable of handling larger nodes than <ref type="bibr" target="#b14">[16]</ref> and <ref type="bibr" target="#b16">[18]</ref> for clustering in a large graph in efficiency and features. The results generated from the model <ref type="bibr" target="#b12">[14]</ref> is however more accurate than those in <ref type="bibr">[1]</ref> and <ref type="bibr">[8]</ref> for feature support. Thus the above discussion reveals that <ref type="bibr" target="#b12">[14]</ref> may be more accurate for noisy data and <ref type="bibr">[8]</ref> may be more efficient for larger graphs. Multi-level Kernel k-means Mutag, PTC Reduced chaining effect; Computes yes al <ref type="bibr" target="#b3">[4]</ref> similarity both on label and edges Dhillon el al <ref type="bibr">[8]</ref> Multi-level Kernel k-means IMDB Movie Memory efficient 25 minutes for 1.2 yes Efficient in running time million nodes and 7.6 million edges Dias and Genetic Algorithm C++ Tracked the performance of GA for 98 % for 500 nodes yes Ochi <ref type="bibr">[IO]</ref> different type of graph Zhao el al. <ref type="bibr">[II]</ref> CFFfree C++,VS More efficient for graph with large no 10 to 1.5 free tree and yes of nodes closed Leel al. <ref type="bibr" target="#b12">[14]</ref> Coring Method MicroArray Efficiently clustered core region in yes dataset, image noisy data Chen el al. <ref type="bibr" target="#b13">[15]</ref> Bi-partite graph co-clustering yes Barber <ref type="bibr" target="#b14">[16]</ref> Clique matrix D1MACS Clique matrix notation for graphs. no Clustering based on clique matrix notations Kraus el al. <ref type="bibr" target="#b15">[ 17]</ref> SSHGCA MicroArray Including of background knowledge in yes dataset clustering process Schenker el K-NN Yahoo News More efficient and accurate for large Yes al. <ref type="bibr" target="#b16">[18]</ref> C++ size graph T. Ozaki el HSG PTE, DW_CM Mine correlation in graphs No al <ref type="bibr" target="#b17">[19]</ref> Java Fatta et al. <ref type="bibr" target="#b18">[20]</ref> Distributed Algorithm PTE, DW_CM Efticient; Distributed; Heterogeneous No Java</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. CONCLUSION AND fuTURE WORK</head><p>In this study, we have presented the summary information of the different graph mining techniques. These graph mining techniques are based on the classification, clustering, decision tree approaches, which are the data mining fundamentals. In addition, we also have highlighted the research contributions and found out some limitations in different research works. Consequently, this work also depicts the critical evaluation in which comparison and contrast have been taken out to show the similarities and differences among different author's works. The spatiality of this work is that it reveals the literature review of different graph mining techniques and provides a vast amount of information under a single paper. In our future work, we have planned to propose a new classification method based on graph mining technique, provide its implementation and compare its results with the different existing classification based graph mining algorithms.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>TABLE I . COMPARISON OF RECENT WORKS ON GRAPH MINING</head><label>I</label><figDesc></figDesc><table>Paper 
Technique/Method 
Implementation 
Features 
Efficiency 
Comparison 

Callut el al.[ I] 
D-Walks 
CORA 
Capable of handling large graphs 
I .4 seconds per graph 
yes 
Kashima el 
</table></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Semi-supervised Classification from Discriminative Random Walks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Callut</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Fran90isse</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Saerens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Dupont</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Lecture Notes in Artificial Intelligence</title>
		<imprint>
			<biblScope unit="issue">5211</biblScope>
			<biblScope unit="page" from="162" to="177" />
			<date type="published" when="2008" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Classification in networked data: A toolkit and a univariate case study</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Macskassy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Provost</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Mach. Learn. Res</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="935" to="983" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A measure of betweenness centrality based on random walks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Newman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Social networks</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="39" to="54" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Kernels for graph classification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Kashima</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Inokuchi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICDM Workshop on Active Mining</title>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Kernel Methods</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Swell</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Mining and searching graphs and structures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Han</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Yan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">S</forename><surname>Yu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">the proceedings of 12th ACM Conference on Knowledge Discovery and Data Mining (SIGKDD&apos;2006</title>
		<imprint>
			<biblScope unit="page">2006</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Feature construction with version spaces for biochemical application</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kramer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">D</forename><surname>Raedt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Dhillon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Guan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Kulis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of The 11th ACM SIGKDD</title>
		<meeting>The 11th ACM SIGKDD<address><addrLine>Chicago, IL</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
	<note>Proc. of the 18th ICML</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A fast and high quality multilevel scheme for partitioning irregular graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Karypis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Kumar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Sci. Comput</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="359" to="392" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Efficient Evolutionary Algorithms for the Clustering Problem in Directed Graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">R</forename><surname>Dias</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">S</forename><surname>Ochi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2003 IEEE Congress on Evolutionary Computation</title>
		<meeting>the 2003 IEEE Congress on Evolutionary Computation</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="983" to="988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Proceeding of Database Systems for Advance Application</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">.</forename><forename type="middle">X</forename><surname>Yu</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="91" to="102" />
		</imprint>
	</monogr>
	<note>Mining Closed Frequent Free Trees in Graph Databases</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Indexing and mining free trees</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yun</forename><surname>Chi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yirong</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Richard</forename><forename type="middle">R</forename><surname>Muntz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ICDM03</title>
		<meeting>ICDM03</meeting>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Ontology-Based Integration of Information -A Survey of Existing Approaches</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Wache</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Vogele</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Visser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Stuckenschmidt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IJCAI-OI Workshop on Ontologies and Information Sharing</title>
		<meeting>IJCAI-OI Workshop on Ontologies and Information Sharing</meeting>
		<imprint>
			<biblScope unit="page" from="108" to="117" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Coring Method for Clustering a Graph</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">V</forename><surname>Le</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">A</forename><surname>Kulikowaski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">B</forename><surname>Muchnik</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
	<note>In proceedings of IEEE 2008</note>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">A Bipartite Graph Co-Clustering Approach to Ontology Mapping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Fonseca</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Clique Matrices for Statistical Graph Decomposition and Parame-nite Matrices</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Barber</surname></persName>
		</author>
		<editor>D. A. McAllester and P. Myllymaki</editor>
		<imprint>
			<date type="published" when="2008" />
			<publisher>AUAI Press</publisher>
			<biblScope unit="page" from="26" to="33" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">On the robustness of semi? supervised hierarchical graph clustering in functional genomics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">M</forename><surname>Kraus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Palm</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">A</forename><surname>Kestler</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Classification of Web Documents Using a Graph Mode</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Schenker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Last</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Bonke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kandel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Seventh International Conference on Document Analysis and Recognition</title>
		<meeting>the Seventh International Conference on Document Analysis and Recognition</meeting>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Mining Correlated Subgraphsin Graph Databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ozaki</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ohkawa</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="272" to="283" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">High Performance Subgraph Mining in Molecular Compounds</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">D</forename><surname>Fatat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">R</forename><surname>Berthold</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">HPCC 2005</title>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="866" to="877" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Graph Clustering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">E</forename><surname>Schaeffer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Science Review</title>
		<imprint>
			<biblScope unit="page" from="27" to="64" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">What Can We Do with Graph-Structured Data A Data Mining Perspective</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Motoda</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006" />
			<pubPlace>Springe</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Empirical Comparison of Graph Classification Algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">S</forename><surname>Ketkar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">B</forename><surname>Holder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><forename type="middle">J</forename><surname>Cook</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009" />
			<publisher>IEEE</publisher>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
