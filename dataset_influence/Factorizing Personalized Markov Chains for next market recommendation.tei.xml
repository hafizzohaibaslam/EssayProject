<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 D:\grobid-master\grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.1-SNAPSHOT" ident="GROBID" when="2018-07-16T23:52+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">WWW 2010 ? Full Paper April 26-30 ? Raleigh ? NC ? USA Factorizing Personalized Markov Chains for Next-Basket Recommendation</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Steffen</forename><surname>Rendle</surname></persName>
							<email>rendle@ar.sanken.osaka-u.ac.jp</email>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Department of Reasoning for Intelligence</orgName>
								<orgName type="department" key="dep2">Information Systems and Machine Learning Lab Institute for Computer Science</orgName>
								<orgName type="institution">The Institute of Scientific and Industrial Research Osaka University</orgName>
								<address>
									<country key="JP">Japan</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christoph</forename><surname>Freudenthaler</surname></persName>
							<email>freudenthaler@ismll.uni-hildesheim.deschmidt-thieme@ismll.uni-hildesheim.de</email>
							<affiliation key="aff1">
								<orgName type="department">Systems and Machine Learning Lab Institute for Computer Science</orgName>
								<orgName type="institution">University of Hildesheim</orgName>
								<address>
									<country>Germany Information</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lars</forename><surname>Schmidt-Thieme</surname></persName>
							<affiliation key="aff2">
								<orgName type="institution">University of Hildesheim</orgName>
								<address>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">WWW 2010 ? Full Paper April 26-30 ? Raleigh ? NC ? USA Factorizing Personalized Markov Chains for Next-Basket Recommendation</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<note>ABSTRACT</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract/>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">RELATED WORK</head><p>Markov chains or recommender systems have been studied by several researchers. <ref type="bibr">Zimdars et al.</ref> [10] describe a sequential recommender based on Markov chains. They investigate how to extract sequential patterns to learn the next state with a standard predictor -e.g. a decision tree. Mobasher et al. <ref type="bibr" target="#b4">[5]</ref> use pattern mining methods to discover sequential patterns which are used for generating recommendations. Shani et al. <ref type="bibr" target="#b8">[9]</ref> introduce a recommender based on Markov decision processes (MDP) and also a MC based recommender. To enhance the maximum likelihood estimates (MLE) of the MC transition graphs, they describe several heuristic approaches like clustering and skipping. Instead of improving the MLE estimates with heuristics, we use a factorization model that is learned for optimal ranking instead of transition MLE. In total, the main difference of our work to all the previous approaches is the use of personalized transition graphs which bring together the benefits of sequential, i.e. time-aware, MC with time-invariant user taste. Furthermore factorizing transition probabilities and optimizing the parameters for ranking is new.</p><p>On the other hand, most of the recommender systems do not take sequential patterns into account and recommend based on the whole user history. Besides a very large literature on rating prediction (i.e. regression) emerging from the Netflix contest (e.g. <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b3">4]</ref>), item recommendation from implicit feedback has started to get more into the focus <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b5">6,</ref><ref type="bibr" target="#b6">7]</ref>. Item recommendation is a harder prediction problem than <ref type="figure">Figure 1</ref>: Sequential basket data with four users and five items {a, b, c, d, e}. The task is to recommend items at time t given a basket history Bt?1, Bt?2, . . ..</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">ITEM RECOMMENDATION FROM SE-QUENTIAL SET DATA</head><p>Item recommendation is the task of suggesting a specific user a personalized list of items (e.g. products, songs). This can be seen as creating a personalized ranking on the items. Usually, recommender systems rely on statistical models that use the event history (e.g. purchases, listening) of users on items to generate recommendations. Time and thus sequential behavior is an important additional information that is tracked in almost any real-world application. Secondly, we consider the problem setting with set data -e.g. in online-shopping usually a basket of products is bought at the same time. In total, our setting is item recommendation from sequential set data. An example of such data can be found in figure 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Sequential vs. General Recommender</head><p>The most common approach to generate recommendations is to discard any sequential information and learn what items a user is typically interested in. On the other hand, recommendations of sequential methods (mostly relying on Markov chains) are based only on the last user events by learning what an arbitrary user buys next when he has bought a certain item in the recent past. Both methods have their strengths and disadvantages. Imagine a user that in general buys movies like <ref type="bibr">'Star Trek' and 'Star Wars'.</ref> In contrast to his usual buying behavior, he recently has purchased 'Titanic' and 'Dirty Dancing' to watch with his girlfriend. After that a MC based recommender of length 2 would only recommend movies like 'Notting Hill' and other romantic movies. In contrast, a global personalized recommender would correctly account for the general taste of the user and recommend also movies like 'Back To the Future', 'Alien' or other science fiction movies. But there are also examples where sequential recommenders have advantages: E.g. good recommendations for a user that has recently bought a digital camera are accessories that other users have bought after buying that camera -this is exactly what a Markov chain model does. Global personalized recommender would not adapt directly to the recent purchase (the digital camera) but would recommend items this user likes in general. random variables are defined over I -i.e. realizations are single items i ¡Ê I. But in our case, the variables are defined over P(I) as the realizations are whole baskets B and thus the size of the state space is 2 |I| . Obviously, defining a long chain over the whole state space is not feasible for sets. To handle this huge state space, we make two simplifications: (1) we use chains of length m = 1 and (2) the transition probabilities are simplified.</p><p>An unpersonalized Markov chain of order m = 1 for the basket problem is:</p><formula xml:id="formula_0">p(Bt|Bt?1)<label>(2)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Formalization</head><p>Before describing our approach to solve this problem, we introduce the notation of this paper. Let U = {u1, . . . , u |U | } be a set of users and I = {i1, . . . , i |I| } a set of items. For each user u, a purchase history B u of his baskets is known:</p><formula xml:id="formula_1">B u := (B u 1 , . . . B u tu?1 ) with B u t ? I.</formula><p>The purchase history of all users is B := {B u 1 , . . . B u |U | }. Given this history, the task is to recommend items to a user the next time t the user visits the shop. Note that we deal not with absolute time points (i.e. 1st January 2010) but with relative ones regarding a user, e.g. the first, second, etc. basket of a user. The item recommendation task can be formalized in creating a personal ranking In recommender scenarios without sets, usually longer chains (e.g. m = 3) are preferable <ref type="bibr" target="#b8">[9]</ref> because a history with size m = 1 contains only one item. In our case with sets, even a chain with length m = 1 is reasonable because it relies already on many items (all items of the basket) -e.g. in the application of our evaluation there are about 10 items on average (see <ref type="table">table 1</ref>).</p><p>Markov chains of length m = 1 are described by their stochastic transition matrix A over the state space. In our case the state space over sets is P(I) and thus the dimensionality of the transition matrix would be 2 |I| ¡Á2 |I| . Thus, instead of modeling transition over baskets, we model transitions over |I| binary variables that describe a set/ basket:</p><formula xml:id="formula_2">a l,i := p(i ¡Ê Bt|l ¡Ê Bt?1)<label>(3)</label></formula><p>Using this representation has the following implications:</p><formula xml:id="formula_3">&lt;u,t? I 2</formula><p>over all pairs of items for user u for his t-th basket. With this ranking, we can recommend the user the top n items.</p><p>? The state space is now I and thus the size of the transition matrix A is |I| 2 -by factorization, we will later reduce the number of parameters needed to represent this space from |I| 2 to 2 k |I| where k is the number of latent dimensions used in the factorization model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">FACTORIZING PERSONALIZED MAR-KOV CHAINS (FPMC)</head><p>First, we introduce MC for sequential set data and extend this to personalized MCs. We discuss the weakness of Maximum Likelihood Estimates for the transition cubes. To solve this, we introduce factorized transition cubes where information among transitions is propagated. We conclude this section by combining both ideas into FPMCs.</p><p>? The elements of the state space are i ¡Ê B which are binary variables, thus p(i ¡Ê Bt|l ¡Ê Bt?1)+p(i ¡Ê Bt|l ¡Ê Bt?1) = 1. Note that the transition matrix A is no longer stochastic, because P i¡ÊI a l,i = 1. For item recommendation, we are interested in the probability of purchasing an item given the last basket of a user. This can be defined as the mean over all transition probabilities from purchases of the last basket to this item:</p><formula xml:id="formula_4">p(i ¡Ê Bt|Bt?1) := 1 |Bt?1| X p(i ¡Ê Bt|l ¡Ê Bt?1) (4) l¡ÊB t?1</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Personalized Markov Chains for Sets</head><p>And the full Markov chain over baskets can be expressed by:</p><p>First, we describe how to model the unpersonalized MC for sets with a reasonable state space. Then we show how to estimate the parameters for this unpersonalized MC with the maximum likelihood estimator (MLE). Afterwards, the extension of both the model and the estimation to personalized MCs is simple. Finally, we will show the limitations of full parametrized transition graphs (i.e. one parameter per transition) and the MLE method for personalized Markov chains.</p><formula xml:id="formula_5">p(Bt|Bt?1) ¡Ø Y p(i|Bt?1) (5) i¡ÊBt</formula><p>Note that we are looking for a ranked list of items and thus are not interested in the full Markov chain (eq. <ref type="formula" target="#formula_38">(5)</ref>), but in sortable single-item probabilities (eq. <ref type="formula" target="#formula_38">(4)</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.2">Estimation of Transition Probabilities</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.1">Markov Chains for Sets</head><p>To make predictions using the Markov chain in eq. (4), the transition probabilities a l,i have to be estimated. The maximum likelihood estimator for a l,i given the data B is:</p><p>In general, a Markov chain of order m is defined as</p><formula xml:id="formula_6">p(Xt = xt|Xt?1 = xt?1, . . . , Xt?m = xt?m) (1) ? a l,i = ? p(i ¡Ê Bt|l ¡Ê Bt?1) = ? p(i ¡Ê Bt ¡Ä l ¡Ê Bt?1) ? p(l ¡Ê Bt?1) =</formula><p>where Xt, . . . , Xt m are random variables and xt?m their realizations. In a recommender application without sets, the An example for non-personalized MLE can be seen in <ref type="figure" target="#fig_0">figure  2</ref>. Here, the buying history for the four users of <ref type="figure">figure 1</ref> are translated into transitions A of eq. (4). The transition matrix can then be applied to predict which items should be recommended given the last basket. E.g. for user 4, the probabilities would be: Many of the parameters cannot be estimated because there is no observation in the data. Also the transitions that are estimated are based only on a small number of observations that means they are unreliable. At first glance, using personalized MCs seems to be unreasonable. We will discuss next what are the reasons for the poor estimations and show how to fix it.</p><formula xml:id="formula_7">= |{(Bt, Bt?1) : i ¡Ê Bt ¡Ä l ¡Ê Bt?1}| |{(Bt, Bt?1) : l ¡Ê Bt?1}| (6)</formula><formula xml:id="formula_8">p</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.4">Limitations of MLE and Full Parametrization</head><p>As the user has already bought item c and e, the best recommendation of unknown items would be b and then a. Looking only at the items this and similar users have bought in the past, one would expect, that item d might be a better recommendation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.3">Personalized Markov Chains for Sets</head><p>Until now, the MC has been defined unpersonalized, i.e. independently of the user. Next, we extend this to a personalized MC per user:</p><formula xml:id="formula_9">p(B u u t |B t?1 )<label>(7)</label></formula><p>Again, we represent each MC by the transitions over items, but now user-specific:</p><formula xml:id="formula_10">a u,l,i := p(i ¡Ê B u u t |l ¡Ê B t?1 )<label>(8)</label></formula><p>And thus also the prediction depends only on the user's transitions:</p><formula xml:id="formula_11">p(i ¡Ê B u u X u u t |B t?1 ) := 1 |B u p(i ¡Ê B t |l ¡Ê B t?1 ) (9) t?1 | l¡ÊB u t?1</formula><p>Also MLE can be applied analogously but now the transitions for user u are only estimated from his history B uthat means u is not a free variable anymore:</p><p>The problem of unreliable transition probabilities both for unpersonalized and even more for personalized MCs lies in the fact that they work with a full parametrized transition graph (e.g. matrix and tensor respectively) and the way of parameter estimation. Full parametrization means we have |I| 2 and |U | |I| 2 respectively independent parameters for describing the transitions. Note that MLE estimates each transition parameter a l,i independently from the others, i.e. none of the cooccurrences (l, i) will contribute to another transition probability estimator (l, j) but only to p(i ¡Ê Bt|l ¡Ê Bt?1). This is even worse for personalized MCs as a triple (u, l, i) does not contribute to the estimate of (u ¡ä , l, i). In addition, the important properties of MLE (e.g. Gaussian distribution, unbiased estimator, minimal variance under all unbiased estimators) only exist in asymptotic theory. In cases of less data they suffer from underfitting. Since in our scenario the data is extremely sparse, Maximum Likelihood Estimators easily fail.</p><p>To get more reliable estimates for the transitions, we factorize the transition cube which breaks the independence of the parameters and the estimation. This way, each transition is influenced by similar users, similar items and similar transitions because information propagates through this model. In our evaluation, we show that this way (1) better transition graphs than MLE can be generated for the nonpersonalized setting and (2) that personalized MCs outperform both non-personalized factorized MC and non-personalized full parametrized MLE MCs. In the following, we will derive a factorization model for the transition cube A. That means we model the unobserved transition tensor A by a low rank approximation?Aapproximation? approximation?A. The advantage of this approach over a full parametrization is that it can handle sparsity and generalizes to unobserved </p><formula xml:id="formula_12">u u ? a u,l,i = ? p(i ¡Ê B u u ? p(i ¡Ê B t ¡Ä l ¡Ê B t |l ¡Ê B t?1 ) = t?1 ) ? p(l ¡Ê B u t?1 )</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Factorizing Transition Graphs</head><formula xml:id="formula_13">c fu,f i ,f j = ( 1, if fu = fi = fj 0, else<label>(14)</label></formula><p>with equal factorization dimensionality: kU = kL = kI . As the observed transitions for A are very sparse, we use a special case of CD that models pairwise interactions: or equivalently:</p><formula xml:id="formula_14">? a u,l,i := v U,I U,L u , v I,U i + v I,L i , v L,I l + v u , v L,U l<label>(15)</label></formula><formula xml:id="formula_15">k U,I k I,L k U,L ? a u,l,i := X v U,I I,U X I,L L,I X U,L u,f v i,f + v i,f v l,f + v u,f v L,U l,f f =1 f =1 f =1<label>(16)</label></formula><p>data because information propagates through the modeli.e. parameters influence each other.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.1">Factorization of the Transition Cube</head><p>This model directly models the pairwise interaction between all three modes of the tensor, i.e. between U and I, U and J as well as J and I. In total for each mode (i.e. user U, item I, item J), we have two factorization matrizes:</p><p>A general linear factorization model for estimating the tensor A is the Tucker Decomposition (TD):</p><p>1. For the interaction between U and I:</p><formula xml:id="formula_16">V U,I ¡Ê R |U |¡Ák U,I ? A := C ¡ÁU V U ¡ÁL V L ¡ÁI V I<label>(11)</label></formula><p>modelling the user features and</p><formula xml:id="formula_17">V I,U ¡Ê R |I|¡Ák U,I for the last item i.</formula><p>where C is a core tensor and V U is the feature matrix for the users, V L is the feature matrix for the items in the last transition (outgoing nodes) and V I is the feature matrix for the items to predict (ingoing nodes). They have the following structure:</p><p>2. For the interaction between I and L:</p><formula xml:id="formula_18">V I,L ¡Ê R |I|¡Ák I,L</formula><p>for the next item i and V L,I ¡Ê R |I|¡Ák I,L for the last item l.</p><p>3. For the interaction between U and L:</p><formula xml:id="formula_19">V U,L ¡Ê R |U |¡Ák U,L C ¡Ê R k U ,k L ,k I , V U ¡Ê R |U |¡Ák U ,<label>(12)</label></formula><p>for the user features and V L,U ¡Ê R |I|¡Ák U,L for the features of the last item l.</p><formula xml:id="formula_20">V L ¡Ê R |I|¡Ák L , V I ¡Ê R |I|¡Ák I<label>(13)</label></formula><p>with the factorization dimensions kU , kL and kI . The Tucker Decomposition subsumes other factorization</p><p>An advantage of this model over TD is that the prediction and learning complexity is much lower than for TD <ref type="bibr" target="#b7">[8]</ref>. Furthermore even though TD and PARAFAC subsume the pairwise interaction model, with standard regularization estimation procedures have problems identifying such a model <ref type="bibr" target="#b7">[8]</ref>.</p><p>In section 5 we describe how to optimize the model parameters (factorization matrices) for item recommendation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.2">Factorization of the Transition Matrix</head><p>The proposed model for factorizing transition cubes can also be applied to estimate a transition matrix A (see formula (3)) for cases where no personalization of the transition graph is desired. By skipping the user-interactions in equation (15), a factorization model for normal transition graphs is obtained: means, the model parameters should be optimized for ranking. First, we derive S-BPR which is a general optimization criterion for item recommendation from sequential set data. This optimization criterion is not limited to our FPMC model and can be applied also to other models like kNN or standard MF. Secondly, we apply S-BPR to FPMC and show how the model can be simplified in the case of item recommendation using S-BPR. Afterwards we present a stochastic gradient descent learning algorithm based on bootstrap sampling for optimizing the model parameters with S-BPR.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Optimization Criterion S-BPR?</head><formula xml:id="formula_21">BPR?BPR? l,i := v I,L i , v L,I l<label>(17)</label></formula><p>Also the parameter estimation method in section 5 can be used for optimizing the factorization matrices.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Summary of FPMC</head><p>As described in section (3), the goal of item recommendation from sequential basket data is to derive a ranking &gt;u,t over the items. To model the ranking, we assume there is an estimator?xestimator? estimator?x : U ¡Á T ¡Á I ¡ú R -e.g. the buying probability of the personalized Markov Chain -which is used to define the ranking:</p><p>Bringing together the personalized set MC (eq. 9) with the factorized transition cube (eq. 15) results in the factorized personalized Markov chain (FPMC):</p><formula xml:id="formula_22">i &gt;u,t j :? ? xu,t,i &gt; R ? xu,t,j<label>(21)</label></formula><formula xml:id="formula_23">p(i ¡Ê B u u X u u t |B t?1 ) = 1 |B u p(i ¡Ê B t |l ¡Ê B t?1 ) (18) t?1 | l¡ÊB u t?1</formula><p>We model p(i ¡Ê B u t |l ¡Ê B u t?1 ) with the factorization cub¨ºcub¨º A:</p><formula xml:id="formula_24">? p(i ¡Ê B u u X</formula><p>As &gt; R is a total order on (a closed subset of) the real numbers R, also &gt;u,t will be a total order. Thus?xuThus? Thus?xu,t,i is able to generate a personalized ranking 3 for a specific time t on the items I.</p><p>Next, we derive the sequential BPR (S-BPR) optimization criterion analogously to the general BPR approach <ref type="bibr" target="#b6">[7]</ref>. The best ranking &gt;u,t? I 2 for user u at time t can be formalized as:</p><formula xml:id="formula_25">t |B t?1 ) = 1 |B u ? a u,l,i t?1 | l¡ÊB u t?1 p(¦¨| &gt;u,t) ¡Ø p(&gt;u,t |¦¨) p(¦¨) = 1 |B X U,I u (v u , v I,U i + v I,L i , v L,I l t?1 | l¡ÊB u t?1 + v U,L u , v L,U l ) (19)</formula><p>And as the factorization (U, I) is independent of l, we can remove it from the sum:</p><p>where ¦¨ are the model parameters -in our case the param- </p><formula xml:id="formula_26">eters are ¦¨ = {V U,I , V I,U , V L,I , V I,L , V U,L , V L,U }.</formula><formula xml:id="formula_27">t |B t?1 ) = v u , v I,U i ¦¨ u¡ÊU Bt¡ÊB u + 1 |B X U,L u " v I,L i , v L,I l + v u , v L,U l " (20) t?1 | l¡ÊB u t?1<label>(22)</label></formula><p>In the next section, we apply this model to the task of item recommendation. We will show that in this case, the model can be simplified even more because the interaction between U and L vanishes. Besides better generalization of factorization models compared to a full parametrized transition cube, a further advantage is that less parameters are needed. Instead of |U | ¡¤ |I| 2 parameters in a full parametrized cube or |I| 2 in a full parametrized matrix, the factorization model only needs 2 ¡¤ kI,L ¡¤ |I| parameters for the non-personalized model and 2 ¡¤ kI,L ¡¤ |I| + kU,I ¡¤ (|U | + |I|) parameters for the personalized model. This is especially important for applications with a high number of items where a full parametrization with |I| Expanding &gt;u,t for all item-pairs (i, j) ¡Ê I 2 and using the same assumptions as in <ref type="bibr" target="#b6">[7]</ref>, the probability of p(&gt;u,t |¦¨) can be rewritten as:</p><formula xml:id="formula_28">Y Y Y Y p(i &gt;u,t j|¦¨)<label>(23)</label></formula><p>u¡ÊU Bt¡ÊB u i¡ÊBt j ¡ÊBt</p><p>Next we use the model definition of eq. <ref type="formula" target="#formula_0">(21)</ref> to express p(i &gt;u,t j|¦¨): </p><formula xml:id="formula_29">p(i &gt;u,t j|¦¨) = p(? xu,t,i &gt; R ? xu,t,j | ¦¨) (24) = p(? xu,t,i ? ? xu,t,j &gt; R 0 | ¦¨)<label>(25)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">ITEM RECOMMENDATION FROM SE-QUENTIAL SET DATA WITH FPMC</head><p>Furthermore, we assume Gaussian priors on the model parameters: ¦È ? N (0, ).</p><p>So far, a factorization model for personalized Markov chains has been introduced. In the following, we will apply this model to the task of item recommendation. That In total this leads to the MAP-estimator for sequential BPR:</p><p>Factorizing an unpersonalized Markov chain using equation (4) and (17) leads to:</p><formula xml:id="formula_31">argmax ln p(&gt;u,t |¦¨) p(¦¨) ¦¨ ? x FMC X u,t,i := v I,L i , v<label>(31)</label></formula><formula xml:id="formula_32">= argmax ln Y Y Y Y L,I l ¦Ò(? xu,t,i ? ? xu,t,j)p(¦¨) 1 |Bt?1| l¡ÊB t?1 ¦¨ u¡ÊU Bt¡ÊB u i¡ÊBt j ¡ÊBt = argmax X X X X ln ¦Ò(? xu,t,i ? ? xu,t,j) ? ¦Ë¦¨||¦¨|| 2 F ¦¨ u¡ÊU Bt¡ÊB u i¡ÊBt j ¡ÊBt</formula><p>Thus FPMC (eq. <ref type="formula" target="#formula_0">(28)</ref>) is a linear combination of both models: <ref type="bibr">(27)</ref> MF where ¦Ë¦¨ is the regularization constant corresponding to ¦Ò¦¨.</p><formula xml:id="formula_33">? x FPMC u,t,i = ? x u,t,i + ? x FMC u,t,i<label>(32)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Item Recommendation with FPMC</head><p>For item recommendation with FPMC, we express?xexpress? express?x by the FPMC model and apply S-BPR. We will show that one of the pairwise effects of FPMC vanishes which leads to a more compact model. First, we use FPMC to express?xexpress? express?x:</p><formula xml:id="formula_34">? x ¡ä u u u,t,i := ? p(i ¡Ê B t |B t?1 ) " = v U,I X U,L u , v I,U i + 1 |B u " v I,L i , v L,I l + v u , v L,U l t?1 | l¡ÊB u t?1</formula><p>Lemma 1 (Invariance of (U,L) decomposition). For ranking of items and optimization with S-BPR, the FPMC model is invariant to the (U,L) decomposition, i.e. ? x ¡ä is invariant t?</p><p>x with:  <ref type="formula" target="#formula_38">(1)</ref> optimizing for another objective criterion (e.g. least-square) where the (U, L) decomposition cannot be dropped because here the invariance to the objective (Lemma 1) does not hold like in S-BPR. And (2) using another factorization model for A in FPMC than pairwise interaction (e.g. PARAFAC or TD) also leads to a different model equation even for item recommendation with S-BPR.</p><formula xml:id="formula_35">? xu,t,i := v U,I X u , v I,U i + 1 |B u v I,L i , v</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Learning Algorithm</head><formula xml:id="formula_36">?u, t, i, j : ? x ¡ä ¡ä u,t,i ? ? x u,t,j = ? xu,t,i ? ? xu,t,j<label>(29)</label></formula><p>This holds because the additional term P</p><formula xml:id="formula_37">U,L l¡ÊB u t?1 v u , v L,U l in?xin? in?x ¡ä u,t,¡¤</formula><p>is independent of i and j given u and t and thus vanishes on subtraction. Now it is easy to show the equivalence of the rankings for all u, t, i, j:</p><p>Next, we adapt the BPR-learning algorithm to S-BPR and apply it to FPMC. As FPMC subsumes MF and FMC, both of these models can also be optimized for S-BPR with the provided algorithm.</p><p>Trying to optimize S-BPR directly is time consuming, because the number of (u, t, i, j) quadruples is huge, i.e.</p><formula xml:id="formula_38">O(|S| |I|) where S := {(u, t, i)|u ¡Ê U, B u t ¡Ê B u , i ¡Ê B u (i &gt; ¡ä ¡ä ¡ä ¡ä ¡ä u,t j) ? (? x u,t,i &gt; R ? x u,t,j ) ? (? x u,t,i ? ? x u,t,j &gt; R 0) eq.29 ? (? xu,t,i ? ? xu,t,j &gt; R 0) ? (? xu,t,i &gt; R ? xu,t,j ? i &gt;u,t j)<label>(</label></formula><p>2) The equivalence of model parameters under S-BPR optimization (eq. <ref type="formula" target="#formula_0">(27)</ref>) follows directly from eq. <ref type="bibr">(29)</ref>.</p><p>Thus for item recommendation with FPMC the simpler mode?mode? x from eq. <ref type="formula" target="#formula_0">(28)</ref> should be used.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.1">Expressiveness</head><p>Next, we will show the analogies of the simplified FPMC model to standard matrix factorization (MF) and a factorized Markov chain (FMC). First, we will recollect the definitions of MF and FMC. In our notation, the standard Matrix factorization model for item recommendation <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b5">6,</ref><ref type="bibr" target="#b6">7]</ref> is: t }. Thus standard gradient descent and also basket-wise stochastic gradient descent methods will converge very slowly (see <ref type="bibr" target="#b6">[7]</ref> for more details) and are not applicable for problems of reasonable size. Instead, we follow <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b7">8]</ref> and draw the quadruples independently by bootstrapping and perform stochastic gradient descent on these bootstrap samples. This learning method has been shown to be efficient for two related problem classes: standard item recommendation <ref type="bibr" target="#b6">[7]</ref> and tag recommendation <ref type="bibr" target="#b7">[8]</ref>.</p><p>The complete algorithm is shown in <ref type="figure" target="#fig_9">figure 5</ref>. In each iteration a quadruple (u, t, i, j) is drawn consisting of an item i in the basket B u t of user u at time t and an item j that is not in this basket. Then gradient descent on S-BPR using this quadruple is performed. The gradients of S-BPR with respect to a model parameter ¦È and a given (u, t, i, j) are:</p><formula xml:id="formula_39">? x MF U,I ` ln ¦Ò(? xu,t,i ? ? xu,t,j) ? ¦Ë ¦È ¦È 2 ? u,t,i = v u , v I,U i<label>(30)</label></formula><p>? ?¦È wher¨º x is independent of the sequential behaviour, i.e. independent of t.</p><formula xml:id="formula_40">=(1 ? ¦Ò(? xu,t,i ? ? xu,t,j)) ? ?¦È (? xu,t,i ? ? xu,t,j) ? 2 ¦Ë ¦È ¦È 1: procedure LearnSBPR-FPMC(S) 2: draw V U,I , V I,U , V I,L , V L,I from N (0, ¦Ò 2 ) 3: repeat 4:</formula><p>draw (u, t, i) uniformly from S 5: draw j uniformly from (I \ B (kU,I = 0) are a special case of FPMC, we use the FPMC learning algorithm for all three methods. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Dataset</head><formula xml:id="formula_41">t ) 6: ¦Ä ¡û (1 ? ¦Ò(? xu,t,i ? ? xu,t,j)) 7:</formula><p>for f ¡Ê {1, . . . , kU,I } do</p><formula xml:id="formula_42">" 8: v U,I U,I I,U I,U u,f ¡û v u,f + ¦Á " ¦Ä (v i,f ? v j,f ) ? ¦ËU,I v U,I u,f " 9: v I,U I,U U,I i,f ¡û v i,f + ¦Á " ¦Ä v u,f ? ¦ËI,U v I,U i,f " 10: v I,U I,U U,I j,f ¡û v j,f + ¦Á " ?¦Ä v u,f ? ¦ËI,U v I,U j,f</formula><p>We evaluate our recommender on anonymized purchase data of an online drug store 4 . The dataset we used is a 10-core subset, i.e. every user bought in total at least 10 items ( P B¡ÊB u |B|) &gt; 10 and vice versa each item was bought by at least 10 users. The statistics of the dataset can be found in table 1. We also created a dense subset of the 10-core dataset to study the effect of sparsity on the methods.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>11:</head><p>end for 12:</p><formula xml:id="formula_43">¦Ç ¡û 1 |B u t?1 | P l¡ÊB u 6.2 Evaluation Metrics t?1 v L,I l,f 13: for f ¡Ê {1, . . . , kI,L} do " 14: v I,L I,L i,f ¡û v i,f + ¦Á " ¦Ä ¦Ç ? ¦ËI,L v I,L i,f " 15: v I,L I,L j,f ¡û v j,f + ¦Á " ?¦Ä ¦Ç ? ¦ËI,L v I,L j,f 16: for l ¡Ê B u t?1 do 17: v ? L,I L,I v I,L i,f ?v I,L j,f l,f ¡û v l,f + ¦Á " ¦Ä |B u t?1 | ? ¦ËL,I v L,I l,f</formula><p>18: end for 19:</p><p>end for 20:</p><p>until convergence 21:</p><p>return</p><formula xml:id="formula_44">V U,I , V I,U , V I,L , V L,I</formula><p>22: end procedure with</p><formula xml:id="formula_45">? ?v I,U U,I u,f (? xu,t,i ? ? xu,t,j) = v i,f ? v I,U j,f ? ?v I,U i,f (? xu,t,i ? ? xu,t,j) = v U,I u,f</formula><p>We evaluated by splitting the dataset S into two non overlapping sets: a training set 5 Strain and a testing set Stest. This split is done by putting the last basket for each user into Stest and the remaining ones into Strain. The recommenders were trained on Strain and then the performance on Stest is measured. We removed those users from the evaluation that have bought less then 10 different items in the past (i.e. Strain). Secondly, for each user we removed all items from the test baskets (and the corresponding predictions) that this user has already bought in the past -this is because we want to recommend to the user items that are new/ unknown to him. Note that this makes the prediction task much harder and explains the low f-measure of all methods in <ref type="figure" target="#fig_10">figure 6</ref>. Otherwise just rerecommending already bought items would be a simple but very successful strategy for non-durable products in drug stores like toothbrushes or cleaner. However, this is not the task of recommender systems because they should help the user to discover new things.</p><p>The quality is measured for each user u on the basket Bu in the test dataset. Therefore we rank all items with our methods and let?rulet? let?ru : I ? {1, . . . , |I|} be the (bijective) mapping from an item i to its (predicted) rank. We use the following quality measures to evaluate the estimated ranking against the actual bought items:</p><formula xml:id="formula_46">? ?v I,U j,f (? xu,t,i ? ? xu,t,j) = ?v U,I u,f</formula><p>? Half-life-utility (HLU) aka 'Breese score' <ref type="bibr" target="#b0">[1]</ref>:</p><formula xml:id="formula_47">? ?v I,L I,L ?1 ? r?1 ¦Á?1 L,I l,f (? xu,t,i ? ? xu,t,j) = 1 |B u (v i,f ? v j,f ) P |I| r=1 ¦Ä(? r u (r) ¡Ê B) 2 t?1 | HLU(B, ? ru) := 100 ? r?1 ¦Á?1 ? ?v X P |B| r=1 2 I,L i,f (? xu,t,i ? ? xu,t,j) = 1 |B u v L,I l,f t?1 | l¡ÊB u t?1</formula><p>Where we set the half-life parameter ¦Á to 5. We report the average HLU over all test baskets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>? ?v</head><formula xml:id="formula_48">X I,L j,f (? xu,t,i ? ? xu,t,j) = ? 1 |B u v L,I l,f t?1 | l¡ÊB u</formula><p>? Precision and recall of the top-N list:</p><formula xml:id="formula_49">t?1 ?1 ?1</formula><p>The complexity of the algorithm is O(#it (kU,I + kI,L |B|)) where |B| the average basket size in B and #it is the number of iterations.</p><p>T op(? ru, N ) := {?r{?r</p><formula xml:id="formula_50">u (1), . . . , ? r u (N )} Prec(B, ? ru, N ) := |Top(? ru, N ) ¡É B| N 6. EVALUATION Rec(B, ? ru, N ) := |Top(? ru, N ) ¡É B| |B|</formula><p>We empirically compare the recommender quality of our proposed factorized MC methods (factorized personalized Markov chain FPMC and factorized Markov chain FMC) to non-factorized Markov chain ('MC dense'), matrix factorization (MF) and the most-popular baseline (MP) -i.e. ranking all items by how often they have been bought in the past. Note that this comparison includes the strong baseline method BPR-MF <ref type="bibr" target="#b6">[7]</ref>. As MF (kI,L = 0) and FMC We report the f-measure (harmonic mean) over the average precision and average recall over all test baskets using top-5 list. <ref type="table">Table 1</ref>: Characteristics of the datasets in our experiments in terms of number of users, items, baskets and triples (u, i, t) where t is the sequential time of the basket. The dense dataset is a subset of the sparse one containing the 10,000 users with most purchases and the 1000 most purchased items. dataset users |U | items |I| baskets avg. basket size avg. baskets per user triples Drug store 10-core (sparse) 71,602 7,180 233,476 11.3 3.2 2,635,125 Drug store (dense) 10,000 1,002 90,655 9.2 9.0 831,442 ? Area under the ROC curve:</p><formula xml:id="formula_51">AUC(B, ? ru) := 1 |B| ¡¤ |I \ B| X X ¦Ä(? ru(i) &lt; ? ru(j)) i¡ÊB j¡ÊI\B</formula><p>We report the average AUC over all test baskets.</p><p>The runtime of model training linearly depends on the number of features. With our implementation, training of the largest models (k = 128) took about 4 hours for MF, 31 hours for FMC and 34 hours for FPMC on the larger (sparse) dataset.</p><p>to outperform MC whereas in the sparse one MC is superior. The reason could be that in the dense setting there is much more information per user, thus the MF method using all the users purchase information has advantages over the MC model that only relies on the last purchases. And the other way around, MC has advantages on the sparse dataset. FPMC that combines the advantages of both methods outperforms them on both datasets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">CONCLUSION</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Results</head><p>In <ref type="figure" target="#fig_10">figure 6</ref> you can see the quality on the sparse and dense online-shopping dataset. For the factorization methods we run each method with kU,I = kI,L ¡Ê {8, 16, 32, 64, 128} factorization dimension. The x-axis of the diagrams reflects this increasing dimensionality. As expected all methods outperform the most-popular baseline clearly on both datasets and all quality measures. Secondly, with reasonable factorization dimensions (e.g. 32) all the factorization methods outperform the standard MC method. And in total, the factorized personalized MC (FPMC) outperforms all other methods.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3.1">MC vs. FMC</head><p>First, we want to discuss the advantage of factorization over a dense transition model by comparing MC with nonpersonalized FMC. The results indicate that learning a factorized transition matrix leads to better estimates than usual counting schemes. Factorization has two advantages (1) it can densify a sparse transition matrix and (2) it prevents overfitting of the estimates by using a low-rank approximation. The sparseness of the transition matrix estimated by counting schemes can be seen in table 2. In the dense setting also the transition matrix is filled in 88% whereas on the sparse dataset this drops to 12%. Comparing the quality on the sparse and dense setting in <ref type="figure" target="#fig_10">figure 6</ref>, one can see that the advantages of FMC over MC are much higher in the sparse setting than in the dense one. But even in the dense setting where also MC's transition matrix is almost completely filled, FMC outperforms MC because the factorization prevents overfitting by using less parameters.</p><p>In this paper, we have introduced a recommender method based on personalized Markov chains over sequential set data. Instead of using the same transition matrix for all users, this method uses an individual transition matrix for each user which in total results in a transition cube. As direct estimation (e.g. by Maximum Likelihood) over a full parametrized transition cube leads to very poor estimates, we introduce a factorization model that gives a low-rank approximation to the transition cube. The advantages of this approach is that each transition is influenced by transitions of similar users, similar items and similar transitions. Thus the quality of the final transition graph is much higher than that of a full parametrized model. Secondly, we apply factorized personalized Markov chains (FPMC) to the task of item recommendation with sequential set data by extending the BPR framework <ref type="bibr" target="#b6">[7]</ref>. Additionally, we show that FPMC subsumes the popular matrix factorization model and a nonpersonalized factorized Markov chain. Due to the expressiveness of FPMC it combines the advantages of both the state-of-the-art global personalized approach (MF) and the sequential MC method. Empirically, we show on real-world data that FPMC outperforms MF, FMC and normal MC both on sparse and dense data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Online?Shopping (sparse)</head><p>Online?Shopping (sparse) Online?Shopping (sparse) <ref type="bibr">0</ref>   <ref type="bibr" target="#b6">[7]</ref>, a standard dense Markov chain (MC dense) learned with Maximum Likelihood and the baseline 'most-popular'. The factorization dimensionality is increased from 8 to 128.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Non-personalized Markov chain: The transition matrix contains the MLE estimates for the probability p(i ¡Ê Bt|l ¡Ê Bt?1) using the data of figure 1. The column # states how many observations were used to estimate this transition. In this example, the users 1 and 2 as well as 3 and 4 share a similar taste for items a, c and items c, e respectively. Thus, one would expect to find d before b in the recommendation list for user 4, but the MC would recommend b as best unknown item.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure ( 3 )</head><label>3</label><figDesc>Figure (3) shows the personalized transition matrix of our example. Many of the parameters cannot be estimated because there is no observation in the data. Also the transitions that are estimated are based only on a small number of observations that means they are unreliable. At first glance, using personalized MCs seems to be unreasonable. We will discuss next what are the reasons for the poor estimations and show how to fix it.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>|{(B t , B t?1 ) : i ¡Ê B t ¡Ä l ¡Ê B t?1 }| |{(B u (10) t , B u t?1 ) : l ¡Ê B u t?1 }| That means for each user we have an own transition matrix A u which in total gives a transition tensor A ¡Ê [0, 1] |U |¡Á|I|¡Á|I| .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Personalized Markov chains: For each user an individual transition matrix is given. The transition matrices contain the MLE estimates for the probability p(i ¡Ê B u t |l ¡Ê B u t?1 ). Entries with ? are missing values as there is no data to estimate the probabilities. Obviously, estimating the personalized transition matrices directly results in very poor transitions as each estimate is not reliable. This problem will be solved later by factorizing the transitions.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Personalized transition cube: Stacking all transition matrices of the individual users leads to a transition cube. Instead of a fully parametrized cube which is very sparse, a factored cube is used to generate better transition estimates.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>Assuming independence of baskets and users, this leads to the maximum a posterior (MAP) estimator of the model parameters:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>2</head><label></label><figDesc>The ¦¨ can be skipped as they are the model parameters for?x for? for?x -i.e. ? x = ? x(¦¨). And we define p(z &gt; 0) := ¦Ò(z) = 1 1+e ?z parameters might not be feasible. using the logistic function ¦Ò: p(i &gt;u,t j|¦¨) = ¦Ò(? xu,t,i ? ? xu,t,j)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Proof.</head><label></label><figDesc>Let &gt; ¡ä be the ranking generated by?xby? by?x ¡ä and &gt; the ranking of?xof? of?x according to eq. (21). Two things have to be shown: (1) both models (? x ¡ä and?xand? and?x) lead to the same ranking and (2) learning both models with S-BPR leads to the same parameters ¦¨. Both proofs rely on the fact that: This means FPMC can generalizes both models: By setting the factorization dimensionality of (U,I) to zero (kU,I = 0) a pure FMC is obtained and analogously setting kI,L = 0 leads to a pure MF model. It is important to note, that even though the model equa- tion for FPMC in the case of item recommendation can be expressed by a combination of a MF and a FMC model, it is different from a simple ensemble of a single MF with a single FMC model because in our case the model parame- ters are learned jointly. Thus the learned model parameters jointly represent the personalized Markov chain instead of just pure user-item interactions and a global MC. This gets more obvious in the general case of FPMC where the model equation cannot be expressed by a linear combination of MC and FMC. Examples are</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Optimizing FPMC for S-BPR with learning rate ¦Á and regularization parameters ¦ËU,I , ¦ËI,U , ¦ËI,L, ¦ËL,I .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: Comparison of factorized personalized Markov chains (FPMC) to a factorized Markov chain (FMC), matrix factorization (MF) [7], a standard dense Markov chain (MC dense) learned with Maximum Likelihood and the baseline 'most-popular'. The factorization dimensionality is increased from 8 to 128.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>Table 2 :</head><label>2</label><figDesc></figDesc><table>Properties of the MC transition matrix estimated by the counting scheme. For the sparse dataset, 
only 12% of the entries of the transition matrix are non-zero and non-missing. For the dense subset, 88% are 
filled. 
dataset 
total 
missing values 
non-zero 
zero 
Drug store 10-core (sparse) 51,552,400 (100%) 1,041,100 (2.0%) 6,234,371 (12.1 %) 44,276,929 (85.9%) 
Drug store (dense) 
1,004.004 (100%) 
0 (0.0%) 
889,419 (88.6 %) 
114,585 (11.4%) 

</table></figure>

			<note place="foot" n="1"> http://www.netflixprize.com/ 2 http://www.kde.cs.uni-kassel.de/ws/dc09 ACM 978-1-60558-799-8/10/04.</note>

			<note place="foot" n="1"> ¦Ë ¦È 3 In case of identities?xuidentities? identities?xu,t,i = ? xu,t,j a random order between these two is chosen.</note>

			<note place="foot" n="4"> http://www.rossmannversand.de/ 5 Hyperparameter search is done by removing for each user the last basket of Strain and using these baskets for the validation set.</note>
		</body>
		<back>

			<div type="acknowledgement">
			</div>

			<div type="annex">
			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Empirical analysis of predictive algorithms for collaborative filtering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">S</forename><surname>Breese</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Heckerman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Kadie</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Fourteenth Conference on Uncertainty in Artificial Intelligence (UAI-98)</title>
		<meeting>the Fourteenth Conference on Uncertainty in Artificial Intelligence (UAI-98)<address><addrLine>San Francisco</addrLine></address></meeting>
		<imprint>
			<publisher>Morgan Kaufmann</publisher>
			<date type="published" when="1998" />
			<biblScope unit="page" from="43" to="52" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Collaborative filtering for implicit feedback datasets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Koren</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Volinsky</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE International Conference on Data Mining (ICDM 2008)</title>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="263" to="272" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Factorization meets the neighborhood: a multifaceted collaborative filtering model</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Koren</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">KDD &apos;08: Proceeding of the 14th ACM SIGKDD international conference on Knowledge discovery and data mining</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2008" />
			<biblScope unit="page" from="426" to="434" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Collaborative filtering with temporal dynamics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Koren</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">KDD &apos;09: Proceedings of the 15th ACM SIGKDD international conference on Knowledge discovery and data mining</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="447" to="456" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Using sequential and non-sequential patterns in predictive web usage mining tasks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Mobasher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Dai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Luo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Nakagawa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICDM &apos;02: Proceedings of the 2002 IEEE International Conference on Data Mining</title>
		<meeting><address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2002" />
			<biblScope unit="page">669</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Mind the gaps: weighting the unknown in large-scale one-class collaborative filtering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Pan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Scholz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">KDD &apos;09: Proceedings of the 15th ACM SIGKDD international conference on Knowledge discovery and data mining</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="667" to="676" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">BPR: Bayesian personalized ranking from implicit feedback</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Rendle</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Freudenthaler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Gantner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Schmidt-Thieme</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 25th Conference on Uncertainty in Artificial Intelligence</title>
		<meeting>the 25th Conference on Uncertainty in Artificial Intelligence</meeting>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Pairwise interaction tensor factorization for personalized tag recommendation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Rendle</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Schmidt-Thieme</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Third ACM International Conference on Web Search and Data Mining</title>
		<meeting>the Third ACM International Conference on Web Search and Data Mining</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">An mdp-based recommender system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Shani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Heckerman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">I</forename><surname>Brafman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Machine Learning Research</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="1265" to="1295" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Using temporal data for making recommendations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Zimdars</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">M</forename><surname>Chickering</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Meek</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">UAI &apos;01: Proceedings of the 17th Conference in Uncertainty in Artificial Intelligence</title>
		<meeting><address><addrLine>San Francisco, CA, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Morgan Kaufmann Publishers Inc</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="580" to="588" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
