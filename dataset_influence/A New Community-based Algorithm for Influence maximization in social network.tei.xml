<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 D:\grobid-master\grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.1-SNAPSHOT" ident="GROBID" when="2018-07-16T23:45+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A New Community-based Algorithm for Influence Maximization in Social Network ?</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2013">2013</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jiaguo</forename><surname>Lv</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Information Science and Engineering</orgName>
								<orgName type="institution">Yanshan University</orgName>
								<address>
									<postCode>066000</postCode>
									<settlement>Qinhuangdao</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">School of Information Science and Engineering</orgName>
								<orgName type="institution">Zaozhuang University</orgName>
								<address>
									<postCode>277100</postCode>
									<settlement>Zaozhuang</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jingfeng</forename><surname>Guo</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Information Science and Engineering</orgName>
								<orgName type="institution">Yanshan University</orgName>
								<address>
									<postCode>066000</postCode>
									<settlement>Qinhuangdao</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Huixiao</forename><surname>Ren</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Information Science and Engineering</orgName>
								<orgName type="institution">Yanshan University</orgName>
								<address>
									<postCode>066000</postCode>
									<settlement>Qinhuangdao</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">A New Community-based Algorithm for Influence Maximization in Social Network ?</title>
					</analytic>
					<monogr>
						<title level="j" type="main">Journal of Computational Information Systems</title>
						<imprint>
							<biblScope unit="volume">9</biblScope>
							<biblScope unit="page" from="5659" to="5666"/>
							<date type="published" when="2013">2013</date>
						</imprint>
					</monogr>
					<note>Available at</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Cooperation Game</term>
					<term>Influence Maximization</term>
					<term>Shapley Value</term>
					<term>CGINA</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Influence maximization is a fundamental issue to find a set of key individuals in social network such that targeting them initially will maximize the spread of influence. However, the problem of finding the most key nodes is NP-hard. It is shown that a greedy algorithm with provable approximation guarantees can give good approximation. However, it is too computationally expensive to apply in a large social network. Based on the community structure of social network, a cooperative game theoretic algorithm (CGINA) to find key nodes is proposed. In CGINA, we first detect the community structure of the social network with the topological structure and information diffusion model. Then, we will find key nodes in communities. Different from other literature, we think of the information diffusion in the whole network as a cooperative game with transferable utility. The communities of the network happen to be the players in the game. With the Shapley value in game theory, we allocate the number of key nodes for each community. In my view, the key nodes include two parts. One is composed of &quot;bridge&quot; nodes, which are easy to propagate information across communities, the other is composed of &quot;influential&quot; nodes, which can diffuse information quickly in its own community. Empirical studies on a large social network show that our algorithm is efficient and powerful.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Kempel et al. establishes the optimization of influence maximization is NP-hard <ref type="bibr" target="#b0">[1]</ref>. They use the greedy algorithm and prove that the optimal solution can be approximated to with a factor (1-1/e-¦Å). Chen et al. <ref type="bibr" target="#b1">[2]</ref> propose an improved version of greedy called NewGreedy. It takes the first round with NewGreedy algorithm and the rest rounds using CELF Greedy algorithm <ref type="bibr" target="#b2">[3]</ref>, called MixedGreedy, which is shown to be more efficient than other Greedy algorithms <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b1">2]</ref>. However, when a large network with millions of nodes needs to deal with, all these algorithms are incapable. Based on the community structure, Wang et al <ref type="bibr" target="#b3">[4]</ref> propose a community-based greedy algorithm (CGA), which is applicable to the large network with millions of nodes. Similar to CGA, based on the community structure of the network, CGINA is proposed in this paper. Different from CGA, with the community structure of the network, we think of the information diffusion in the network as a cooperative game between the communities. With the Shapley value, we propose a novel algorithm. Experiments show that our algorithm is powerful and effective in the large social network.</p><p>The paper is organized as follows. Section 2 describes the related work. Next we describe the community detection algorithm based on influential model in section 3. In section 4, we describe the CGINA algorithm for the top-k nodes problem. We report a performance evaluation in section 5. Finally, we offer conclusions and research directions in section 6.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Work</head><p>In this paper, we focus on the problem that how we can find the key nodes in information propagation based on the community structure.</p><p>Domingos and Richardson <ref type="bibr" target="#b6">[7]</ref> are the first to study the influence maximization as an algorithm problem and propose a probabilistic solution. Chen et al. <ref type="bibr" target="#b1">[2]</ref> present a degree discount heuristic algorithm called DegreeDiscount that runs faster than MixedGreedy. Scripps et al <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b8">9]</ref> present a metric to estimate the number of communities to which a node is attached and define communitybased roles for a node. They also briefly discuss the application of community-based roles for a node. As mentioned before, these approaches are incapable of dealing with the large social network.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Community Detection</head><p>Community structure is the intrinsic property of social network. In this paper, we will make use of the detected communities to estimate the influence of nodes in the whole network. So, we want to detect the communities based on the influences between nodes in the information diffusion, rather than only on the topological structure, such that the influence of nodes in a community is close to that in the whole network. The algorithm we adopt is in <ref type="bibr" target="#b3">[4]</ref>. The main idea of the algorithm is as follows:</p><p>The community detection algorithm includes two steps, partition and combination.</p><p>(1) Partition. The algorithm is extended from the algorithm <ref type="bibr" target="#b4">[5]</ref> with the information influence mechanism based on Independent Cascade model (ICM).</p><p>(2) Combination. The generated communities in a social network by step partition are small and dispersed; Combination is developed to combine these communities to get a better result.</p><p>The detailed algorithm can be seen in algorithm 2 in <ref type="bibr" target="#b3">[4]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Key Nodes Discovering</head><p>In this section, we first present the preliminaries about cooperative game theory and Shapley value, and then we will propos algorithm CGINA to find key nodes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Cooperative game and Shapley value</head><p>A cooperative game with transferable utility(TU game) <ref type="bibr" target="#b5">[6]</ref> is defined as the pair <ref type="figure">(N,v)</ref>, where N={1,2,. . . ,n} is the set of players and v::2 N ¡ú R is a real-valued mapping with v(?)=0. 2 N is the set of all possible subsets of N. v is called the characteristic function. Given S ? N, v(S) is called the value of the coalition S and represents the total transferable utility that can get by the players in S, without help from the players in N \S.</p><p>Shapley value provides a unique expected payoff allocation for a given coalition game. For a given TU game (N,v), its Shapley value is</p><formula xml:id="formula_0">¦Õ(N,v)=(¦Õ 1 (N,v), ¦Õ 2 (N,v),. . . , ¦Õ n (N,v)). ¦Õ i (N,v)</formula><p>denotes the Shapley value of player i , mathematically, it is given by,</p><formula xml:id="formula_1">¡Æ ¦Õ i (N, v) = |C|!(n ? |C| ? 1)! n! (v(C ¡È {i}) ? v(C))<label>(1)</label></formula><p>C?N \{i}</p><p>Given i¡Ê N, C ? N and i / ¡Ê C, the marginal contribution of node i to the coalition C is defined as v(C¡È{i})-v(C), ?C?N\{i}. Now, consider the set ? of all possible n! permutations on N. Let ¦Ð be a permutation in ?, C i (¦Ð) is defined as the set of all nodes appearing before i in ¦Ð. The average marginal contribution of i to the given game as,</p><formula xml:id="formula_2">¡Æ ¦Õ i (N, v) = 1 n! (v(C i (¦Ð) ¡È {i}) ? v(C i (¦Ð))) (2) ¦Ð¡Ê?</formula><p>It is easy to see that the computational complexity of this approach is O((n/e) n ). So, when the number of players is very large, it is not tractable to compute the Shapley values of the players directed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">The CGINA algorithm to find key nodes</head><p>As discussed above, key nodes play a more important role in information diffusion than others. As for the information diffusion based on community structure, there are two kinds of key nodes in information diffusion, one is called "bridge" node, which connects other communities closely, and is easy to propagate information across communities, the other is called "influential" node, which is in the core of its community and can spread information quickly within its community.The main idea of algorithm CGINA is as follows. Firstly, with the communities as players, we construct the TU game, and compute the Shapley value for each community. The number of key nodes to be mined will be allocated to each community according to its Shapley value.Secondly, according to the pre-specified factor l, for each community C i , we get the number of bridge nodes KBN i and the number of influential nodes KIN i . Finaly,we mine bridge nodes and influential nodes in each community.</p><p>(1) Definition of information diffusion cooperative game.</p><p>Similar to the SPIN in <ref type="bibr" target="#b5">[6]</ref>, our idea is to find the influential communities with more marginal contribution to the diffusion process.The information diffusion cooperative game is defined as follows. Let N be the set of communities in the network. For the character function, we think that the contribution of every community is determined by its number of nodes and weight density. The former denotes the maximum range of the diffusion, and the later is to evaluate the difficulty of the diffusion in it. For each S?N,</p><formula xml:id="formula_3">v(S) = wd s * |N s |<label>(3)</label></formula><p>In <ref type="formula" target="#formula_3">(3)</ref>, wd s and N s are the weight density and node set of coalition S respectively. For the sake of simplicity, in a coalition of some communities, we may ignore the influence among these communities and sum all contributions of these communities. So, we have,</p><formula xml:id="formula_4">¡Æ v(S) = (wd i * |N i |)<label>(4)</label></formula><formula xml:id="formula_5">C i ¡ÊS</formula><p>In (4), wd i and N i denote the weight density and node set of community C i respectively. The weight density of community C i is defined as,</p><formula xml:id="formula_6">¡Æ wd i = ( e.weight)/P 2 N i<label>(5)</label></formula><p>e¡ÊE i</p><p>In (5), E i is the edge set of community C i , denotes the maximal number of directed edges between N i nodes. As described above, we ignore the influence among these communities and sum all contributions of these communities together. So, in (2), for each ¦Ð in ?, the item is same. So, we have,</p><formula xml:id="formula_7">¦Õ i (N, v) = v(C i )<label>(6)</label></formula><p>(2) key nodes allocated to the community.</p><p>The Shapley value of each community represents its contribution to the diffusion process. So, we allocate each community's number of key nodes based on its Shapley value. The number of key nodes to discover within community C i is defined below,</p><formula xml:id="formula_8">|C| ¡Æ KN i = k * ¦Õ i (N, v)/ ¦Õ i (N, v) (7) i=1</formula><p>The key nodes in a community are composed of bridge nodes and influential nodes. The main idea of discovering bridge nodes is as follows. Let E is the edge sets of G, EC is the edge set of the edge in each community, and EB is the set of the edge across different communities, EB=E-EC. Then, for each C i , from EB, we can get all out nodes and out edges. Out node is the node which is in the community C i and has one or more edges to other communities. Now, we define a property "bridge weight" for every out node in C i , which presents the importance of the node to diffuse information to other communities. The property is determined by two factors, one is the weight of the out edge, and the other is the Shapley value of the community where the edge goes to. So, the bridge weight of the out node v is defined as follows.</p><formula xml:id="formula_9">¡Æ v.bweight = (e.weight * ¦Õ e.to.cLabel (N, v))<label>(8)</label></formula><p>e.f rom=v,e¡ÊEC</p><p>In <ref type="formula" target="#formula_9">(8)</ref>, e.from and e.to are the source and destination node of e, cLabel identifies the node's community. For all the out nodes in C i , if the number of out nodes in C i is greater than KBN i , then we will choose the top KBN i out nodes with the maximum bridge weight as the bridge nodes, else we will choose all out nodes as the bridge nodes.</p><p>(4) Influential nodes discovering.</p><p>For the influential nodes discovering in community, in theory, we can employee any existing algorithm. In this paper, we use the MixedGreedy algorithm in <ref type="bibr" target="#b1">[2]</ref>. CGINA is outlined in algorithm 1. The main procedure of CGINA is as follows:</p><p>Firstly, it computes the Shapley value for each community (lines 1-5), and it takes O(|C|) times, where |C| is the number of communities. Secondly, it computes the number of key nodes for each community (line 6), and it takes O(|C|) times. In lines 7-11, it initializes and computes the bridge weight property of each out node, and it takes O(|EB|) times. In lines 12-17, it finds all bridge nodes, it takes O(|C|) times. Finally, in lines 18-23, it discovers all the influential nodes in each community.</p><p>Since the computation of influenced set is within the community rather than the whole network, by algorithm MixedGreedy, the complexity is very low. For all communities, supposing that the Maximized time to find influential nodes in a community is h, then it will take O(h*|C|). So, the total worst-case complexity of CGINA is O(|C|+|C|*h+|EB|).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Experiment</head><p>In this section, we evaluate the effectiveness and efficiency of CGINA algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Experimental setup</head><p>By the benchmarks developed in <ref type="bibr" target="#b9">[10]</ref>, we get the experimental data set, which has 10,000 nodes and 1498772 edges. The average degree of the graph is 13.4. After community detecting, we get 52 communities. The biggest has 23215 nodes, and the smallest one has 107 nodes. In experiments, similar to <ref type="bibr" target="#b3">[4]</ref>, we take MixedGreedy <ref type="bibr" target="#b1">[2]</ref> as the benchmark to evaluate the algorithm CGINA. The parameters for the algorithm are heuristic factor l, the number of key nodes K. Same to the previous work in influence maximization, two metrics are employed to evaluate CGINA, namely influence degree and runtime. As defined in <ref type="bibr" target="#b3">[4]</ref>, the influence degree of set A is computed as: R(A)=V A /|N|,where V A is the number of nodes influenced by A in information diffusion.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Experimental result</head><p>In this subsection, we will show the changing of the experimental result varies with the parameters.</p><p>(1) Varying of the heuristic factor l To evaluate the effect of the parameter l on the influence degree, we run CGINA in the whole network and we set k at 30. The results are shown in <ref type="figure" target="#fig_0">Fig. 1</ref>. The heuristic factor l indicates the proportion of the number of bridge nodes in the total key nodes. As shown in <ref type="figure" target="#fig_0">Fig. 1</ref>, with the growth of l, the influence degree increases firstly, then decreases gradually. In a community, there is a proper ratio for the number of bridge nodes. When l is greater then the value, the total influence degree decreases quickly. As shown in <ref type="figure" target="#fig_0">Fig. 1</ref>, with the increasing of l, the running time decreases gradually. But when the value of l is 0, the running time decrease rapidly. As shown in section 4, the discovery of key nodes is divided into two parts, namely influential nodes discovering and bridge nodes discovering. According to the complexity analysis in section 4, we know that the complexity of influential nodes' discovering is more time-consumed than the other. So, when we set l at 0 ,the running time is decreased rapidly.</p><p>(2) Varying of the size of key nodes K To evaluate the effect of the parameter K, we run CGINA in the whole network and we set l at 0.2. The results are shown in <ref type="figure" target="#fig_2">Fig. 2</ref>. In <ref type="figure" target="#fig_2">Fig. 2</ref>, we can see that the influence degree of MixedGreedy is the best of these three algorithms. The influence degree of CGA is slightly better than CGINA . As for the running time, the efficiency of MixedGreedy is the worst in these algorithms. With the growth of K, the running time of MixedGreedy increases quickly. Since the discovering of key nodes in CGA and CGINA is within the community, the efficiency of these two algorithms is much stronger than MixedGreedy. <ref type="figure" target="#fig_2">From Fig. 2</ref>, we can see the efficiency of CGINA is slightly stronger than CGA.</p><p>(3) Scalability with the network size N To evaluate the scalability of CGINA and other algorithms, in experiment, we set K at 30, and l is 0.2. In this experiment, we vary size of N from 10k to 100k. In the experiment, we randomly choose nodes with pre-specified size from the original network. The experimental results are shown in <ref type="figure" target="#fig_3">Fig. 3</ref>. It is shown that the influence degree of these algorithms is relative stable in these three algorithms. As for the running time, we can see that the running time of CGA and CGINA are relative stable, but when the size of the network is greater than some value, the running time of MixedGreedy increases quickly. So, CGINA and CGA are very applicable to those large networks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusion</head><p>We propose a novel community-based algorithm CGINA to mine the key nodes for information diffusion in social network. Different from other algorithms, we think of the information diffusion in the whole network as a TU game. With the Shapley value, we get the number of key nodes to mine in each community. The discovering of key nodes are divided into bridge nodes mining and influential nodes mining. In the former , we employee the bridge weight to indicate the importance of every out node. In the latter, we employee MixedGreedy to discover the influential nodes within a community. Empirical results show that CGINA is effective and efficiency. There are some interesting directions for further work. The main issue is as follows. How to determine a proper value of heuristic factor? Is it appropriate to estimate the difficulty of information diffusion in a community with its weight density? How to compute the Shape value for every community more quickly?</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Algorithm 1 .</head><label>1</label><figDesc>CGINA Input: network G and its community structure C, l, k Output: the key node set topknodes 1: SSP=0 //to save the sum of all Shapley values for all communities 2: for each ac in C 3: {SP[ac]=v[ac] //SP is used to store the Shapley value of every community 4: SSP=SSP+SP[ac] 5: CON[ac]=0 //to store the number of out nodes in every community} 6: for each ac in C {KN[ac]=SP[ac]/SSP} 7 :for each edge ae in EB { 8: e.from.bweight=0 9: CON[e.from.cLabel]=CON[e.from.cLabel]+1} 10:for each edge ae in EB 11: {e.from.bweight=e.from.bweight+e.weight*SP[e.to.cLabel]} 12:for each ac in C 13: {if CON[ac] ¡Ý KN[ac]*l 14: then {choose the top KN[ac]*l out nodes with the maximum bweight into topknodes 15: KIN[ac]=KN[ac]-KN[ac]*l} 16: else { choose all out nodes into topknodes 17: KIN[ac]=KN[ac]-CON[ac]}} 18:for each ac in C { 19: RC={} 20: for i=1 to KIN[ac] { 21: vmax=argmax(influencedset(RC ¡È v i })-influencedset(RC)) 22: RC=RC ¡È {vmax}} 23: topknodes=topknodes ¡È RC} (5) Complexity of algorithm CGINA.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 1 :</head><label>1</label><figDesc>Fig. 1: Varying the size of heuristic factor l</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 2 :</head><label>2</label><figDesc>Fig. 2: Varying the size of result set K</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 3 :</head><label>3</label><figDesc>Fig. 3: Varying the size of network size N</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>KBN i =[l*KN i ], and the number of influential nodes KIN i =KN i -KBN i .</head><label></label><figDesc></figDesc><table>The proportion 
of bridge nodes in key nodes varies with different communities. For the sake of simplicity, we 
introduce a parameter l to indicate the proportion. So, the number of bridge nodes in community 
C i (3) Bridge nodes discovering. 

</table></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Maximizing the spread of influence through a social network</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Kempel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kleinberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Tardos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIGKDD&apos;03</title>
		<meeting>ACM SIGKDD&apos;03</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="127" to="136" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Efficient influence maximization in social networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Yang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIGKDD&apos;09</title>
		<meeting>ACM SIGKDD&apos;09</meeting>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="199" to="208" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Cost-effective outbreak detection in networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Leskovec</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Krause</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Guestrin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Faloustos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Vanbriesen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">S</forename><surname>Glance</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIGKDD&apos;07</title>
		<meeting>ACM SIGKDD&apos;07</meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="420" to="429" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Community-based Greedy Algorithm for Mining Top-K Influential Nodes in Mobile Social Networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yu</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gao</forename><surname>Cong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Guojie</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kunqing</forename><surname>Xie</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIGKDD&apos;10</title>
		<meeting>ACM SIGKDD&apos;10</meeting>
		<imprint>
			<date type="published" when="2010" />
			<biblScope unit="page" from="1039" to="1048" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Near linear time algorithm to detect community structure in large scale-free networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><forename type="middle">N</forename><surname>Raghavan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Albert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kumara</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physical Review E</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A Shapley Value Based Approach to Discover Influential Nodes in Social Networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Narayanam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Narahari</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Automation Science and Engineering</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="130" to="147" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Mining the network value of customers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Domingos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Richardson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIGKDD&apos;01</title>
		<meeting>ACM SIGKDD&apos;01</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="57" to="66" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Exploration of link structure and community-based node roles in network analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Scripps</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">N</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">H</forename><surname>Esfahanian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ICDM&apos;07</title>
		<meeting>ICDM&apos;07</meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="649" to="654" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Node roles and community structure in network</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Scripps</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">N</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">H</forename><surname>Esfahanian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc.WebKDD/SNA-KDD&apos;07</title>
		<meeting>.WebKDD/SNA-KDD&apos;07</meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="26" to="35" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">enchmark graphs for testing community detection algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Lancichinetti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Fortunato</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Radicchi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physical Review E</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Scalable community discovery based on threshold random walk</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Fu</forename><surname>Xianghua</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wang</forename><surname>Chao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wang</forename><surname>Zhiqiang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ming</forename><surname>Zhong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational Information Systems</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="8953" to="8960" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
