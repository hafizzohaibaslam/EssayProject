<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 D:\grobid-master\grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.1-SNAPSHOT" ident="GROBID" when="2018-07-16T23:50+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">COMPUTING AND ESTIMATING THE RATE OF CONVERGENCE</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jonathan</forename><forename type="middle">R</forename><surname>Senning</surname></persName>
						</author>
						<title level="a" type="main">COMPUTING AND ESTIMATING THE RATE OF CONVERGENCE</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<note type="submission">Date: February 2007. Revised February 2015.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>Introduces the definition of rate of convergence for sequences and applies this to fixed-point root-finding iterative methods. Concludes with the development of a formula to estimate the rate of convergence for these methods when the actual root is not known. 1. Rate of Convergence Definition 1. If a sequence x 1 , x 2 ,. .. , x n converges to a value r and if there exist real numbers ¦Ë &gt; 0 and ¦Á ¡Ý 1 such that (1) lim n¡ú¡Þ |x n+1 ? r| |x n ? r| ¦Á = ¦Ë then we say that ¦Á is the rate of convergence of the sequence. When ¦Á = 1 we say the sequence converges linearly and when ¦Á = 2 we say the sequence converges quadratically. If 1 &lt; ¦Á &lt; 2 then the sequence exhibits superlinear convergence. 2. Fixed-Point Iterations Many root-finding methods are fixed-point iterations. These iterations have this name because the desired root r is a fixed-point of a function g(x), i.e., g(r) ¡ú r. To be useful for finding roots, a fixed-point iteration should have the property that for x in some neighborhood of r, g(x) is closer to r than x is, leading to the iteration x n+1 = g(x n). Newton&apos;s method is an example of a fixed-point iteration since (2) x n+1 = g(x n), g(x) = x ? f (x) f (x) Theorem 1. Let r be a fixed-point of the iteration x n+1 = g(x n) and suppose that g (r) = 0. Then the iteration will have a linear rate of convergence. Proof. Using Taylor&apos;s Theorem for an expansion about fixed-point r we find (3) g(x) = g(r) + g (r)(x ? r) + g (¦Î) 2 2 (x ? r) where ¦Î is some value between x and r. Evaluating at x n and noting that x n+1 = g(x n) and g(r) = r we obtain x n+1 = r + g (r)(x n ? r) + g (¦Î) 2 (x n ? r) 2 .</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Rate of Convergence</head><p>Definition 1. If a sequence x 1 , x 2 , . . . , x n converges to a value r and if there exist real numbers ¦Ë &gt; 0 and ¦Á ¡Ý 1 such that (1) lim</p><formula xml:id="formula_0">n¡ú¡Þ |x n+1 ? r| |x n ? r| ¦Á = ¦Ë</formula><p>then we say that ¦Á is the rate of convergence of the sequence.</p><p>When ¦Á = 1 we say the sequence converges linearly and when ¦Á = 2 we say the sequence converges quadratically. If 1 &lt; ¦Á &lt; 2 then the sequence exhibits superlinear convergence.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Fixed-Point Iterations</head><p>Many root-finding methods are fixed-point iterations. These iterations have this name because the desired root r is a fixed-point of a function g(x), i.e., g(r) ¡ú r. To be useful for finding roots, a fixed-point iteration should have the property that for x in some neighborhood of r, g(x) is closer to r than x is, leading to the iteration</p><formula xml:id="formula_1">x n+1 = g(x n ).</formula><p>Newton's method is an example of a fixed-point iteration since</p><formula xml:id="formula_2">(2) x n+1 = g(x n ), g(x) = x ? f (x) f (x)</formula><p>Theorem 1. Let r be a fixed-point of the iteration x n+1 = g(x n ) and suppose that g (r) = 0. Then the iteration will have a linear rate of convergence.</p><p>Proof. Using Taylor's Theorem for an expansion about fixed-point r we find</p><formula xml:id="formula_3">(3) g(x) = g(r) + g (r)(x ? r) + g (¦Î) 2 2 (x ? r)</formula><p>where ¦Î is some value between x and r. Evaluating at x n and noting that x n+1 = g(x n ) and g(r) = r we obtain</p><formula xml:id="formula_4">x n+1 = r + g (r)(x n ? r) + g (¦Î)</formula><p>Subtracting r from both sides and dividing by x n ? r gives</p><formula xml:id="formula_5">x n+1 ? r x n ? r = g (r) + g (¦Î) 2 (x n ? r)</formula><p>which, as n ¡ú ¡Þ, yields</p><formula xml:id="formula_6">(4) lim n¡ú¡Þ |x n+1 ? r| |x n ? r| = |g (r)|.</formula><p>Comparing this with Equation <ref type="formula">(1)</ref> we see that ¦Á = 1 and ¦Ë = |g (r)|, indicating that the method converges linearly.</p><p>Next, consider the case when g (r) = 0. This is important because it explains why Newton's method converges so quickly (when it converges at all).</p><p>Theorem 2. Let r be a fixed-point of the iteration x n+1 = g(x n ) and suppose that g (r) = 0 but g (r) = 0. Then the iteration will have a quadratic rate of convergence.</p><p>Proof. Using Taylor's Theorem once again, but including one more term, we have</p><formula xml:id="formula_7">g(x) = g(r) + g (r)(x ? r) + g (r) 2 (x ? r) 2 + g (¦Î) 6 (x ? r) 3 .</formula><p>As before, we substitute x n for x and use the facts that x n+1 = g(x n ), g(r) = r, and g (r) = 0 to obtain</p><formula xml:id="formula_8">x n+1 = r + g<label>(r)</label></formula><p>2</p><formula xml:id="formula_9">(x n ? r) 2 + g<label>(¦Î)</label></formula><p>6 (x n ? r) 3 .</p><p>Subtracting r from both sides and dividing by (x n ? r) 2 gives</p><formula xml:id="formula_10">x n+1 ? r (x n ? r) 2 = g (r) 2 + g (¦Î) 6 (x n ? r)</formula><p>which, as n ¡ú ¡Þ, gives</p><formula xml:id="formula_11">(5) lim |g (r)| n¡ú¡Þ |x n+1 ? r| |x n ? r| 2 = 2 .</formula><p>Observe that ¦Á = 2, which shows the iteration will converge quadratically.</p><p>In most instances this situation applies to Newton's method. Computing g (x) from (2) we have</p><formula xml:id="formula_12">g (x) = 1 ? f (x)f (x) ? f (x)f (x) [f (x)] 2 = f (x)f (x) [f (x)] 2 .</formula><p>When this is evaluated at r, we find that g (r) = 0 because f (r) = 0, provided f (r) = 0, and so we expect Newton's method will converge quadratically. It is possible to show that when f (r) = 0 lim x¡úr g (x) = 1 2 so Newton's method exhibits only linear convergence.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Estimating the Rate of Convergence</head><p>It is convenient to define the error after n steps of an iterative root-finding algorithm as e n = x n ? r. As n ¡ú ¡Þ we see from Equation (1) that |e n+1 | ¡Ö ¦Ë|e n | ¦Á and |e n | ¡Ö ¦Ë|e n?1 | ¦Á and so</p><formula xml:id="formula_13">|e n+1 | |e n | ¡Ö ¦Ë|e n | ¦Á ¦Á ¦Ë|e n?1 | ¦Á ¡Ö e n e n?1 . Solving for ¦Á yields (6) ¦Á ¡Ö log |e n+1 /e n | log |e n /e n?1 | = log |(x n+1 ? r)/(x n ? r)| log |(x n ? r)/(x n?1 ? r)| .</formula><p>To make use of this formula we need to know the ratios of consecutive errors. While we cannot compute these ratios exactly (since we do not know the exact value of the root r), we can approximate them with ratios of the differences of consecutive estimates of the root. To see this, first substitute x n and x n?1 into Equation <ref type="formula">(3)</ref> to obtain the two expansions</p><formula xml:id="formula_14">x n+1 = r + g (r)(x n ? r) + g (¦Î 1 ) 2 2 (x n ? r) (7) x n = r + g (r)(x n?1 ? r) + g (¦Î 2 ) 2 (x n?1 ? r) 2 . (8)</formula><p>Subtracting <ref type="formula">(8)</ref> from <ref type="formula">(7)</ref>, dividing by (x n ? x n?1 ), and taking the limit as n ¡ú ¡Þ we have</p><formula xml:id="formula_15">2 2 lim (r) + g (¦Î 1 ) (x n ? r) (x n?1 ? r) n¡ú¡Þ x n+1 ? x n x n ? x n?1 = lim n¡ú¡Þ g 2 x n ? x n?1 ? g (¦Î 2 ) 2 x n ? x n?1 = |g (r)|</formula><p>since both (x n ? r) 2 and (x n?1 ? r) 2 go to zero more quickly than x n ? x n?1 as the sequence {x n } converges to r. Comparing this result with Equation (4) we conclude, for suitably large values of n, that e n+1 e n = x n+1 ? r x n ? r ¡Ö x n+1 ? x n x n ? x n?1 which allows us to approximate ¦Á with <ref type="formula">(9)</ref> ¦Á ¡Ö log |(x n+1 ? x n )/(x n ? x n?1 )| log |(x n ? x n?1 )/(x n?1 ? x n?2 )| .</p><p>Even though this only gives an estimate of ¦Á, we note that in practice it agrees well with the theoretical convergence rates of bisection and Newton's method and gives us a good measure of the efficiency of various forms of fixed-point algorithm.</p></div>
			<note place="foot">(x n ? r)</note>
		</body>
		<back>
			<div type="references">

				<listBibl/>
			</div>
		</back>
	</text>
</TEI>
