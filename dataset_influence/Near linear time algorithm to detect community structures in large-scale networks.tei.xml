<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 D:\grobid-master\grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.1-SNAPSHOT" ident="GROBID" when="2018-07-17T00:01+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Near linear time algorithm to detect community structures in large-scale networks</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Usha</forename><forename type="middle">Nandini</forename><surname>Raghavan</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Industrial Engineering</orgName>
								<orgName type="institution">The Pennsylvania State University</orgName>
								<address>
									<postCode>16802</postCode>
									<settlement>University Park</settlement>
									<region>Pennsylvania</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Department of Physics</orgName>
								<orgName type="institution">The Pennsylvania State University</orgName>
								<address>
									<postCode>16802</postCode>
									<settlement>University Park</settlement>
									<region>Pennsylvania</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R¨¦ka</forename><surname>Albert</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Industrial Engineering</orgName>
								<orgName type="institution">The Pennsylvania State University</orgName>
								<address>
									<postCode>16802</postCode>
									<settlement>University Park</settlement>
									<region>Pennsylvania</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Soundar</forename><surname>Kumara</surname></persName>
						</author>
						<title level="a" type="main">Near linear time algorithm to detect community structures in large-scale networks</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>numbers: 8975Fb</term>
					<term>8975Hc</term>
					<term>8723Ge</term>
					<term>0210Ox</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Community detection and analysis is an important methodology for understanding the organization of various real-world networks and has applications in problems as diverse as consensus formation in social communities or the identification of functional modules in biochemical networks. Currently used algorithms that identify the community structures in large-scale real-world networks require a priori information such as the number and sizes of communities or are computationally expensive. In this paper we investigate a simple label propagation algorithm that uses the network structure alone as its guide and requires neither optimization of a pre-defined objective function nor prior information about the communities. In our algorithm every node is initialized with a unique label and at every step each node adopts the label that most of its neighbors currently have. In this iterative process densely connected groups of nodes form a consensus on a unique label to form communities. We validate the algorithm by applying it to networks whose community structures are known. We also demonstrate that the algorithm takes an almost linear time and hence it is computationally less expensive than what was possible so far.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. DEFINITIONS AND PREVIOUS WORK</head><p>As mentioned earlier, there is no unique definition of a community. One of the simplest definitions of a community is a clique, that is, a group of nodes where there is an edge between every pair of nodes. Cliques capture the intuitive notion of a community <ref type="bibr" target="#b5">[6]</ref> where every node is related to every other node and hence have strong similarities with each other. An extension of this definition was used by Palla et al in <ref type="bibr" target="#b13">[14]</ref>, who define a community as a chain of adjacent cliques. They define two k-cliques (cliques on k nodes) to be adjacent if they share k ? 1 nodes. These definitions are strict in the sense that the absence of even one edge implies that a clique (and hence the community) no longer exists. k-clans and k-clubs are a more relaxed definitions while still maintaining a high density of edges within communities <ref type="bibr" target="#b13">[14]</ref>. A group of nodes is said to form a k-clan if the shortest path length between any pair of nodes, or the diameter of the group, is at most k. Here the shortest path only uses the nodes within the group. A k-club is defined similarly, except that the subnetwork induced by the group of nodes is a maximal subgraph of diameter k in the network.</p><p>Definitions based on degrees (number of edges) of nodes within the group relative to their degrees outside the group were given by Radicchi et al <ref type="bibr" target="#b14">[15]</ref>. If d are the degrees of node i within and outside of its group U , then U is said to form a strong community if d</p><formula xml:id="formula_0">in i &gt; d out i , ?i ¡Ê U . If i¡ÊU d in i &gt; i¡ÊU d out i</formula><p>, then U is a community in the weak sense. Other definitions based on degrees of nodes can be found in <ref type="bibr" target="#b5">[6]</ref>.</p><p>There can exist many different partitions of nodes in the network that satisfy a given definition of community. In most cases <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b21">22,</ref><ref type="bibr" target="#b25">26,</ref><ref type="bibr" target="#b26">27,</ref><ref type="bibr" target="#b27">28]</ref>, the groups of nodes found by a community detection algorithm are assumed to be communities irrespective of whether they satisfy a specific definition or not. To find the best community structures among them we need a measure that can quantify the strength of a community obtained. One of the ways to measure the strength of a community is by comparing the density of edges observed within the community with the density of edges in the network as a whole <ref type="bibr" target="#b5">[6]</ref>. If the number of edges observed within a community U is e U , then under the assumption that the edges in the network are uniformly distributed among pairs of nodes, we can calculate the probability P that the expected number of edges within U is larger than e U . If P is small, then the observed density in the community is greater than the expected value. A similar definition was recently adopted by Newman <ref type="bibr" target="#b12">[13]</ref>, where the comparison is between the observed density of edges within communities and the expected density of edges within the same communities in randomized networks that nevertheless maintain every node's degree. This was termed the modularity measure Q, where</p><formula xml:id="formula_1">Q = i (e ii ? a 2 i ), ?i.</formula><p>e ii is the observed fraction of edges within group i and a 2 i is the expected fraction of edges within the same group i. Note that if e ij is the fraction of edges in the network that run between group i and group j, then a i = j e ij . Q = 0 implies that the density of edges within groups in a given partition is no more than what would be expected by a random chance. Q closer to 1 indicates stronger community structures.</p><p>Given a network with n nodes and m edges N (n, m), any community detection algorithm finds subgroups of nodes. Let C 1 , C 2 , ..., C p be the communities found. In most algorithms, the communities found satisfy the following constraints 1. C i ¡É C j = ? for i = j and 2.</p><p>i C i spans the node set in N A notable exception is Palla et al <ref type="bibr" target="#b13">[14]</ref> who define communities as a chain of adjacent k-cliques and allow community overlaps. It takes exponential time to find all such communities in the network. They use these sets to study the overlapping structure of communities in social and biological networks. By forming another network where a community is represented by a node and edges between nodes indicate the presence of overlap, they show that such networks are also heterogeneous (fat-tailed) in their node degree distributions. Furthermore, if a community has overlapping regions with two other communities, then the neighboring communities are also highly likely to overlap.</p><p>The number of different partitions of a network N (n, m) into just two disjoint subsets is 2 n and increases exponentially with n. Hence we need a quick way to find only relevant partitions. Girvan and Newman <ref type="bibr" target="#b4">[5]</ref> proposed a divisive algorithm based on the concept of edge betweenness centrality , that is, the number of shortest paths among all pairs of nodes in the network passing through that edge. The main idea here is that edges that run between communities have high betweenness values than those that lie within communities. By successively recalculating and removing edges with highest betweenness values, the network breaks down into disjoint connected components. The algorithm continues until all edges are removed from the network. Each step of the algorithm takes O(mn) time and since there are m edges to be removed, the worst case running time is O(m 2 n). As the algorithm proceeds one can construct a dendrogram (see <ref type="figure" target="#fig_1">figure 1</ref>) depicting the breaking down of the network into disjoint connected components. Hence for any given h such that 1 ¡Ü h ¡Ü n, at most one partition of the network into h disjoint subgroups is found. All such partitions in the dendrogram are depicted, irrespective of whether or not the subgroups in each partition represent a community. Radicchi et al <ref type="bibr" target="#b14">[15]</ref> propose another divisive algorithm where the dendrograms are modified to reflect only those groups that satisfy a specific definition of a community. Further, instead of edge betweenness centrality, they use a local measure called edge clustering coefficient as a criterion for removing edges. The edge clustering coefficient is defined as the fraction of number of triangles a given edge participates in, to the total number of possible such triangles. The clustering coefficient of an edge is expected to be the least for those running between communities and hence the algorithm proceeds by removing edges with low clustering coefficients. The total running time of this divisive algorithm is O( m 4 n 2 ). Similarly one can also define a topological similarity between nodes and perform an agglomerative hierarchical clustering <ref type="bibr" target="#b22">[23,</ref><ref type="bibr" target="#b28">29]</ref>. In this case, we begin with nodes in n different communities and group together communities that are the most similar. Newman <ref type="bibr" target="#b21">[22]</ref> proposed an amalgamation method (similar to agglomerative methods) using the modularity measure Q, where at each step those two communities are grouped together that give rise to the maximum increase or smallest decrease in Q. This process can also be represented as a dendrogram and one can cut across the dendrogram to find the partition corresponding to the maximum value of Q (see <ref type="figure" target="#fig_1">figure 1</ref>). At each step of the algorithm one compares at most m pairs of groups and requires at most O(n) time to update the Q value. The algorithm continues until all the n nodes are in one group and hence the worst case running time of the algorithm is O(n(m + n)). The algorithm of Clauset et al <ref type="bibr" target="#b29">[30]</ref> is an adaptation of this agglomerative hierarchical method, but uses a clever data structure to store and retrieve information required to update Q. In effect, they reduce the time complexity of the algorithm to O(md log n), where d is the depth of the dendrogram obtained. In networks that have a hierarchical structure with communities at many scales, d ? log n. There have also been other heuristic and simulation based methods that find partitions of a given network maximizing the modularity measure Q <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b23">24]</ref>.</p><p>Label flooding algorithms have also been used in detecting communities in networks <ref type="bibr" target="#b26">[27,</ref><ref type="bibr" target="#b27">28]</ref>. In <ref type="bibr" target="#b26">[27]</ref>, the authors propose a local community detection method where a node is initialized with a label which then propagates step by step via the neighbors until it reaches the end of the community, where the number of edges proceeding outward from the community drops below a threshold value. After finding the local communities at all nodes in the network, an n ¡Á n matrix is formed, where the ij th entry is 1 if node j belongs to the community started from i and 0 otherwise. The rows of the matrix are then rearranged such that the similar ones are closer to each other. Then, starting from the first row they successively include all the rows into a community until the distance between two successive rows is large and above a threshold value. After this a new community is formed and the process is continued. Forming the rows of the matrix and rearranging them requires O(n 3 ) time and hence the algorithm is time-consuming. Wu and Huberman <ref type="bibr" target="#b25">[26]</ref> propose a linear time (O(m + n)) algorithm that can divide a given network into two communities. Suppose that one can find two nodes (x and y) that belong to two different communities, then they are initialized with values 1 and 0 respectively. All other nodes are initialized with value 0. Then at each step of the algorithm, all nodes (except x and y) update their values as follows. If z 1 , z 2 , ..., z k are neighbors of a node z, then the value V z is updated as</p><formula xml:id="formula_2">Vz 1 +Vz 2 +...+Vz k k</formula><p>. This process continues until convergence. The authors show that the iterative procedure converges to a unique value, and the convergence of the algorithm does not depend on the size n of the network. Once the required convergence is obtained, the values are sorted between 0 and 1. Going through the spectrum of values in descending order, there will be a sudden drop at the border of two communities. This gap is used in identifying the two communities in the network. A similar approach was used by Flake et al <ref type="bibr" target="#b8">[9]</ref> to find the communities in the WWW network. Here, given a small set of nodes (source nodes), they form a network of webpages that are within a bounded distance from the sources. Then by designating (or artificially introducing) sink nodes, they solve for the maximum flow from the sources to the sinks. In doing so one can then find the minimum cut corresponding to the maximum flow. The connected component of the network containing the source nodes after the removal of the cut set is then the required community.</p><p>Spectral bisection methods <ref type="bibr" target="#b24">[25]</ref> have been used extensively to divide a network into two groups so that the number of edges between groups is minimized. Eigenvectors of the Laplacian matrix (L) of a given network are used in the bisection process. It can be shown that L has only real non-negative eigenvalues (0 ¡Ü ¦Ë 1 ¡Ü ¦Ë 2 ¡Ü ... ¡Ü ¦Ë n ) and minimizing the number of edges between groups is same as minimizing the positive linear combination M = i s 2 i ¦Ë i , where s i = u T i z and u i is the eigenvector of L corresponding to ¦Ë i . z is the decision vector whose i th entry can be either 1 or -1 denoting which of the two groups node i belongs to. To minimize M , z is chosen as parallel as possible to the eigenvector corresponding to the second smallest eigenvalue (The smallest eigenvalue is 0 and choosing z parallel to the corresponding eigenvector gives a trivial solution). This bisection method has been extended to finding communities in networks that maximize the modularity measure Q <ref type="bibr" target="#b24">[25]</ref>. Q can be written as a positive linear combination of eigenvalues of the matrix B, where B is defined as difference of the two matrices A and P . A ij is the observed number of edges between nodes i and j and P ij is the expected number of edges between i and j if the edges fall randomly between nodes, while maintaining the degree of each node. Since Q has to be maximized, z is chosen as parallel as possible to the eigenvector corresponding to the largest eigenvalue.</p><p>Since many real-world complex networks are large in size, time efficiency of the community detection algorithm is an important consideration. When no a priori information is available about the likely communities in a given network, finding partitions that optimize a chosen measure of community strength is normally used. Our goal in this paper is to develop a simple time-efficient algorithm that requires no prior information (such as number, sizes or central nodes of the communities) and uses only the network structure to guide the community detection. The proposed mechanism for such an algorithm which does not optimize any specific measure or function is detailed in the following section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. COMMUNITY DETECTION USING LABEL PROPAGATION</head><p>The main idea behind our label propagation algorithm is the following. Suppose that a node x has neighbors x 1 , x 2 , ..., x k and that each neighbor carries a label denoting the community to which they belong to. Then x determines its community based on the labels of its neighbors. We assume that each node in the network chooses to join the community to which the maximum number of its neighbors belong to, with ties broken uniformly randomly. We initialize every node with unique labels and let the labels propagate through the network. As the labels propagate, densely connected groups of nodes quickly reach a consensus on a unique label (see <ref type="figure" target="#fig_2">figure 2)</ref>. When many such dense (consensus) groups are created throughout the network, they continue to expand outwards until it is possible to do so. At the end of the propagation process, nodes having the same labels are grouped together as one community.</p><p>We perform this process iteratively, where at every step, each node updates its label based on the labels of its neighbors. The updating process can either be synchronous or asynchronous. In synchronous updating, node x at the t th iteration updates its label based on the labels of its neighbors at iteration t ? 1. Hence, C x (t) = f (C x1 (t ? 1), ..., C x k (t ? 1)), where c x (t) is the label of node x at time t. The problem however is that subgraphs in the network that are bi-partite or nearly bi-partite in structure lead to oscillations of labels (see <ref type="figure">figure 3</ref>). This is especially true in cases where communities take the form of a star graph. Hence we use asynchronous updating where C x (t) = f (C xi1 (t), ..., C xim (t), C x i(m+1) (t ? 1), ..., C x ik (t ? 1)) and x i1 , ..., x im are neighbors of x that have already been updated in the current iteration while x i(m+1) , ..., x ik are neighbors that are not yet updated in the current iteration. The order in which all the n nodes in the network are updated at each iteration is chosen randomly. Note that while we have n different labels at the beginning of the algorithm, the number of labels reduces over iterations, resulting in only as many unique labels as there are communities.</p><p>Ideally the iterative process should continue until no node in the network changes its label. However, there could be nodes in the network that have an equal maximum number of neighbors in two or more communities. Since we break ties randomly among the possible candidates, the labels on such nodes could change over iterations even if the labels of their neighbors remain constant. Hence we perform the iterative process until every node in the network has a label to which the maximum number of its neighbors belong to. By doing so we obtain a partition of the network into disjoint communities, where every node has at least as many neighbors within its community as it has with any other community. If C 1 , ..., C p are the labels that are currently active in the network and d <ref type="bibr">Cj i</ref> is the number of neighbors node i has with nodes of label C j , then the algorithm is stopped when for every node i,</p><formula xml:id="formula_3">If i has label C m then d Cm i ¡Ý d Cj i ?j</formula><p>At the end of the iterative process nodes with the same label are grouped together as communities. Our stop criterion characterizing the obtained communities is similar (but not identical) to the definition of strong communities proposed by Radicchi et al <ref type="bibr" target="#b14">[15]</ref>. While strong communities require each node to have strictly more neighbors within its community than outside, the communities obtained by the label propagation process require each node to have at least as many neighbors within its community as it has with each of the other communities. We can describe our proposed label propagation algorithm in the following steps.</p><p>1. Initialize the labels at all nodes in the network. For a given node x, C x (0) = x.</p><p>2. Set t = 1.</p><p>3. Arrange the nodes in the network in a random order and set it to X.</p><p>4. For each x ¡Ê X chosen in that specific order, let C x (t) = f (C xi1 (t), ..., C xim (t), C x i(m+1) (t ? 1), ..., C x ik (t ? 1)).</p><p>f here returns the label occurring with the highest frequency among neighbors and ties are broken uniformly randomly.</p><p>5. If every node has a label that the maximum number of their neighbors have, then stop the algorithm. Else, set t = t + 1 and go to (3).</p><p>Since we begin the algorithm with each node carrying a unique label, the first few iterations result in various small pockets (dense regions) of nodes forming a consensus (acquiring the same label). These consensus groups then gain momentum and try to acquire more nodes to strengthen the group. However, when a consensus group reaches the border of another consensus group, they start to compete for members. The within-group interactions of the nodes can counteract the pressures from outside if there are less between-group edges than within-group edges. The algorithm converges, and the final communities are identified, when a global consensus among groups is reached. Note that even though the network as one single community satisfies the stop criterion, this process of group formation and competition discourages all nodes from acquiring the same label in case of heterogeneous networks with an underlying community structure. In case of homogeneous networks such as Erd? os -R¨¦nyi random graphs <ref type="bibr" target="#b30">[31]</ref> that do not have community structures, the label propagation algorithm identifies the giant connected component of these graphs as a single community. Our stop criterion is only a condition and not a measure that is being maximized or minimized. Consequently there is no unique solution and more than one distinct partition of a network into groups satisfies the stop criterion (see figures 4 and 5). Since the algorithm breaks ties uniformly randomly, early on in the iterative process when possibilities of ties are high, a node may vote in favor of a randomly chosen community. As a result, multiple community structures are reachable from the same initial condition.</p><p>If we know the set of nodes in the network that are likely to act as centers of attraction for their respective communities, then it would be sufficient to initialize such nodes with unique labels, leaving the remaining nodes unlabeled. In this case when we apply the proposed algorithm the unlabeled nodes will have a tendency to acquire labels from their closest attractor and join that community. Also, restricting the set of nodes initialized with labels will reduce the range of possible solutions that the algorithm can produce. Since it is generally difficult to identify nodes that are central to a community before identifying the community itself, here we give all nodes equal importance at the beginning of the algorithm and provide them each with unique labels. We apply our algorithm to the following networks. The first one is Zachary's karate club network which is a network of friendship among 34 members of a karate club <ref type="bibr" target="#b31">[32]</ref>. Over a period of time the club split into two factions due to leadership issues and each member joined one of the two factions. The second network that we consider is the US college football network that consists of 115 college teams represented as nodes and has edges between teams that played each other during the regular season in the year 2000 <ref type="bibr" target="#b4">[5]</ref>. The teams are divided into conferences (communities) and each team plays more games within its own conference than inter-conference games. Next is the co-authorship network of 16726 scientists who have posted preprints on the condensed matter archive at www.arxiv.org; the edges connect scientists who co-authored a paper <ref type="bibr" target="#b32">[33]</ref>. It has been shown that communities in co-authorship networks are made up by researchers working in the same field or are research groups <ref type="bibr" target="#b21">[22]</ref>. Along similar lines one can expect an actor collaboration network to have communities containing actors of a similar genre. Here we consider an actor collaboration network of 374511 nodes and edges running between actors who have acted in at least one movie together <ref type="bibr" target="#b2">[3]</ref>. We also consider a protein-protein interaction network <ref type="bibr" target="#b33">[34]</ref> consisting of 2115 nodes. The communities are likely to reflect functional groupings of this network. And finally we consider a subset of the world wide web (WWW) consisting of 325729 webpages within the nd.edu domain and hyperlinks interconnecting them <ref type="bibr" target="#b1">[2]</ref>. Communities here are expected to be groups of pages on similar topics. <ref type="figure" target="#fig_3">Figure 4</ref> shows three different solutions obtained for the Zachary's karate club network and <ref type="figure" target="#fig_4">figure 5</ref> shows two different solutions obtained for the US college football network. We will show that even though we obtain different solutions (community structure), they are similar to each other. To find the percentage of nodes classified in the same group in two different solutions, we form a matrix M , where M ij is the number of nodes common to community i in one solution and community j in the other solution. Then we calculate</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Multiple community structures</head><formula xml:id="formula_4">f same = 1 100 2 ( i max j {M ij } + j max i {M ij })</formula><p>n . Given a network whose communities are already known, a community detection algorithm is commonly evaluated based on the percentage (or number) of nodes that are grouped into the correct communities <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b25">26]</ref>. f same is similar, where by fixing one solution we evaluate how close the other solution is to the fixed one and vice versa. While f same can identify how close one solution is to another, it is however not sensitive to the seriousness of errors. For example, when few nodes from several different communities in one solution are fused together as a single community in another solution, the value of f same does not change much. Hence we also use Jaccard's index which has been shown to be more sensitive to such differences between solutions <ref type="bibr" target="#b34">[35]</ref>. If a stands for the pairs of nodes that are classified in the same community in both solutions, b for pairs of nodes that are in the same community in the first solution and different in the second and c vice-versa, then Jaccard's index is defined as a a+b+c . It takes values between 0 and 1, with higher values indicating stronger similarity between the two solutions. <ref type="figure" target="#fig_5">Figure 6</ref> shows the similarities between solutions obtained from applying the algorithm five different times on the same network. For a given network, the ij th entry in the lower triangle of the table is the Jaccard index for solutions i and j, while the ij th entry in the upper triangle is the measure f same for solutions i and j. We can see that the solutions obtained from the five different runs are similar, implying that the proposed label propagation algorithm can effectively identify the community structure of any given network. Moreover, the tight range and high values of the modularity measure Q obtained for the five solutions ( <ref type="figure" target="#fig_5">figure 6</ref>) suggest that the partitions denote significant community structures.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Aggregate</head><p>It is difficult to pick one solution as the best among several different ones. Furthermore, one solution may be able to identify a community that was not discovered in the other and vice-versa. Hence an aggregate of all the different solutions can provide a community structure containing the most useful information. In our case a solution is a set of labels on the nodes in the network and all nodes having the same label form a community. Given two different solutions, we combine them as follows; let C 1 denote the labels on the nodes in solution 1 and C 2 denote the labels on the nodes in solution 2. Then, for a given node x, we define a new label as <ref type="figure">figure 7)</ref>. Starting with a network initialized with labels C we perform the iterative process of label propagation until every node in the network is in a community to which the maximum number of its neighbors belong to. As and when new solutions are available they are combined one by one with the aggregate solution to form a new aggregate solution. Note that when we aggregate two solutions, if a community T in one solution is broken into two (or more) different communities FIG. 7: An example of aggregating two community structure solutions. t1, t2, t3 and t4 are labels on the nodes in a network obtained from solution 1 and denoted as C 1 . The network is partitioned into groups of nodes having the same labels. s1, s2 and s3 are labels on the nodes in the same network obtained from solution 2 and denoted as C 2 . All nodes that had label t1 in solution 1 are split into two groups with each group having labels s1 and s2 respectively. While all nodes with labels t3 or t4 or t5 in solution 1 have labels s3 in solution 2. C represents the new labels defined from C 1 and C 2 .</p><formula xml:id="formula_5">C x = (C 1 x , C 2 x ) (see</formula><p>S 1 and S 2 in the other, then by defining the new labels as described above we are showing preferences to the smaller communities S 1 and S 2 over T . This is only one of the many ways in which different solutions can be aggregated. For other methods of aggregation used in community detection refer to <ref type="bibr" target="#b25">[26,</ref><ref type="bibr" target="#b35">36,</ref><ref type="bibr" target="#b36">37]</ref>. <ref type="figure">Figure 8</ref> shows the similarities between aggregate solutions. The algorithm was applied on each network 30 times and the solutions were recorded. An ij th entry is the Jaccard index for the aggregate of the first 5i solutions with the aggregate of the first 5j solutions. We observe that the aggregate solutions are very similar in nature and hence a small set of solutions (5 in this case) can offer as much insight about the community structure of a network as can a larger solution set. In particular, the WWW network which had low similarities between individual solutions (Jaccard index range 0.4883 -0.5931), shows considerably improved similarities (Jaccard index range 0.6604 -0.7196) between aggregate solutions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. VALIDATION OF THE COMMUNITY DETECTION ALGORITHM</head><p>Since we know the communities present in Zachary's karate club and the US football network, we explicitly verify the accuracy of the algorithm by applying it on these networks. We find that the algorithm can effectively unearth the underlying community structures in the respective networks. The community structures obtained by using our algorithm on Zachary's karate club network is shown in <ref type="figure" target="#fig_3">figure 4</ref>. While all the three solutions are outcomes of the algorithm applied to the network, figure 4(b) reflects the true solution <ref type="bibr" target="#b31">[32]</ref>. <ref type="figure" target="#fig_4">Figure 5</ref> gives two solutions for the US college football network. The algorithm was applied to this network 10 different times and the two solutions are the aggregate of the first five and remaining five solutions. In both figures 5(a) and 5(b), we can see that the algorithm can effectively identify all the conferences with the exception of Sunbelt. The reason for the discrepancy is the following: among the seven teams in the Sunbelt conference, four teams (Sunbelt 4 = {North-Texas, Arkansas State, Idaho, New Mexico State}) have all played each other and three teams (Sunbelt 3 = {Louisiana-Monroe, Middle-Tennessee State, Louisiana-Lafayette}) have again played one another. There is only one game connecting Sunbelt 4 and Sunbelt 3 , namely the game between North-Texas and Louisiana-Lafayette. However, four teams from the Sunbelt conference (two each from Sunbelt 4 and Sunbelt 3 ) have together played with seven different teams in the Southeastern conference. Hence we have the Sunbelt conference grouped together with the Southeastern conference in <ref type="figure" target="#fig_4">figure 5(a)</ref>. In <ref type="figure" target="#fig_4">figure 5(b)</ref>, the Sunbelt conference breaks into two, with Sunbelt 3 grouped together with Southeastern and Sunbelt 4 grouped with an independent team (Utah State), a team from Western Atlantic (Boise State), and the Mountain West conference. The latter grouping is due to the fact that every member of Sunbelt 4 has played with Utah State and with Boise State, who have together played five games with four different teams in Mountain West. There are also five independent teams which do not belong to any specific conference and are hence assigned by the algorithm to a conference where they have played the maximum number of their games.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. TIME COMPLEXITY</head><p>It takes a near-linear time for the algorithm to run to its completion. Initializing every node with unique labels requires O(n) time. Each iteration of the label propagation algorithm takes linear time in the number of edges (O(m)). At each node x, we first group the neighbors according to their labels (O(d x )). We then pick the group of maximum size and assign its label to x, requiring a worst-case time of <ref type="bibr">O(d x )</ref>. This process is repeated at all nodes and hence an overall time is O(m) for each iteration.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>FIG. 8: Similarities between aggregate solutions obtained for each network. An entry in the i</head><p>th row and j th column in the tables is Jaccard's similarity index between the aggregate of the first 5i and the first 5j solutions. While similarities between solutions for the karate club friendship network and the protein-protein interaction network are represented in the lower triangles of the first two tables, the entries in the upper triangle of these two tables are for the US college football network and the co-authorship network respectively. The similarities between aggregate solutions for the WWW is given in the lower triangle of the third table.</p><p>As the number of iterations increases, the number of nodes that are classified correctly increases. Here we assume that a node is classified correctly if it has a label that the maximum number of its neighbors have. From our experiments, we found that irrespective of n, 95% of the nodes or more are classified correctly by the end of iteration 5. Even in the case of Erd? os -R¨¦nyi random graphs <ref type="bibr" target="#b30">[31]</ref> with n between 100 and 10000 and average degree 4, which do not have community structures, by iteration 5, 95% of the nodes or more are classified correctly. In this case, the algorithm identified all nodes in the giant connected component as belonging to one community.</p><p>When the algorithm terminates it is possible that two or more disconnected groups of nodes have the same label (the groups are connected in the network via other nodes of different labels). This happens when two or more neighbors of a node receive its label and pass the labels in different directions, which ultimately leads to different communities adopting the same label. In such cases, after the algorithm terminates one can run a simple breadth-first search on the sub-networks of each individual groups to separate the disconnected communities. This requires an overall time of O(m + n). When aggregating solutions however, we rarely find disconnected groups within communities.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VI. DISCUSSION AND CONCLUSIONS</head><p>The proposed label propagation process uses only the network structure to guide its progress and requires no external parameter settings. Each node makes its own decision regarding the community to which it belongs to based on the communities of its immediate neighbors. These localized decisions lead to the emergence of community structures in a given network. We verified the accuracy of community structures found by the algorithm using Zachary's karate club and the US college football networks. Furthermore, the modularity measure Q was significant for all the solutions obtained, indicating the effectiveness of the algorithm. Each iteration takes a linear time O(m), and although one can observe the algorithm beginning to converge significantly after about 5 iterations, the mathematical convergence is hard to prove. Other algorithms that run in a similar time-scale include the algorithm of Wu and Huberman <ref type="bibr" target="#b25">[26]</ref> (with time complexity O(m + n)) and that of Clauset et al <ref type="bibr" target="#b29">[30]</ref> which has a running time of O(nlog 2 n). The algorithm of Wu and Huberman is used to break a given network into only two communities. In this iterative process two chosen nodes are initialized with scalar values 1 and 0 and every node updates its value as the average of the values of its neighbors. At convergence, if a maximum number of a node's neighbors have values above a given threshold then so will the node. Hence a node tends to be classified to a community to which the maximum number of its neighbors belong. Similarly if in our algorithm we choose the same two nodes and provide them with two distinct labels (leaving the others unlabeled), the label propagation process will yield similar communities as the Wu and Huberman algorithm. However to find more than two communities in the network, the Wu and Huberman algorithm needs to know a priori how many communities there are in the network. Furthermore, if one knows that there are c communities in the network, the algorithm proposed by Wu and Huberman can only find communities that are approximately of the same size, that is n c , and it is not possible to find communities with heterogeneous sizes. The main advantage of our proposed label propagation algorithm over the Wu and Huberman algorithm is that we do not need a priori information on the number and sizes of the communities in a given network; indeed such information usually is not available for real-world networks. Also, our algorithm does not make restrictions on the community sizes. It determines such information about the communities by using the network structure alone.</p><p>In our test networks, the label propagation algorithm found communities whose sizes follow approximately a powerlaw distribution P (S &gt; s) ? s ?¦Í with the exponent ¦Í ranging between 0.5 and 2 ( <ref type="figure" target="#fig_6">figure 9</ref>) . This implies that there is no characteristic community size in the networks and it is consistent with previous observations <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b29">30,</ref><ref type="bibr" target="#b37">38]</ref>. While the community size distributions for the WWW and co-authorship networks approximately follow power-laws with a cut-off, with exponents 1.15 and 1.98 respectively, there is a clear crossover from one scaling relation to another for the actor collaboration network. The community size distribution for the actor collaboration network has a power-law exponent of 2 for sizes up to 164 nodes and 0.5 between 164 and 7425 nodes (see <ref type="figure" target="#fig_6">figure 9</ref>).</p><p>In the hierarchical agglomerative algorithm of Clauset et al <ref type="bibr" target="#b29">[30]</ref>, the partition that corresponds to the maximum Q is taken to be the most indicative of the community structure in the network. Other partitions with high Q values will have a structure similar to that of the maximum Q partition, as these solutions are obtained by progressively aggregating two groups at a time. Our proposed label propagation algorithm on the other hand finds multiple significantly modular solutions that have some amount of dissimilarity. For the WWW network in particular, the similarity between five different solutions is low, with the Jaccard index ranging between 0.4883 to 0.5921, yet all five are significantly modular with Q between 0.857 to 0.864. This implies that the proposed algorithm can find not just one but multiple significant community structures, supporting the existence of overlapping communities in many real-world networks <ref type="bibr" target="#b13">[14]</ref>.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>FIG. 1 :</head><label>1</label><figDesc>FIG. 1: An illustration of a dendrogram which is a tree representation of the order in which nodes are segregated into different groups or communities.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>FIG. 2 :</head><label>2</label><figDesc>FIG. 2: Nodes are updated one by one as we move from left to right. Due to a high density of edges (highest possible in this case), all nodes acquire the same label.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>FIG. 4 :</head><label>4</label><figDesc>FIG. 4: (a), (b) and (c) are three different community structures identified by the algorithm on Zachary's karate club network. The communities can be identified by their shades of grey colors.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>FIG. 5 :</head><label>5</label><figDesc>FIG. 5: The grouping of US college football teams into conferences are shown in (a) and (b). Each solution ((a) and (b)) is an aggregate of five different solutions obtained by applying the algorithm on the college football network.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>FIG. 6 :</head><label>6</label><figDesc>FIG. 6: Similarities between five different solutions obtained for each network is tabulated. An entry in the i th row and j th column in the lower triangle of each of the table is the Jaccard's similarity index for solutions i and j of the corresponding network. Entries in the i th row and j th column in the upper-triangle of the tables are the values of the measure fsame for solutions i and j in the respective networks. The range of modularity values Q obtained for the five different solutions is also given for each network.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>FIG. 9 :</head><label>9</label><figDesc>FIG. 9: The cumulative probability distributions of community sizes (s) are shown for the WWW, co-authorship and actor collaboration networks. They approximately follow power-laws with the exponents as shown.</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>VII. ACKNOWLEDGMENTS</head><p>The authors would like to acknowledge the National Science Foundation (SST 0427840, DMI 0537992 and CCF 0643529) and a Sloan Research Fellowship to one of the authors (R. A). Any opinions, findings and conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect the views of the National Science Foundation.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Albert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A.-L</forename><surname>Barab¨¢si</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Reviews of Modern Physics</title>
		<imprint>
			<biblScope unit="volume">74</biblScope>
			<biblScope unit="page">47</biblScope>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Albert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Jeong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A.-L</forename><surname>Barab¨¢si</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">401</biblScope>
			<biblScope unit="page">130</biblScope>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A.-L</forename><surname>Barab¨¢si</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Albert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">286</biblScope>
			<biblScope unit="page">509</biblScope>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Newman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Review</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="page">167</biblScope>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Girvan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Newman</surname></persName>
		</author>
		<title level="m">Proceedings of National Academy of Sciences</title>
		<meeting>National Academy of Sciences</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="volume">99</biblScope>
			<biblScope unit="page">7821</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Wasserman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Faust</surname></persName>
		</author>
		<title level="m">Social network analysis</title>
		<imprint>
			<publisher>Cambridge University Press</publisher>
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Danon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>D¨ªaz-Guilera</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Arenas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Statistical Mechanics: Theory and Experiment</title>
		<imprint>
			<biblScope unit="page">11010</biblScope>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Eckermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Moses</surname></persName>
		</author>
		<title level="m">Proceedings of National Academy Sciences</title>
		<meeting>National Academy Sciences</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="volume">99</biblScope>
			<biblScope unit="page">5825</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Flake</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Lawrence</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Giles</surname></persName>
		</author>
		<title level="m">Proceedings of the 6 th ACM SIGKDD</title>
		<meeting>the 6 th ACM SIGKDD</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="150" to="160" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Guimer¨¤</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Amaral</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">433</biblScope>
			<biblScope unit="page">895</biblScope>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gustafsson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hornquist</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Lombardi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physica A: Statistical Mechanics and its Applications</title>
		<imprint>
			<biblScope unit="volume">367</biblScope>
			<biblScope unit="page">559</biblScope>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hastings</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physical Review E</title>
		<imprint>
			<biblScope unit="volume">74</biblScope>
			<biblScope unit="issue">R</biblScope>
			<biblScope unit="page">35102</biblScope>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Newman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Girvan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physical Review E</title>
		<imprint>
			<biblScope unit="volume">69</biblScope>
			<biblScope unit="page">26113</biblScope>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Palla</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Der¨¦nyi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Farkas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Vicsek</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">435</biblScope>
			<biblScope unit="page">814</biblScope>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Radicchi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Castellano</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Cecconi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Loreto</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Parisi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proceedings of National Academy of Sciences</title>
		<imprint>
			<biblScope unit="volume">101</biblScope>
			<biblScope unit="page">2658</biblScope>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Karger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the ACM</title>
		<imprint>
			<biblScope unit="volume">47</biblScope>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Kernighan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Lin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Bell System Technical Journal</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page">291</biblScope>
			<date type="published" when="1970" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Fiduccia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Mattheyses</surname></persName>
		</author>
		<title level="m">Proceedings of 19 th Annual ACM IEEE Design Automation Conference</title>
		<meeting>19 th Annual ACM IEEE Design Automation Conference</meeting>
		<imprint>
			<date type="published" when="1982" />
			<biblScope unit="page" from="175" to="181" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hendrickson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Leland</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Scientific Computing</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page">452</biblScope>
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Stoer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Wagner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the ACM</title>
		<imprint>
			<biblScope unit="volume">44</biblScope>
			<biblScope unit="page">585</biblScope>
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Thompson</surname></persName>
		</author>
		<title level="m">Proceedings of 11 th annual ACM symposium on Theory of Computing</title>
		<meeting>11 th annual ACM symposium on Theory of Computing</meeting>
		<imprint>
			<date type="published" when="1979" />
			<biblScope unit="page" from="81" to="88" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Newman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physical Review E</title>
		<imprint>
			<biblScope unit="volume">69</biblScope>
			<biblScope unit="page">66133</biblScope>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Pons</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Latapy</surname></persName>
		</author>
		<idno>e-print physics/0512106</idno>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Duch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Arenas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physical Review E</title>
		<imprint>
			<biblScope unit="volume">72</biblScope>
			<biblScope unit="page">27104</biblScope>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Newman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physical Review E</title>
		<imprint>
			<biblScope unit="volume">74</biblScope>
			<biblScope unit="page">36104</biblScope>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Huberman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The European Physical Journal B</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page">331</biblScope>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Bagrow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Bollt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physical Review E</title>
		<imprint>
			<biblScope unit="volume">72</biblScope>
			<biblScope unit="page">46108</biblScope>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Costa</surname></persName>
		</author>
		<idno>e-print cond-mat/0405022</idno>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Newman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European Physical Journal B</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page">321</biblScope>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Clauset</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Newman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Moore</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physical Review E</title>
		<imprint>
			<biblScope unit="volume">70</biblScope>
			<biblScope unit="page">66111</biblScope>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<title level="m" type="main">Random Graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Bollob¨¢s</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1985" />
			<publisher>Academic Press</publisher>
			<pubPlace>Orlando, FL</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Zachary</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Anthropological Research</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page">452</biblScope>
			<date type="published" when="1977" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Newman</surname></persName>
		</author>
		<title level="m">Proceedings of National Academy of Sciences</title>
		<meeting>National Academy of Sciences</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="volume">98</biblScope>
			<biblScope unit="page">404</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Jeong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Mason</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A.-L</forename><surname>Barab¨¢si</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Oltvai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">411</biblScope>
			<biblScope unit="page">41</biblScope>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Milligan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Schilling</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Multivariate Behavioral Research</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page">97</biblScope>
			<date type="published" when="1985" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Gfeller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Chappelier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Rios</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physical Review E</title>
		<imprint>
			<biblScope unit="volume">72</biblScope>
			<biblScope unit="page">56135</biblScope>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Wilkinson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Huberman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proceedings of National Academy of Sciences</title>
		<imprint>
			<biblScope unit="volume">101</biblScope>
			<biblScope unit="page">5241</biblScope>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Arenas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Danon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>D¨ªaz-Guilera</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Gleiser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Guimer¨¤</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European Physics Journal B</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page">373</biblScope>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
