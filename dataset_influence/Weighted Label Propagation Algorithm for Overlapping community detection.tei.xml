<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 D:\grobid-master\grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.1-SNAPSHOT" ident="GROBID" when="2018-07-17T00:09+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">IEEE ICC 2015 SAC -Social Networking Weighted Label Propagation Algorithm for Overlapping Community Detection</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chao</forename><surname>Tong</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>Senior Member, IEEE</roleName><forename type="first">Jianwei</forename><forename type="middle">Niu</forename></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jinming</forename><surname>Wen</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zhongyu</forename><surname>Xie</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Fu</forename><surname>Peng</surname></persName>
						</author>
						<title level="a" type="main">IEEE ICC 2015 SAC -Social Networking Weighted Label Propagation Algorithm for Overlapping Community Detection</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<note>1</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Index Terms-social networks</term>
					<term>overlapping community detection</term>
					<term>label propagation</term>
					<term>evaluation criteria</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Overlapping community detection algorithm research is one of hot topics in current social network analysis. In this paper, we applied the idea of weighted label propagation to overlapping community detection algorithm design, and propose a weighted label propagation algorithm (WLPA). Moreover, in order to evaluate the performance results of various overlapping community detection algorithms, we put forward a series of evaluation criteria based on error distribution curve of overlapping vertices. The experiment results show that the algorithm has a faster speed and better community detection results, and the evaluation criteria is in line with the inherent characteristics of the social network overlapping community structure.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>etwork community structure is one of the most popular and important topological properties of networks. Typically a network can be modeled with a graph, which consists of nodes and edges. Non-overlapping community is defined as the dense connected components of a network. In a community, the nodes, which have same or similar attributes, are closely interconnected, while in different communities, nodes are sparsely interconnected <ref type="bibr" target="#b0">[1]</ref> <ref type="bibr" target="#b1">[2]</ref>. At the same time, a community that shares some nodes and edges, resulting in overlap, is called an overlapping community <ref type="bibr" target="#b2">[3]</ref> <ref type="bibr" target="#b3">[4]</ref>. Compared with non-overlapping community, overlapping community can better reflect the actual characteristics of the networks.</p><p>Discovering the different community structures in a complex network can identify potential relationships between elements, thus contributing to understanding and developing networks. Therefore it has great social value. Overlapping community detection algorithm <ref type="bibr" target="#b4">[5]</ref> is designed to identify overlapping communities' inherent structure in the networks, which means nodes need to be divided into several groups in accordance with the link relations. And above all, the algorithm can also detect the communities' overlaps.</p><p>The researchers have proposed several overlapping community detection algorithms. Palla et al. proposed CPM <ref type="bibr" target="#b0">[1]</ref> algorithm for finding the network overlapping community structure. Gregory put forward an algorithm named COPRA <ref type="bibr" target="#b5">[6]</ref>, which adopts the idea of label propagation. COPRA is an algorithm improved from RAK <ref type="bibr" target="#b6">[7]</ref>. RAK uses the label propagation to find the overlapping community structure. Xie also gave a method named SLPA algorithm <ref type="bibr" target="#b7">[8]</ref>, which is very similar with the COPRA algorithm. <ref type="bibr">Chen et al. also</ref> proposed an algorithm based on the game theory which is similar with SLPA <ref type="bibr" target="#b8">[9]</ref> too. Besides, there are some other label propagation algorithms <ref type="bibr" target="#b9">[10]</ref> <ref type="bibr" target="#b10">[11]</ref>.</p><p>By analyzing the overlapping community detection, we can summarize the main problems of the current study as follows. 1) Existing overlapping community detection algorithms often cannot meet the requirements of less computing speed, high accuracy, not relying on the prior knowledge, and not being sensitive to parameters. 2) Overlapping community detection algorithm is often "biased". 3) Lack of effective evaluation criteria for overlapping community detection algorithm.</p><p>In this paper, we applied weighted label propagation to overlapping community detection algorithm, and propose a weighted label propagation algorithm (WLPA). In order to evaluate the performance of various overlapping community detection algorithms, we propose a series of evaluation criteria based on error distribution curve of overlapping vertices. The experiments show it has a faster speed and better community detection results, and can avoid the above problems. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Algorithms Introduction</head><p>Label propagation algorithm (LPA) is a graph-based semi-supervised learning method. The core idea is to use the label information of marked node to predict that of unmarked node. Raghavan, who first applied the idea of LPA to networks community detection, proposed a non-overlapping community detection algorithm, RAK <ref type="bibr" target="#b6">[7]</ref>. RAK is to allow each node have an associated label, the essence of the label is to use an integer as the identifier of a node. The nodes with the same labels will form a community after several iterations. RAK's specific algorithm steps are as follows:</p><p>(1) Initialize the labels of all nodes in the network, as for a nodes x , (0)</p><p>x C x = , denotes that the label of node x is x after Initially, each node x's label set has only one element <ref type="bibr">( ,1)</ref> x . the 0-th iteration.</p><p>(2) Letbe 1 t = . (3) Put all the nodes in the set X in a random order. (4) For each node x X ¡Ê , update the label of the node by calculating</p><formula xml:id="formula_0">1 1 ( ) ( ( ),..., ( ), ( 1),..., ( 1)) m m k x x x x x C t f C t C t C t C t + = ? ? .</formula><p>(5) If the label of each node is equal to the labels of its neighbors in the maximum occurrence probability, then terminate the algorithm. Otherwise let 1 t t = + , go to step (3). According to analysis, however, the algorithm still has some problems as follows.</p><p>(1) In step (4) of the RAK, all nodes in the network need to update their label. We are not sure that updating randomly is better than that in a certain sequence. It needs experiments to validate.</p><p>(2) In accordance with the RAK, the updating of the nodes' labels is decided by its neighbors' labels. However there are two different methods when updating the nodes' label, synchronous and asynchronous. The formula used for the synchronization is</p><formula xml:id="formula_1">1 2 ( ) ( ( 1), ( 1),..., ( 1)) k x x x x C t f C t C t C t = ? ? ? ,</formula><p>indicating the label of node x in t-th iteration depends on the labels of all its neighbors in (t-1)-th iterations. At the same time,</p><formula xml:id="formula_2">1 1 ( ) ( ( ),..., ( ), ( 1),..., ( 1)) m m k x x x x x C t f C t C t C t C t + = ? ? is used for</formula><p>the asynchronous update and it indicates that the label of node x in t-th iteration depends on some neighbors in t-th iteration and some neighbors in (t-1)-th iteration.</p><p>Experience and analysis show that synchronous update may lead to label oscillation, especially in the bipartite graph, which will seriously affect the performance of the algorithm. As shown in <ref type="figure">Fig. 1</ref>, the node's label from the (t-1)-th iteration to t-th iteration generates an oscillation, which will let the label spread down and waste time. The algorithm is difficult to terminate. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Extends to Overlapping Community Detection</head><p>The above mentioned label propagation algorithms can only be used for non-overlapping community detection. We improve the LPA according to the label set proposed in COPRA. The main improvement is to make the node label keep many community identifiers. When the algorithm finishes after several iterations, if the node label contains multiple community identifiers, the node will belong to multiple communities at the same time. As for the above mentioned problems, we will also give the corresponding solutions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1) Label set</head><p>The label of each node is a set whose element is <ref type="bibr">( , )</ref> c b , where c is the community ID; b is the attribution factor. And the sum of all attribution factors in the label of a node is equal to 1.</p><p>Then in the iterative process, when the neighbor nodes' labels spread to the node, the elements in the label set of the node will change. However, if we just modify the algorithm as above, each node's label set will become bigger and bigger. And ultimately many nodes may belong to as many as N communities, where N is the total number of nodes in the network, and is also the initial total number of communities, because each node initially uses its own symbol as an independent community identifier.</p><p>Clearly, we need a mechanism to limit the label set increasing infinitely and delete those elements with a small attribution factor. So we set a parameter v, which indicates the number of maximum communities that nodes can be attributed to. Because the sum of attribution factors in each node's label set is 1, we stipulate that: in each iteration, the elements with an attribution factor less than 1/ v will be deleted, while the elements with a high attribution factor will be kept. In actual operation the algorithm will run into the following situations:</p><p>(1) If there is more than one element in label set whose attribution factor is greater than 1/ v , all of them were preserved.</p><p>(2) If there is no element whose attribution factor is larger than 1/ v , the algorithm will keep the biggest attribution factor, and if there is more than one element with the biggest attribution factor, it will randomly choose one.</p><p>After the deletion of label set, in order to meet the aforementioned requirement, the sum of all elements' attribution factors must be 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2) Label propagation</head><p>To clarify the label set specific propagation process, firstly we need to solve the problems of LPA above mentioned. Next we will focus on the following respects to explore the characteristics of label propagation algorithm, and to make trade-offs through experiments.</p><p>(1) Synchronous and asynchronous update. So far, some algorithms use synchronous update, and some algorithms adopt asynchronous update. Overlapping community detection algorithms based on LPA mainly include COPRA and SLPA. The former uses synchronous update while the latter uses asynchronous update.</p><p>(2) Node updating sequence. We need to update the labels of all nodes in a certain order. When using the synchronization update, the order does not matter; when using the asynchronous update, the spread of label will be affected. We have three options: the random order; the increases order of node degree (Ascending); and the decrease order of node degree (Descending).</p><p>(3) The weight of label propagation. Most of existing algorithms based on LPA believe that the statuses of each node's label in the propagation process are equal. Taking the real network into account, the importance of different nodes in every community is different. The node with a relatively large degree tends to influence its neighbors more than the other nodes with a small degree. Firstly we assume the weight of node's label according to the average degree of all the nodes in the network. For example, we define node's label weight by the ratio of its degree to the average degree of the network. We find the above approach may be also not reasonable after studying the network structure. Because the actual community may be big or small, and the node's influence is mainly confined in a certain community or the adjoining area, moreover the weight of a node's label is directly affected by its neighbors. Based on the local influence, we initially consider the following scheme. Scheme 1: Before updating node labels, we calculate each neighbor node's label weights (weight = degree of neighbor nodes / the degree of node to be updated), and multiply the attribution factor of neighbor nodes by weight to strengthen (bigger than 1) or weaken (smaller than 1) it. Then we add the neighbor node's labels into the label set that will be updated. This scheme is referred to as "Weight1". Scheme 2: still based on local influence, but adopt "one size fits all" strategy, which means that whatever neighbor node's degree is bigger than the updating node, we enhance the label of the node to 1.1 times. As for the node whose degree is less than the updating node we weaken it to 0.9 times. 0.9 is tentative for the experiment just for convenience. This scheme is called "Weight2".</p><p>All kinds of algorithms based on label propagation have a similar process. For instance, COPRA is a combination algorithm with "Synchronous + Random + Unweighted". If we let the parameter v= 2, and adopt the "Synchronous + Random + Unweighted" combination algorithm, the label propagation process are indicated into the following steps.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3) Terminating conditions</head><p>Now there are two main termination conditions that can be used to stop the overlapping community label propagation.</p><p>(1) Artificially give the times of iterations, for example, SLPA algorithm thinks that it only need 20 times iterations to stabilize the result. The number 20 is independent of the network size and structure <ref type="bibr" target="#b7">[8]</ref>. We call this scheme "Termination1".</p><p>(2) Referring to COPRA algorithm's termination conditions, Let the set of community identifiers in the t-th iteration be that it will definitely happen within a finite time, so the algorithm can certainly be terminated. Although we do not prove that we always can get the best results after the t-th iterations, but COPRA algorithm termination condition performs well in practice, and the calculation is very simple. We call this scheme "Termination2". </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. EVALUATION CRITERIA</head><note type="other">In order to evaluate overlapping community detection algorithm, we propose the following algorithm evaluation criteria. According to evaluation criteria, we can generate the Error Distribution of Overlapping Vertices (EDOV). Here define an undirected and unweighted graph ( , ) G V E</note><formula xml:id="formula_3">( ) ( , ) ( , ) in out d a L a A L a A = +</formula><p>is the degree of node a . Nodes are divided into a certain community is mainly determined by two factors, namely the desire of nodes to join the community and the attractiveness of the community, just like the interaction force in physics. In real social networks, the establishment of the edges is often driven by these two factors. Based on practical considerations, we give the following definition. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Degree of Contribution (Doc)</head><formula xml:id="formula_4">A B A' B' a { : ( ( , ) 0)} t t i c V x V b c x = ¡Ê ? ¡Ê &gt; ,</formula><formula xml:id="formula_5">{( , ) : 1} L a A L a A DoC a A d a L a A L a A = = + (2) c c i c V i = ¡Ê ¡Ä =</formula><p>, but the number often DoC indicates the ratio of the number of edges assigned to a community by a node to its total number of edges, which measures the desire of the node to join the community.</p><formula xml:id="formula_6">( , ) ( , ) ( , ) ( ) ( , )<label>( , )</label></formula><p>in out</p><formula xml:id="formula_7">, ( , ) 0 ¡Æ t t x V b c x ¡Ê &gt;</formula><p>changes in successive iterations, so we cannot expect</p><formula xml:id="formula_8">1 t t c c ? = .</formula><p>Our approach is to calculate the minimum number of nodes marked by each community identifier beginning with the reduction of the community identifier. The calculating formula is shown in (1).</p><p>As shown in <ref type="figure">Fig. 2</ref>, compared with community A, there are more relationships of the node a in the community B. We think that a's contribution to the community B is more, so node a has more willing to join the community B. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Degree of Attraction (DoA)</head><p>DoA describes a community's attraction for a node to join it, and it is decided by the density of original community and the node's connections in the original community. It is denoted as: where the set ' A A a = ? , that is the so-called original community. <ref type="bibr">2 ( , )</ref> m a A is the number of the friends' friends of node a in community A . The second factor of <ref type="formula">(3)</ref> is the size of the social circle of the node a 's friends. The lager it is, the more triadic closure of node a may form. Thus the node will connect more closely with the community. In (3), the former factor describes the close level of the connected part of the node, namely the degree of solidarity of the original community. The latter factor represents the importance and social connections of node's friends in the original community, which is to measure the position of the node's friend in the community.</p><formula xml:id="formula_10">otherwise. t c ? ? ¡Ê ¡Ä ¡Ê ¡Ä = ? ? = ? ? ? 2 ' in A + = ¡Á ? (3), When ( , ) ( , ) ( , )<label>( 1)</label></formula><p>Termination2". We have implemented the "Synchronous + Unweighted + Random + Termination1" label propagation algorithm. For the condition "Termination1", we set that the time of iterations is 20, 50 and 100, and v = 2. We did experiments on Power Grid network <ref type="bibr" target="#b13">[14]</ref>, which includes 4941 nodes, 6594 edges. It is an undirected and un-weighted network.</p><p>The results are shown in <ref type="table" target="#tab_4">Table I. The data in the table are the</ref> average results which the algorithm runs 100 times.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Coefficient of Belonging (CoB)</head><p>CoB is the combination of DoC and DoA. It is denoted as:</p><formula xml:id="formula_11">C ( , ) (1 ) ( , ) ( , ) oB a A DoC a A DoA a A ¦Ë ¦Ë = ? +<label>(4)</label></formula><p>, where the parameter ¦Ë is the influence factor, balancing the weight of DoC and DoA. According to experiments, the criteria has the best performance when ¦Ë =0.5. Besides the criteria we propose above, we also choose the following criteria in the experiments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E. Modularity Function</head><p>Network modularity evaluation function, also called Q function, was proposed by Newman <ref type="bibr" target="#b11">[12]</ref>. It is calculated as the following form:</p><formula xml:id="formula_12">2 K s s (6),</formula><p>The "comm" in the table I denotes the sum of communities found by algorithm under a certain conditions. The "iterations" is the times of iteration of the label propagation. The "overlap" represents the degree of overlapping, i.e. the average number of communities which a node belongs to. The "mod" indicates the value of the modularity function, larger value indicates a better community structures. The "time (ms)" indicates the running time of algorithm, in milliseconds. From <ref type="table" target="#tab_4">Table I</ref>, we can know that 56.89 iterations are needed for "Termination2". And if we take modularity as evaluation, the results of "Termination2" are superior to that of "Termination1", Even taking 100 iterations under "Termination1", the results have not got large improvements.</p><p>Power Grid is a real network data set. At the same time, we then use the method of generating artificial network which Lancichinetti proposed <ref type="bibr" target="#b14">[15]</ref>, to generate an artificial network where N = 1000, on = 50, om = 3, k = 20, maxk = 50, minc = 10, maxc = 50, mu = 0.1. The experiments repeat 100 times to get the results shown in <ref type="table" target="#tab_4">Table II</ref>, when we take the parameter v = 3. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>F. NMI (Normalized Mutual Information)</head><p>NMI <ref type="bibr" target="#b12">[13]</ref> is used to calculate the similarity of two communities. Its proposition has learned from the definition "mutual information" in information theory. For each partition result, the algorithm gives a value of "mutual information", and normalizes it to compare the similarity of two matrices. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. EXPERIMENT</head><p>In this section, we performed experiments to choose the optional conditions in order to get the best performance for label propagation.</p><p>What we can see from <ref type="table" target="#tab_4">Table II</ref> is that with the increase of number of iterations, "Termination1" cannot get the better results. The change of "mod" is not very obvious. However the increase of the number of iterations means the increase of running time.</p><p>In summary, we have decided to use the "Termination2" as a required condition of our modified algorithm in the future, namely the termination conditions of COPRA. We can lower the number of iterations and get a better community detection as a result of "Termination2".</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Selection of Termination Condition</head><p>Referring to the COPRA algorithm, as analyzed above, it is a combination of "Synchronous+ Unweighted+ Random +</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Determination of Propagation Conditions</head><p>Next we explore the propagation conditions, for instance, synchronous and asynchronous updates, ascending, descending, random, the weights of labels, and so on. According to the results of the previous study of the termination conditions, the experiments are under the condition of "Termination2". First, we adopt the Power Grid network and let v = 2. The results are shown in <ref type="table" target="#tab_4">Table III.</ref> From <ref type="table" target="#tab_4">Table III</ref>, it is clear that the running time obviously decrease when we change the synchronous update to asynchronous update. We also know that the speed of algorithms have been accelerated and the quality of community detection have improved. So it is reasonable that the "Asynchronous" will be certainly selected. effects are good. Compared to the original running time of the COPRA, "Synchronous + random + Unweighted" reduces several times. By observing the experimental data, we can find that "Asynchronous + Ascending + Weight2" in general uses less iterations, and its running time is shorter. Although the difference is not very clear, we ultimately choose "Asynchronous + Ascending + Weight2" to use in our proposed label propagation algorithm. In order to confirm the above conclusions, we performed the experiments with an artificial network produced under the conditions with N = 1000, on = 50, om = 3, k = 20, maxk = 50, minc = 10, maxc = 50, mu = 0.1. The results are shown in <ref type="table" target="#tab_4">Table  IV</ref>. <ref type="table" target="#tab_4">Table IV</ref> shows that asynchronous update has a huge positive effect on the running time of the algorithm. We also know that asynchronous update does not make the "mod" value decrease. Conversely, it makes the network community detection better. Because of generation theory of artificial network, we can clearly know that it has 50 communities. Based on the number of the community, "Asynchronous + Descending + Weight1" and "Asynchronous + Descending + Weight2" can find a little number of communities, even their "mod" values are high, they still are not good algorithms.</p><p>Thus we use NMI to evaluate the results of the combinations of the algorithms again. Table IV further validates that performance of "Asynchronous + Descending + Weight1" and "Asynchronous + Descending + Weight2" are poor. Their community detection results are quite different from the expected results of artificial network.</p><p>In summary, now we can select a better solution of the label propagation algorithm. NMI is the main evaluation criteria, so "Asynchronous + Ascending + Unweighted" and "Asynchronous + Ascending + Weight2" are good schemes. Furthermore, the "mod" value are both more than 0.8, so the Next, we discuss the scheme "Weight2". As mentioned above, if the neighbor node's degree is larger than that of present node, we will multiply the attribution factor of the element in the label by 1.1 to enlarge its affect; if the neighbor node's degree is less, we will multiply it by 0.9; if they are equal, it will not change. The change of the attribution factor is aiming at accelerating the speed of propagation. We call this scheme (1.1, 0.9). We did experiments under different weight. The results are shown in <ref type="table" target="#tab_7">Table V.</ref>  From Table V, according to the running time, "mod" value and NMI, for different options of "Weight2", their effect on the community detection are very similar, and we cannot see a greater improvement. Therefore, we will continue to use the (1.1, 0.9) scheme as it is used in the previous experiment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Comparison with Other Algorithms</head><p>After the above discussion and verification of the label propagation, we finally choose "Asynchronous + Ascending + Weight2" as the scheme of the overlapping community label propagation algorithm proposed in this paper, which is most different from other label propagation algorithm is that we add the weight to the label propagation process. So the algorithm can be called Weighted Label Propagation Algorithm (WLPA).</p><p>Next, we did experiments with WLPA and other algorithms including COPRA, SLPA, GCE <ref type="bibr" target="#b15">[16]</ref>, OSLOM <ref type="bibr" target="#b16">[17]</ref> and other algorithms for comparison their performance. We use the NMI and the EDOV to evaluate the results. We use the LFR method to generate artificial network under N = 1000, om = 3, k = 20, maxk = 50, minc = 20, maxc = 50, mu = 0.2, a changing parameter on from 100 to 1000. The NMI values of different algorithms are shown in <ref type="figure" target="#fig_3">Fig. 3</ref>. The EDOV curves of different algorithms when on=200 are shown in <ref type="figure">Fig. 4</ref>. The EDOV curves of WLPA algorithm is plotted in <ref type="figure">Fig. 5</ref> alone.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V. CONCLUSION</head><p>This paper focuses on the idea of label propagation and its actual operation process. Through theoretical analysis and a lot of comparative analysis of "control variable", we make a positive choice on the updating sequence of node, the updating way, the propagation weight and terminal condition. We finally choose the fastest, better effect scheme, "Asynchronous + Ascending + Weight2", as the core idea of our weighted label propagation algorithm (WLPA). Next, we propose a series of effective evaluation criteria based on error distribution curve of overlapping nodes. Finally, we compare and analyze WLPA with several mainstream overlapping community detection algorithms, which has the following advantages, the faster speed, better overlapping community detection result, not depending on the priori knowledge, and not being sensitive to parameters. Moreover, WLPA can also avoid the problems brought by biased objective function. First, we can see from <ref type="figure">Fig. 5</ref>, WLPA algorithm gets a good effect. The error rates of all overlapping nodes found by algorithm are less than 40%, and most of overlapping nodes' error rates is very small. So it can be believed that WLPA is precise to detect the overlapping community. As shown in <ref type="figure">Fig.  4</ref>, we compared the WLPA's EDOV curve with that of other several popular algorithms, and knew that WLPA behaves no worse than other mainstream algorithms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>REFERENCES</head></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>where K represents the number of communities in the network, m is the total number of network edges, s TABLE¢ò THE RESULTS OF ALGORITHMS UNDER DIFFERENT TERMINATION CONDITIONS ON THE ARTIFICIAL NETWORK m denotes the total number of connections in the community s, and s d is the sum of degree of the nodes in community s.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 3</head><label>3</label><figDesc>Fig. 3 NMI values of different algorithms on the artificial network</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>N II. WEIGHTED LABEL PROPAGATION OVERLAPPING COMMUNITY DETECTION</head><label></label><figDesc></figDesc><table>ALGORITHM 

Manuscript received September 30, 2014. This work is supported by the 
National Natural Science Foundation of China under Grant No. 61472024, 
61103030, 61170296 and 61190125, Science Foundation of China University 
of Petroleum, Beijing (No.KYJJ2012-05-22), and the R&amp;D Program 
(2013BAH35F01). 
Chao Tong, Jianwei Niu, Zhongyu Xie are with School of Computer 
Science and Engineering, Beihang University, No.37 Xueyuan Road, 100191 
Beijing, China. (e-mail: tongchao@buaa.edu.cn, niujianwei@buaa.edu.cn, 
dakenz1990@163.com ). The corresponding author is Jianwei Niu. 
Jinming Wen is with the Department of Mathematics and Statistics, McGill 
University, 3480 University Street, Montreal, H3A 0B9, Canada. (e-mail: 
jinming.wen@mail.mcgill.ca). 
Fu Peng is with Department of Systems Engineering and Engineering 
Management, The Chinese University of Hong Kong, Shatin, Hong Kong, 
China. (e-mail: kevin.pengfu@gmail.com) 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><head>= . A is a set of some nodes in G ,whichis a node of community A . ( , ) in L a A is the number of edges of a within theis the number of edges of a pointing outside community A . It is apparent that</head><label></label><figDesc></figDesc><table>= 

. The 

total number of nodes in the graph | | 
V n 
= , while the total 

number of edges | | 
E m 
is expressed as a community in a network. 

| | 

A 

n 
A 
= 

, it is the 
total number of nodes in the A . The total number of the edges 
formed 
between 
these 
nodes 
is 

| {( , ) : 
, 
, 
} | 

A 

m 
u v u A v A u v 
= 
¡Ê 
¡Ê 
¡Ù 

. a community, while ( , ) out 
L a A 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="false"><head>where V is the set of all nodes in the network. We can know that t i eventually will reach a</head><label></label><figDesc></figDesc><table>Fig. 2 Degree of Contribution 

minimum value. By the time of 

-1 

= 

t 
t 

i i iteration should not end 

unless | | 1 

t 

i = , because t 
i may decrease again after several 

times of propagation. We can get the number of nodes marked 
by 
each 
community 
identifier 

in 
in 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4" validated="false"><head>TABLE I THEIf a node belongs to multiple communities, the node's CoBs of different communities should be close. If the RoE is</head><label>I</label><figDesc>too large, the node should not belong to the communities with small value of CoB.</figDesc><table>RESULTS OF ALGORITHMS UNDER DIFFERENT TERMINATION CONDITIONS 
ON THE POWER GRID NETWORK 
Termination 
conditions 
comm 
iterations overlap 
mod 
time 
(ms) 
Termination2 
4418.23 
56.89 
1.010 0.113 1227.07 
Termination1(20) 
4464.63 
20.00 
1.005 0.102 
426.01 
Termination1(50) 
4436.83 
50.00 
1.005 0.108 1086.50 
Termination1(100) 4429.17 
100.00 
1.005 0.111 2242.63 

D. Rate of Error (RoE) 

max 
min 

? 
= 
(5) 

max 

( ) 
CoB 
CoB 
RoE a 
CoB 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6" validated="false"><head>TABLE ¢ô COMPARISON OF DIFFERENT COMBINATIONS OF ALGORITHMS ON THE ARTIFICIAL NETWORK</head><label>¢ô</label><figDesc></figDesc><table>TABLE¢ó 
THE RESULTS OF DIFFERENT COMBINATIONS OF ALGORITHMS ON THE POWER 
GRID NETWORK 

Combinations 
comm 
Iterati-
ons 
overlap 
mod 
time 
(ms) 
NMI 

Combinations 
comm 
Iterati-
ons 
overlap 
mod 
time (ms) 

Synchronous+Rando-
m+Unweighted 
4418.2 
3 
56.89 
1.010 
0.113 
1227.07 

Asynchronous+Rand-
om+Unweighted 
837.00 
24.04 
1.170 
0.721 
361.13 

Asynchronous+Desc-
ending+Unweighted 
832.13 
24.09 
1.167 
0.722 
511.91 

Asynchronous+Asce-
nding+Unweighted 
961.21 
26.98 
1.177 
0.694 
563.67 

Asynchronous+Rand-
om+Weight1 
390.44 
12.60 
1.042 
0.811 
267.72 

Asynchronous+Rand-
om+Weight2 
551.85 
17.07 
1.116 
0.773 
315.11 

Asynchronous+Desc-
ending+Weight1 
375.87 
10.32 
296.63 
0.822 
296.63 

Asynchronous+Desc-
ending+Weight2 
436.57 
14.28 
1.110 
0.808 
436.57 

Synchronous+Rando-
m+Unweighted 
43.86 
12.43 
1.003 
0.826 
170.48 
0.90 
579 
Asynchronous+Rand-
om+Unweighted 
41.55 
6.00 
1.001 
0.827 
68.39 
0.89 
742 
Asynchronous+Desc-
ending+Unweighted 
39.44 
6.13 
1.002 
0.829 
88.58 
0.86 
83 
Asynchronous+Asce-
nding+Unweighted 
42.90 
7.01 
1.001 
0.826 
79.26 
0.91 
534 
Asynchronous+Rand-
om+Weight1 
34.43 
3.00 
1.025 
0.837 
58.91 
0.79 
883 
Asynchronous+Rand-
om+Weight2 
41.01 
5.29 
1.002 
0.828 
81.77 
0.88 
49 
Asynchronous+Desc-
ending+Weight1 
9.92 
4.02 
1.024 
0.846 
78.56 
0.32 
217 
Asynchronous+Desc-
ending+Weight2 
9.97 
3.80 
1.006 
0.85 
70.82 
0.30 
373 
Asynchronous+Asce-
nding+Weight1 
39.23 
3.06 
1.024 
0.827 
65.74 
0.86 
248 
Asynchronous+Asce-
nding+Weight2 
42.97 
6.19 
1.001 
0.826 
73.82 
0.91 
076 

Asynchronous+Asce-
nding+Weight1 
511.36 
15.53 
1.046 
0.777 
359.66 

Asynchronous+Asce-
nding+Weight2 
915.12 
23.77 
1.128 
0.696 
529.99 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7" validated="false"><head>TABLE V COMPARISON OF DIFFERENT WEIGHT SCHEMES ON THE</head><label>V</label><figDesc></figDesc><table>ARTIFICIAL NETWORK 

Weight 
run time (ms) 
mod 
NMI 
1.1,1.0 
112.71 
0.826 
0.911959 
1.2,1.0 
95.35 
0.826 
0.910574 
1.0,0.9 
107.57 
0.826 
0.912343 
1.1,0.9 
88.59 
0.826 
0.910986 
1.2,0.9 
115.12 
0.826 
0.911255 

</table></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Community structure in social and biological networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Girvan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">E J</forename><surname>Newman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the National Academy of Science</title>
		<meeting>of the National Academy of Science</meeting>
		<imprint>
			<date type="published" when="2002-04" />
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="7821" to="7826" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Community detection in networks using graph distance</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Sharmodeep</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">B</forename><surname>Peter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Presented in Networks with Community Structure Workshop</title>
		<imprint>
			<date type="published" when="2014-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Uncovering the overlapping community structures of complex networks in nature and society</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Palla</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Derenyi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Farkas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Vicsek</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">435</biblScope>
			<biblScope unit="issue">7043</biblScope>
			<biblScope unit="page" from="814" to="818" />
			<date type="published" when="2005-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Overlapping community detection in networks: The state-of-the-art and comparative study</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Jierui</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Stephen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">S</forename><surname>Boleslaw</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Computing Surveys (CSUR)</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="issue">4</biblScope>
			<date type="published" when="2013-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Community detection in graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Fortunato</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Phys. Rep</title>
		<imprint>
			<biblScope unit="volume">486</biblScope>
			<biblScope unit="page" from="75" to="174" />
			<date type="published" when="2010-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Finding overlapping communities in networks by label propagation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Gregory</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">New Journal of Physics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">10</biblScope>
			<date type="published" when="2010-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Near linear time algorithm to detect community structures in large-scale networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><forename type="middle">N</forename><surname>Raghavan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Albert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kumara</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physical Review E</title>
		<imprint>
			<biblScope unit="volume">76</biblScope>
			<biblScope unit="issue">3</biblScope>
			<date type="published" when="2007-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Towards linear time overlapping community detection in social networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">K</forename><surname>Szymanski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Knowledge Discovery and Data Mining</title>
		<meeting><address><addrLine>Berlin Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2012" />
			<biblScope unit="page" from="25" to="36" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A game-theoretic framework to identify overlapping communities in social networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Data Mining and Knowledge Discovery</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="224" to="240" />
			<date type="published" when="2010-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Balanced multi-label propagation for overlapping community detection in social networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Zhihao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Youfang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computer Science and Technology</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="468" to="479" />
			<date type="published" when="2012-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">LabelRank: a stabilized label propagation algorithm for community detection in networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Jierui</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">K</forename><surname>Szymanski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE 2nd Network Science Workshop (NSW)</title>
		<meeting><address><addrLine>West Point, NY</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2013-05-01" />
			<biblScope unit="page" from="138" to="143" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Finding and evaluating community structure in networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">E J</forename><surname>Newman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Girvan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physical Review E</title>
		<imprint>
			<biblScope unit="volume">69</biblScope>
			<biblScope unit="issue">2</biblScope>
			<date type="published" when="2004-02" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Detecting the overlapping and hierarchical community structure in complex networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Lancichinetti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Fortunato</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kert¨¦sz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">New Journal of Physics</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">3</biblScope>
			<date type="published" when="2009-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Collective dynamics of &apos;small-world&apos; networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">J</forename><surname>Watts</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">H</forename><surname>Strogatz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">393</biblScope>
			<biblScope unit="issue">6684</biblScope>
			<biblScope unit="page" from="440" to="442" />
			<date type="published" when="1998-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Benchmarks for testing community detection algorithms on directed and weighted graphs with overlapping communities</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Lancichinetti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Fortunato</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physical Review E</title>
		<imprint>
			<biblScope unit="volume">80</biblScope>
			<biblScope unit="issue">1</biblScope>
			<date type="published" when="2009-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Detecting highly overlapping community structure by greedy clique expansion</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">4th SNA-KDD Workshop</title>
		<imprint>
			<date type="published" when="2010-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Finding statistically significant communities in networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Lancichinetti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Radicchi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Ramasco</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Fortunato</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PloS One</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">4</biblScope>
			<date type="published" when="2011-04" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
