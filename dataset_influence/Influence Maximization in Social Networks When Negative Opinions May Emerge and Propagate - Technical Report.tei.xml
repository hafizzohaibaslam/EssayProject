<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 D:\grobid-master\grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.1-SNAPSHOT" ident="GROBID" when="2018-07-16T23:55+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Influence Maximization in Social Networks When Negative Opinions May Emerge and Propagate *</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2010-10">October 2010</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wei</forename><surname>Chen</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Collins</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rachel</forename><surname>Cummings</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Te</forename><surname>Ke</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zhenming</forename><surname>Liu</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Rincon</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiaorui</forename><surname>Sun</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yajun</forename><surname>Wang</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wei</forename><surname>Wei</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yifei</forename><surname>Yuan</surname></persName>
						</author>
						<title level="a" type="main">Influence Maximization in Social Networks When Negative Opinions May Emerge and Propagate *</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2010-10">October 2010</date>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>influence maximization</term>
					<term>social networks</term>
					<term>nega- tive opinions</term>
					<term>independent cascade model</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Influence maximization, defined by Kempe, Kleinberg, and Tardos (2003), is the problem of finding a small set of seed nodes in a social network that maximizes the spread of influence under certain influence cascade models. In this paper, we propose an extension to the independent cascade model that incorporates the emergence and propagation of negative opinions. The new model has an explicit parameter called quality factor to model the natural behavior of people turning negative to a product due to product defects. Our model incorporates negativity bias (negative opinions usually dominate over positive opinions) commonly acknowledged in the social psychology literature. The model maintains some nice properties such as submodularity, which allows a greedy approximation algorithm for maximizing positive influence within a ratio of 1 ? 1/e. We define a quality sensitivity ratio (qs-ratio) of influence graphs and show a tight bound of 成(n/k) on the qs-ratio, where n is the number of nodes in the network and k is the number of seeds selected, which indicates that seed selection is sensitive to the quality factor for general graphs. We design an efficient algorithm to compute influence in tree structures, which is nontrivial due to the negativity bias in the model. We use this algorithm as the core to build a heuristic algorithm for influence maximiza-tion for general graphs. Through simulations, we show that our heuristic algorithm has matching influence with a standard greedy approximation algorithm while being orders of magnitude faster.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>i=0</head><p>Proof.</p><p>It is sufficient to show that for v ﹋ G with d G (S, v) = i, the equality pap G (v, S, q) = q i+1 holds. We prove this statement by induction. The base case for i = 0 is immediate because every node in the seed set is activated and has probability exactly q being positive. Now consider a node v with d G (S, v) = i ≡ 1. Let U be the set of incoming neighbors of v that are at distance i ? 1 from S. Clearly, all nodes U are activated at time i ? 1 because of the assumption p(e) = 1, and v will be activated at time i. In our model, v will be activated by one of the nodes in U which is chosen at random. By induction, every node in U is positive with probability q i . Therefore, v will be activated to be positive with probability q i+1 no matter which node in U activates v at time i. The lemma follows by taking summation over all nodes.</p><formula xml:id="formula_11">A set function f on vertices of graph G = (V, E, p) is a function f : 2 V ↙ R. Set function f is monotone if f (S) ≒ f (T ) for all S ? T , and it is submodular if f (S ﹍ {u}) ? f (S) ≡ f (T ﹍ {u}) ? f (T ) for all S ? T and u ﹋ V \ T .</formula><p>THEOREM 2.1. For any influence graph G = (V, E, p), when fixing a quality factor q, set function 考 G (S, q) on S is monotone, submodular, and 考 G (?, q) = 0.</p><p>Proof. Notice that</p><formula xml:id="formula_12">考 G (S, q) = Pr G (G ) q d G (S,v)+1 . G ﹋? G v﹋V Define Q v (S) = q d G (S,v)+1 . It is sufficient to show that Q v (S) is monotone and submodular. Clearly, Q v (S) is Algorithm 2 Greedy(k, f ) 1: initialize S = ? 2: for i = 1 to k do 3: select u = arg max w﹋V \S (f (S ﹍ {w}) ? f (S))</formula><p>4: S = S ﹍ {u} 5: end for 6: output S the goal of finding such q * via the notion of sensitivity and prove that the approach of finding the "universally good" q * does not work, which suggests that the problem of maximizing positive influence spread in general graphs requires the knowledge of q.</p><p>Let S * G,k (q) = argmax S?V,|S|=k 考 G (S, q) denote the set of all possible optimal seed sets of size k under a given q, and let 考 * G,k (q) denote the maximum positive influence spread with k seeds under q, i.e., 考 * monotone because adding extra elements to the seed set S can only decrease the quantity d G (S, v). It remains to show that the function is also submodular.</p><p>Let</p><formula xml:id="formula_13">S ? T ? V and u ﹋ V \ T . Clearly, d G (S, v) ≡ d G (T, v). If d G (u, v) ≡ d G (S, v), we have Q v (S ﹍ {u}) ? Q v (S) = Q v (T ﹍ {u}) ? Q v (T ) = 0. If d G (u, v) ≒ d G (T, v), we have Q v (S ﹍ {u}) ? Q v (S) = Q v (T ﹍ {u}) ? Q v (S) ≡ Q v (T ﹍ {u}) ? Q v (T ) as Q v (﹞) is monotonically increasing. The only remaining case is d G (T, v) &lt; d G (u, v) &lt; d G (S, v). In such case, Q v (S ﹍ {u}) ? Q v (S) &gt; 0 = Q v (T ﹍ {u}) ? Q v (T ). Therefore, Q v (﹞)</formula><p>is monotone and submodular.</p><p>With Theorem 2.1, we can apply the result in <ref type="bibr" target="#b19">[20]</ref> to obtain a greedy approximation algorithm that achieves 1 ? 1/e approximation ratio for the influence maximization problem. Algorithm 2 shows the greedy algorithm with a generic monotone and submodular set function f , which would be replaced by 考 G (S, q) in our case for any fixed q. The algorithm iteratively selects a new seed u that maximizes the incremental change of f into the seed set S until k seeds are selected.</p><p>The greedy algorithm relies on an efficient computation of 考 G (S, q) given set S. However, as pointed out in <ref type="bibr" target="#b3">[4]</ref>, even when q = 1 computing 考 G (S, q) is #P-hard. Thus following <ref type="bibr" target="#b9">[10]</ref> we use Monte-Carlo simulations of the IC-N model to estimate 考 G (S, q). In this case we can achieve an approximation ratio of 1 ? 1/e ? where is small if we use a large number of simulations to estimate 考 G (S, q).</p><p>The theoretical running time of the greedy algorithm is O(knmR), where k, n, m, and R are the number of seeds, number of nodes, number of edges, and number of simulations, respectively. In the actual implementation used for our experiments, we apply optimization techniques such as the lazy-foward method proposed in <ref type="bibr" target="#b15">[16]</ref> to speed up the running time.</p><p>G,k (q) = max S?V,|S|=k 考 G (S, q). The subscripts G and k may be dropped whenever they are clear from the context.</p><p>Fix a small constant c ﹋ (0, 1). For a given seed set S of size k, we define the quality sensitivity ratio (qs-ratio) of S to be the maximum ratio between the optimal influence spread under q and the influence spread of S under q , that is, *</p><formula xml:id="formula_14">qsr G,k (S) = max 考 G,k (q) 考 G (S, q)</formula><p>.</p><formula xml:id="formula_15">q﹋[c,1]</formula><p>Intuitively, the qs-ratio of seed set S indicates how well S is as a representive under different q: if its qs-ratio is close to 1, then S could be used across different q values (i.e. S is insensitive to q), but if its qs-ratio is large, S is not a good seed set under some q's (i.e. S is sensitive to q). The reason we need a small constant c to bound q away from 0 is because very poor quality is unlikely to happen in practice and mathematically it is a singular point. Given a quality factor q, we define the quality sensitivity ratio of q to be the minimum qs-ratio among all the optimal seed sets under q, that is,</p><formula xml:id="formula_16">qsr G,k (q) = min S﹋S * G,k (q) qsr G,k (S).</formula><p>The reason we take the minimum over all optimal seed sets is to (optimistically) consider the best case where some algorithm may find the optimal seed set with the best qsratio. Finally, the quality sensitivity ratio of the influence graph G under target seed set size k is the minimum qs-ratio among all q values, that is,</p><formula xml:id="formula_17">(3.1) qsr G,k = min q﹋[c,1]</formula><p>qsr G,k (q).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Quality Sensitivity in Influence Maximization</head><p>Since obtaining quality factor q and incorporating it into influence maximization complicates the matter, one may wish to find a constant q * that is "universally good enough" for a network, in the sense that the optimal seeds found under q * in the network is reasonably effective regardless of the true value of q. In the rest of this section, we formalize</p><p>The metric qsr G,k indicates that, if we want to use one q value and one optimal seed set S * under q to work for other possible q values, the best an algorithm can do is to select a q * that achieves min qsr(q) and an S * that achieves min S﹋S * (q * ) qsr(S), but in this case there could be some other q such that the ratio between the optimal influence spread under q and the influence spread achieved by S * under q is qsr G,k . One may suggest an alternative definition of qsr G,k as the minimum qs-ratio among all possible choices of seed set S, i.e., qsr G,k = min S?V,|S|=k qsr G,k (S). However, this definition requires directly looking for a seed set among all possible choices to minimize the qs-ratio, which is a different computational task and is likely to be computationally infeasible. As discussed above, our definition in Equation (3.1) is trying to capture the scenario where we already have an algorithm finding the optimal seeds under one quality factor q (e.g. q = 1), so we are asking to what extent we can use this seed set for other possible quality factor values. If in general the influence graphs are not quality sensitive (qs-ratio is close to 1), then we may not need to design an algorithm that works for different quality factors. If this is not the case, then algorithms incorporating quality factors may be necessary. For this purpose, we use the definition of Equation (3.1).</p><p>We now give tight upper bounds on both qsr(q) and qsr. Let n = |V | be the number of nodes in the graph. We shall show that for any graph and any k, the following inequalities hold qsr G,k (q) ≒ n/k and qsr G,k ≒ n ck . On the other hand, we may indeed be able to construct a family of graphs so that qsr G,k (q) = ?(n/k) and qsr = ?( n k ). These results suggest that there exists a family of influence graphs so that an inappropriate assumption over the value of q will result in the worst possible outcome in terms of multiplicative errors, which could be as large as ?( ﹟ n).</p><p>LEMMA 3.2. For any influence graph G and target seed set size k, qsr G,k ≒ n ck . Proof. Suppose on the contrary qsr G,k = n ck + 污 with 污 &gt; 0, we will be able to find contradiction as follows. First, let q 1 = 1 and let S 1 be an arbitrary element in S * G,k (q 1 ). Then by the definition of qsr G,k , there exists an element</p><formula xml:id="formula_18">q 2 &lt; q 1 such that 考 * G,k (q 2 ) &gt; n ck 考 G (S 1 , q 2 )</formula><p>. Now let S 2 be an arbitrary element in S * G,k (q 2 ). Again, there exists a</p><formula xml:id="formula_19">q 3 such that 考 * G,k (q 3 ) &gt; n ck 考 G (S 2 , q 3 ). In case q 3 &gt; q 2 , then we have 考 * G,k (q 3 ) &gt; n ck 考 G (S 2 , q 3 ) ≡ n ck 考 G (S 2 , q 2 ) = n ck 考 * G,k (q 2 ).</formula><p>The second inequality holds because by Corollary 2.1,</p><formula xml:id="formula_20">考 G (S, q)</formula><p>is an increasing function with respect to q . On the other hand,</p><formula xml:id="formula_21">考 * G,k (q 2 ) &gt; n ck 考 G (S 1 , q 2 ) ≡ LEMMA 3.1.</formula><p>For any graph G, any integer k, and any q ﹋ [c, 1], we have qsr(q) ≒ n/k. Furthermore, for any constant k and q ﹋ [c, 1], there exists a family of influence graphs such that qsr G,k (q) = ?(n/k). In particular, when the integer k and q ﹋ [c, 1] are given, there exists an N and a sequence of graphs G = {G N , G N +1 , G N +2 , ...} with |V (G i )| = i such that for any G n ﹋ G, we have qsr Gn,k (q) = ?(n/k).</p><p>n ck ﹞ ck, where the last inequality is due to the fact that there are always k seeds, each of which would be positive with probability q 2 ≡ c.</p><formula xml:id="formula_22">Thus, 考 * G,k (q 3 ) &gt; n ck ﹞ n ck ﹞ ck = n, which is a contradiction.</formula><p>The value q 3 , therefore, is small than q 2 . Through the same argument, we may find q 4 &lt; q 3 such that 考 * G,k (q 4 ) &gt; n ck 考(S 3 , q 4 ), where S 3 ﹋ S * G,k (q 3 ). In general we can find a monotone decreasing sequence q i (i ﹋ N) with 考 * G,k (q i ) &gt; n ck 考(S i?1 , q i ), where S i?1 ﹋ S *</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proof.</head><p>First, we have 考 * G,k (q) ≒ qn because the total size of the active node set is ≒ n, and with probability at most q, an active node is positive. Meanwhile, 考 G (S, q) ≡ qk for any S with size k because the seed set has to be activated and among these seeds in the seed set, the expected number of positively activated nodes is</p><formula xml:id="formula_23">qk. Therefore, 考 * G,k (q)/考 G (S, q) ≒ n/k, which implies max q﹋[c,1] 考 * G,k (q)/考 G (S, q) ≒ n/k for any S with size k. Finally, qsr G,k (q) = min S﹋S * G,k (q) qsr G,k (S) ≒ n/k.</formula><p>For the second part of the Lemma, we shall show that for any k and q, there exists a sufficiently large integer N and a sequence of graphs G = {G N , G N +1 , ..., } such that qsr G N ,k (q) = ?(n/k).</p><p>When q = 1, our family of graphs consists of 2k disjoint components {C G,k (q i?1 ). The sequence q 1 , q 2 , ..., is a monotone decreasing sequence with a common lower bound c. Thus, the limit lim i↙﹢ q i exists. Now let = 污ck. By the fact that the sequence q i has a limit and 考 G (S, q) is continuous in q (Corollary 2.1), for any subset S of nodes with size k, there exists a number N G (S) such that for any n &gt; N G (S) we have 考 G (S, q n?1 ) ? 考 G (S, q n ) ≒ Let N = max{N G (S) : S ? V and |S| = k}. We have  LEMMA 3.3. There exists a family of influence graphs G = {G n } such that qsr G,k = ?( n/k) for n being sufficiently large. THEOREM 3.1. For any influence graph G and target seed set size k, we have qsr G,k ≒ n ck , and for any q ﹋ [c, 1], qsr(q) ≒ n k . Moreover, there exist families of graphs such that the above upper bound is tight up to a constant factor. Since the qs-ratio for general graphs could be quite large as shown by the above theorem, it is worthwhile to invest in algorithms that explicitly incorporate quality factor q. In practice, q could be estimated by quality testing and focus group studies, and thus it is reasonable to assume that an estimate on q is available for influence maximization. </p><formula xml:id="formula_24">考 * G,k (q N +1 ) &gt; n ck 考 G (S N , q N +1 ) ≡ n ck (考 G (S N , q N ) ? * 1 = n ck 考 G,k (q N ) ? 1 , ..., C 1 2 2 1 k , C 1 , ..., C k }, in</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Computing Influence in Arborescences</head><p>Proof. Our family of graphs consists of 2k disjoint components {C</p><formula xml:id="formula_25">1 1 , C 1 2 , ..., C 1 2 2 2 1 k , C 1 , C 2 , ..., C k }, in which C i (i ﹋ [k])</formula><p>are stars of size n 1 = n k with edge directions pointing away from the center of the star, and C Now the computation of qsr G,k is immediate: when q = 1, the set S * G,k consists of a unique element S 1 , which is the set of all roots of lines; when q &lt; 1, the set S * G,k</p><p>consists of a unique element S 2 , which is the set of all centers of the stars (for large enough n). Therefore,</p><formula xml:id="formula_26">qsr G,k (1) = * max q﹋[c,1] 考 G,k (q) * 考 G (S1,q) = 1 4</formula><p>n k since 考 G,k (q) = q 2 n 1 k and 考 G (S 1 , q) ＞ qk/(1 ? q) for q &lt; 1 and a sufficiently large n. And for q &lt; 1, we have qsr G,k (q) = n 2 /n 1 = n k ? 1. Summing up above, we obtain the desired result qsr G,k = ?( n/k).</p><p>As pointed out in <ref type="bibr" target="#b3">[4]</ref>, computing influence spread in a general influence graph in the IC model is #P-hard. In this section, we show an efficient algorithm to compute influence spread in tree structures. This algorithm will be used in Section 5 to derive an efficient heuristic for influence maximization. An in-(or out-) arborescence is a directed tree where all edges point into (or away from) the root. Consider an arborescence A = (V, E, p) with p as the propagation probability function on edges. Fix a seed set S ? V and a quality factor q. We study the algorithm that computes the positive influence spread 考 A (S, q) in A. Since A, q, and S are fixed in this section, we will omit them in our notations.</p><p>For any u ﹋ V , let pap(u) denote the positive activation probability of u, which is the probability that u is positive after the influence cascade ends in A. It is clear that 考 A (S, q) = u﹋V pap(u), so we focus on the computation of pap(u).</p><p>If A is an out-arborescence, the computation is straightforward and is summarized by the following lemma.</p><p>Remark Notice that the components C 1 2 i and C i actually suggest two different topologies, in which finding the seed set critically depends on the actual value of q. Lines and stars are extreme examples that yield largest qsr. In fact, when lines are substituted by degree bounded trees (e.g., tree with width log n), the qsr value will still be bad (e.g., qsr G,k = ? ?( n k )) when the tree width is log n). The moral of the lemma is that when the graph contains two different kind of structures, where one structure has fast neighborhood growth initially but small overall reach and the other structure has slow neighborhood growth but large overall reach, the optimal choice of the seed set may critically depend on the product's quality. With high quality factor, we prefer to choose structures with a large reachable set, but with a low quality factor, we prefer to choose structures that have large immediate neighborhood, since when influence are propagated in multiple hops, it is likely that someone in the chain will dislike the product if the quality factor is low. LEMMA 4.1. For an out-arborescence A and a node u in A. Let path(u) denote the path from seed s in S to u in A that has the minimum length among all such paths (? if no such path exists). Let E(path(u)) denote the edge set of the path and |path(u)| is the length of the path. Then we have pap(u) = e﹋E(path(u)) p(e) ﹞ q |path(u)|+1 if path(u) = ?, and otherwise pap(u) = 0.</p><p>Summing up above, we have the following theorem.</p><p>With the above lemma, it is easy to see that we can compute the positive influence spread 考 A (S, q) in one traversal of the out-arborescence. On the contrary, computing the positive influence spread in an in-arborescence is more involved. For the rest of this section, let A be an in-arborescence, and we focus on computing pap(u) in A.</p><p>Let ap(u) denote the activation probability of u, which is the probability that u is activated (positive or negative) after the influence cascade ends in A. As described already in <ref type="bibr" target="#b3">[4]</ref>, computing ap(u) (or equivalently pap(u) when q = 1) is easily done using the following recursive formula ap(u) = 1 ? w﹋N in (u) (1 ? ap(w)p(w, u)), with the boundary condition ap(s) = 1 for all s ﹋ S, and ap(u) = 0 for all non-seed leaves u. However, once negative opinions may emerge in the network (q &lt; 1), the situation changes significantly for computing pap(u). Suppose now that some of u's in-neighbors are positive and some are negative. Because of the negativity bias in the IC-N model, in particular negative neighbors will only make u negative while positive neighbors may make u positive or negative, the influence result on u depends on the order of the activation attempts of u's neighbors. This order is affected by two factors: (a) the time steps at which neighbors of u are activated, and (b) the random permutation among the neighbors who are activated at the same time step. A direct recursive formulation of pap(u) requires a summation of all possible combinations of u's neighbors activation steps and all possible random permutations, which is exponential to the size of the graph and the number of seeds. In the following, we use the dynamic programming method to give an efficient algorithm to compute pap(u). The computation is divided into two steps.</p><p>The recursive computation given in Formula (4.2) can be easily carried out by using the dynamic programming method and traversing the arborescence from the leaves to the root. Let h be the height of the arborescence A, k = |S| be the number of seeds, n = |V | be the number of nodes in A, and be the number of possible steps that the root of A could be activated in A. It is straightforward to see that ≒ min(k, h). Therefore, computing all ap(u, t)'s for all u ﹋ V and all possible t's using Formula (4.2) and dynamic programming takes O( = O(min(k, h)n) time.</p><p>Computing pap(u, t). Let pap(u, t) denote the probability that u is activated and turns positive at step t, for any integer t ≡ 0. The following lemma shows that pap(u, t) can be easily derived from ap(u, t).</p><p>LEMMA 4.3. For any u ﹋ V and any integer t ≡ 0, we have</p><formula xml:id="formula_27">(4.3) pap(u, t) = ap(u, t) ﹞ q t+1 .</formula><p>Computing ap(u, t). Let ap(u, t) denote the probability that u is activated at step t, for any integer t ≡ 0. Thus we have ap(u) = t≡0 ap(u, t). The following lemma shows a recursive formula for ap(u, t).  ap(u, t) = Proof. The cases for t = 0 or u ﹋ S are trivial. Consider the case where t &gt; 0 and u ﹋ S. Let E be the event that u is activated at step t. Thus ap(u, t) = Pr(E). Let P be the set of all paths from some node s ﹋ S to u with length t. Since u is activated at step t, u must be activated along one of the paths in P. For 羽 ﹋ P, let Pr(羽 | E) denote the conditional probability that u is activated through path 羽 conditioned on u being activated at step t. According to the IC-N model, when u is activated through path 羽 ﹋ P, u becomes positive if and only if all nodes on the path become positive, the probability of which is q t+1 . Therefore, we have</p><formula xml:id="formula_28">? ? ? ? ? ? ? ? pap(u, t) = Pr(E) Pr(羽 | E)q t+1 = ap(u, t)q t+1 . 羽﹋P ? ? ? ? ? ? ? 1 t = 0 ＿ u ﹋ S, 0 t = 0 ＿ u ﹋ S, 0 t &gt; 0 ＿ u ﹋ S, w﹋N in (u) [1 ? t?2 i=0 ap(w, i)p(w, u)] ? w﹋N in (u) [1 ? t?1 i=0 ap(w, i)p(w, u)] t &gt; 0 ＿ u ﹋ S.</formula><p>Proof. The cases of t = 0 or u ﹋ S are trivial. Consider the case t &gt; 0 and u ﹋ S. For an in-neighbor w ﹋ N in (u), ap(w, i)p(w, u) is the probability that w is activated at step i and edge (w, u) is also activated, which means u will be activated in step i + 1 if u is not already activated. Since the events of w being activated at a step i for different i's are mutually exclusive, 1 ? t?2 i=0 ap(w, i)p(w, u) is the probability that u is not activated by w at step t ? 1 or earlier. Thus w﹋N in (u) [1 ? t?2 i=0 ap(w, i)p(w, u)] is the probability that u is not activated (by any of its inneighbors) at step t?1 or earlier. Note that as the convention, ?1 i=0 ap(w, i)p(w, u) = 0 so the above is still true for t = 1. Similarly,</p><formula xml:id="formula_29">w﹋N in (u) [1 ? t?1 i=0 ap(w, i)p(w, u)]</formula><p>is the probability that u is not activated (by any of its inneighbors) at step t or earlier. Therefore, their difference is exactly the probability that u is activated at step t, which is ap(u, t).</p><p>With Formula (4.3), we obtain the positive activation probability pap(u) = t≡0 pap(u, t), and the influence spread 考 A (S) = u﹋V pap(u). Therefore, we obtain the following result. THEOREM 4.1. Formulae (4.2),(4.3) together provide an efficient computation of influence spread in an in-arborescence A, with time complexity O( = O(min(k, h)n), where k, h, and n are the number of possible steps in which the root of A could be activated, the number of seeds, the height of A, and the number of nodes in A, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">MIA Algorithm for IC-N</head><p>The greedy algorithm (Algorithm 2) is slow because it lacks of an efficient way of computing the positive influence spread given a seed set. In this section, we develop a heuristic algorithm that uses arborescences to approximate local influence regions of the node, and uses the algorithm of Section 4 to compute influence spread efficiently in arborescences. The key points are that influence from a node is typically restricted to the local neighborhood region of the node, and that the computation of influence spread could be performed efficiently by the algorithm in Section 4.</p><p>For a path P = = p 1 , p 2 , . . . , p m = v we define the positive propagation probability of the path, ppp(P ), as</p><p>The maximum influence out-arborescence MIOA(v, q, 牟) is:</p><formula xml:id="formula_30">MIOA(v, q, 牟) = ﹍ u﹋V,ppp(MIP(v,u))≡牟 MIP (v, u). ppp(P ) = 旭 m?1 i=1 p(p i , p i+1 ) ﹞ q m .</formula><p>Intuitively the probability that u activates v through path P and makes v positive is ppp(P ), because it needs to activate all nodes along the path and all nodes along the path turn positive. To approximate the actual expected influence within the social network, we propose to use the maximum influence path (MIP ) to estimate the influence from one node to another. Let P(G, u, v) denote the set of all paths from u to v in influence graph G.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>DEFINITION 1. (MAXIMUM INFLUENCE PATH)</head><p>For influence graph G, we define the maximum influence path MIP (u, v) from u to v in G as Intuitively, MIIA(v, q, 牟) and MIOA(v, q, 牟) give the local influence regions of v, and different values of 牟 controls the size of these local influence regions. Given a set of seeds S in G and the in-arborescence MIIA(v, q, 牟) for some v ﹋ S, we approximate the IC-N model by assuming that the influence from S to v is only propagated through edges in MIIA(v, q, 牟). With this approximation, we can calculate the probability that v is activated given S exactly, using the algorithm given in Section 4. We refer to our model of restricting influence through local arborescences as the MIA model.</p><p>Let ?(S, q) denote the positive influence spread of S in our MIA model, in influence graph G with quality factor q. Let pap(v, S, A, q) be the positive activation probability of v in in-arborescence A with seed set S and quality factor q. Then we have <ref type="bibr">(5.4)</ref> ?(S, q) = MIP (u, v) = arg max pap(v, S, MIIA(v, q, 牟), q).</p><formula xml:id="formula_31">P {ppp(P ) | P ﹋ P(G, u, v)}.</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>v﹋V</head><p>Ties are broken in a predetermined and consistent way, such that MIP (u, v) is always unique, and any subpath in MIP (u, v) from x to y is also the MIP (x, y).</p><formula xml:id="formula_32">If P(G, u, v) = ?, we denote MIP (u, v) = ?.</formula><p>Note that for each edge (u, v) in the graph, if we add a distance weight ? log(p(u, v)q) on the edge, then MIP (u, v) is simply the shortest path from u to v in the weighted graph G. Therefore, the maximum influence paths and the later maximum influence arborescences directly correspond to shortest paths and shortest-path arborescences, and thus they permit efficient algorithms such as Dijkstra algorithm to compute them.</p><p>For a given node v in the graph, we propose to use the maximum influence in-arborescence (MIIA), which is the union of the maximum influence paths to v, 1 to estimate the influence to v from other nodes in the network. We use an influence threshold 牟 to eliminate MIPs that have too small propagation probabilities. Symmetrically, we also define maximum influence out-arborescence (MIOA) to estimate the influence of v to other nodes.</p><p>We are interested in finding a set of seeds S of size k such that ?(S, q) is maximized. As already pointed out in <ref type="bibr" target="#b3">[4]</ref>, results in <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b8">9]</ref> imply that maximizing ?(S, q) is still hard, even to any approximation factor within 1 ? 1/e + for any &gt; 0.</p><p>Nevertheless, we have that ?(S, q) for any given q is still submodular and monotone, because every pap(v, S, MIIA(v, q, 牟), q) is submodular and monotone. Therefore, the greedy Algorithm 2 with influence spread computed by algorithm in Section 4 achieves 1 ? 1/e approximation ratio for the influence maximization problem in the MIA model. The important point of the algorithm is that, when a new seed u is selected, we only need to update the incremental influence spread of nodes w ﹋ MIIA(v, q, 牟) where v ﹋ MIOA(u, q, 牟), since other nodes are not affected by the selection of u. The full pseudocode of the algorithm, given in Algorithm 3 for completeness, mostly deals with how incremental influence spread of every node is initialized and updated and is omitted due to space constraint. We denote the full algorithm as MIA-N.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>DEFINITION 2. (MAXIMUM INFLUENCE IN(OUT)-ARBO-RESCENCE)</head><p>For an influence threshold 牟, the maximum influence in-arborescence of a node v ﹋ V , MIIA(v, q, 牟), is THEOREM 5.1. Algorithm MIA-N finds a seed set S of size k, the influence spread of which is guaranteed to be within 1 ? 1/e of the optimal influence spread in the MIA model.</p><formula xml:id="formula_33">MIIA(v, q, 牟) = ﹍ u﹋V,ppp(MIP(u,v))≡牟 MIP (u, v).</formula><p>1 Since we break ties in maximum influence paths consistently, the union of maximum influence paths to a node does not have undirected cycles, and thus it is indeed an arborescence.</p><p>Running time. We discuss the running time of algorithm MIA-N. Let n = |V | be the number of nodes in the graph. Let n i = max v﹋V {|MIIA(v, q, 牟)|} and n o = max v﹋V {|MIOA(v, q, 牟)|}. Let h max denote the maximum height among all MIIA(v, q, 牟)'s. Computing MIIA(v, q, 牟) and MIOA(v, q, 牟) can be done using efficient implementations of Dijkstra's shortest-path algorithm. Assume the</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm 3 MIA-N(G, q, k, 牟)</head><p>1: /* initialization */ 2: set S = ? 3: set actual (v) = 0 for each node v ﹋ V 4: for each node v ﹋ V do <ref type="bibr">5:</ref> compute MIIA(v, q, 牟), MIOA(v, q, 牟) IncInf (v) = u﹋MIOA(v,q,牟) IncInf (v, u) 9: end for 10: /* main loop */ 11: for i = 1 to k do pick u = arg max v﹋V \S {IncInf (v)} 13:</p><formula xml:id="formula_34">S = S ﹍ {u} /* u is selected as a new seed */ 14:</formula><p>/* update incremental influence spreads*/ Note: Directed graphs are treated as undirected graphs in these statistics.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>15:</head><p>for v ﹋ MIOA(u, q, 牟) \ {u} do 16:</p><formula xml:id="formula_35">actual (v) += IncInf (u, v) /* incremental influ- ence from u to v is realized */ 17:</formula><p>for each w ﹋ MIIA(v, q, 牟) do </p><formula xml:id="formula_36">? = pap(v) ? actual (v) 20:</formula><p>IncInf (w) += ? ? IncInf (w, v)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>21:</head><p>IncInf (w, v) = ?</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>22:</head><p>end for</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>23:</head><p>end for 24: end for 25: return S max-heap takes O(log n) time. Hence the running time for the main loop is O(kn o n i (min(k, h max )n i + log n)). Therefore, the total running time of MIA-N is O(nt o + kn o n i (min(k, h max )n i + log n)).</p><p>Since propagation probability along a path drops exponentially fast in general, for large n and a reasonable range of 牟 values, n i , n o , and t o are significantly smaller than n, and thus our algorithm should have good efficiency, as demonstrated by our experiments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Experiments</head><p>maximum running time to compute MIIA(v, q, 牟) (resp. MIOA(v, q, 牟)) for any v ﹋ V is t i (resp. t o ). Notice that n i = O(t i ) and n o = O(t o ).</p><p>The initialization part of MIA-N needs to compute MIIA(v, q, 牟) and MIOA(v, q, 牟) for all v ﹋ V . We only need to compute and store all MIOA(v, q, 牟)'s using the Dijkstra shortest-path algorithm, since MIIA(v, q, 牟) can be easily obtained from MIOA(v, q, 牟)'s. Initializing incremental influence spread is done by computing pap(u, {v}, MIIA(u, q, 牟), q) for all u ﹋ MIOA(v, q, 牟) with Lemma 4.1, which takes O(|MIOA(v, q, 牟)|) time. We use a max-heap to store incremental influence spread of every node, which takes O(n) time. Therefore, initialization takes O(nt o ) totally.</p><p>The main part of MIA-N has k iterations, each of which selects a new seed u and then updates the incremental influence spread for every w ﹋ MIIA(v, q, 牟) where v ﹋ MIOA(u, q, 牟), so total number of updates in each iteration is O(n o n i ). In each update, pap(v, S ﹍ {w}, MIIA(v, q, 牟), q) with the new seed set S needs to be computed, which uses the algorithm in Section 4 and takes O(min(k, h max )n i ) time. Updating the entry on the We implement both the greedy algorithm and the MIA-N algorithm, and conduct experiments on these two algorithms using three real-world networks as well as synthetic networks. We are interested in comparing both the influence spread and the running time of the two algorithms. We do not include other heuristics such as degree or distance centrality based heuristics or PageRank style algorithms, because none of them takes into account the quality factor q in the IC-N model, and thus by our quality sensitivy study they cannot be applied as a general solution to all social networks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Experiment setup</head><p>Dataset. We use three real-world networks of increasing sizes in our experiments. The first dataset, NetHEPT, is an academic collaboration network extracted from the "High Energy Physics -Theory" section (form 1991 to 2003) of the e-print arXiv (http://www.arXiv.org). The nodes in NetHEPT are authors and an edge between u and v means u and v coauthored a paper (we allow multiple edges between a pair of nodes). The second dataset, WikiVote, is a voting history network from Wikipedia <ref type="bibr" target="#b14">[15]</ref>, where nodes represent Wikipedia users, and a directed edge from u to v means v voted on u (for promoting u to adminship). The third dataset, Epinions, is a Who-trust-whom network of  Epinions.com <ref type="bibr" target="#b13">[14]</ref>, where nodes are members of the site and a directed edge from u to v means v trusting u (and thus u has influence to v). Note that for WikiVote and Epinions, we reverse the edge directions from the original graphs, since we are studying influence and we interpret v voting u or trusting u as u having an influence on v. Basic statistics about these networks are given in <ref type="table" target="#tab_0">Table 1</ref>. We also use synthetic powerlaw degree graphs generated by the DIGG package <ref type="bibr" target="#b6">[7]</ref> to test the scalability of our algorithm with different sized graphs of the same feature.</p><p>For propagation probability on edges, we use the weighted cascade model proposed in <ref type="bibr" target="#b9">[10]</ref>. In this model, p(u, v) for an edge (u, v) is 1/d(v), where d(v) is the indegree of v. Algorithms. We evaluate both MIA-N and the Greedy algorithm. For the greedy algorithm, we use the lazyforward optimization of <ref type="bibr" target="#b15">[16]</ref> to speed up the computation. For each candidate seed set S, 20000 simulations are run to obtain an accurate estimate of the influence spread. For MIA-N, the 牟 parameter is chosen as 1/160 for all of our tests. A method of choosing 牟 is given in <ref type="bibr" target="#b3">[4]</ref>, and for IC-N the method is the same. To obtain the influence spread of the MIA-N algorithm, for each seed set, we run the simulation on the networks 20000 times and take the average of the influence spread, which matches the accuracy of the greedy algorithm.</p><p>The experiments are run on a server with 2.33GHz Quad-Core Intel Xeon E5410 and 32G memory running on Microsoft Windows Server 2003.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Experiment results</head><p>Quality factor on influence spread. We first run the greedy algorithm on NetHEPT to select up to 50 seeds, with the quality factor q taking values from 0.5 to 1. <ref type="figure" target="#fig_6">Figure 2</ref> shows the result of this test. Clearly, when q increases, the positive influence spread increases in a superlinear trend.</p><p>For example, when q doubles from 0.5 to 1, the influence spread increases about 7.2 times (averaging from k = 1 to k = 50). The reason is due to negativity bias -if the product quality drops, the negative influence would be more dominant, and the loss in positive influence spread is more than the simple proportion of those people directly experiencing the slip of product quality. Therefore, the result suggests that maintaining a high product quality is very important in achieving a high influence spread.</p><p>Positive influence spread and running time on real-world datasets. <ref type="figure" target="#fig_12">Figures 3 and 4</ref> show the influence spread results for the three networks. For ease of reading, the legend of each figure lists the algorithms in the same order as their corresponding influence spread with 50 seeds. All figures show that the performance of MIA-N consistently matches the performance of the greedy algorithm in all three networks, and for different quality factors (tested for NetHEPT for q = 0.7 and q = 0.9). <ref type="figure" target="#fig_14">Figure 4</ref>(a) also shows the influence spread of randomly selecting seeds, which is significantly worse than the greedy algorithm and MIA-N. This is consistent with previous reported results, and we omit reporting results of random seed selection for other datasets. On the other hand, <ref type="figure" target="#fig_15">Figure 5</ref>(a) shows that in all   Scalability of MIA-N. We further test the scalability of MIA-N algorithm by using a family of synthetic power-law graphs generated by the DIGG package <ref type="bibr" target="#b6">[7]</ref>. We generate graphs with doubling number of nodes, from 2K, 4K, up to 256K, using power-law exponent of 2.16. Each size has 10 different random graphs and our running time result is the average among the runs on these 10 graphs. We run both the greedy algorithm and MIA-N to select 50 seeds for each graph. The result in <ref type="figure" target="#fig_15">Figure 5</ref>(b) clearly shows that our MIA-N scales almost linearly with the size of the graph, and scales much better than the greedy algorithm (e.g. MIA-N only takes 11 minutes to finish in a graph of 256K nodes and 353K edges while the greedy algorithm takes more than 2 hours to finish a graph four times smaller). The greedy algorithm has a much steeper curve mainly because it requires a large number of simulations to estimate influence spread accurately. Reducing the number of simulations in the greedy algorithm will significantly reduce its accuracy, as already reported in similar earlier work <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b5">6]</ref>, and we omit the report here. Quality sensitivity. We would like to study the quality sensitivity of the tested networks. However, the qs-ratio is difficult to obtain directly. To circumvent this problem, we conduct two tests. In the first test, we set all edge propagation probabilities to 1, so that we can use the result in Lemma 2.1 to efficiently obtain influence spread, and then derive the qsratios. <ref type="table" target="#tab_1">Table 2</ref> shows the result of qs-ratios when selecting one seed from the networks, with the range of quality factors from 0.5 to 1. For NetHEPT, we tried the undirected graph version as well as the directed graph version, where the edge direction is randomly assigned. The q * value in the table indicates at which quality factor the qsr(q) value to its left is achieved. For example, the first row for WikiVote means that, if we use the optimal seed u selected when q = 1, the worst case occurs when the actual quality factor is q * = 0.5, in which case the optimal influence spread is 1.338 times better than the influence spread achieved by u. The results show that in general the qs-ratio is small. Therefore, when the propagation probabilities are smaller and when selecting more seeds, we could expect that the qs-ratio may be even smaller.</p><p>Next, we use the MIA-N algorithm to select a seed set with one quality factor q and then compare the influence spread of this seed set at another quality factor q with the seed set selected by MIA-N under q directly. Our results show that except for some rare cases where these influence spread results differ slightly, most results are the same. This suggest that the influence graphs we tested seem not sensitive to different quality factors.</p><p>However, this does not mean that MIA-N is not useful. On the contrary, without MIA-N, we cannot efficiently check if a large influence graph is sensitive to the quality factor. Since obtaining qs-ratio directly seems to be intractable, we propose that MIA-N is an efficient tool to check the quality sensitivity of a given influence graph. If the result from MIA-N indicates that the graph is not quality sensitive, then we do not need to obtain the quality factor of the product; otherwise we do need to obtain a good estimate of the quality factor and use MIA-N with the quality factor estimate to achieve a better influence maximization result.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Further Model Extensions</head><p>We further extend the IC-N model and study different optimization objectives. In particular, we have considered the following four model extensions: (a) allowing each node to have a different quality factor to model the situation where different individuals have different tendency of turning negative to a product; (b) allowing negative influence to propagate through an edge with higher probabilities to further strengthen negativity bias; (c) allowing different propagation delays along different edges to model the nonuniform interaction frequency between individuals; and (d) using other objectives such as maximizing the difference or the ratio between positive and negative influence spread.</p><p>Different quality factor per node. In our IC-N model, every node v has the same probability q of turning positive when it is activated by a positive neighbor. We could further extend it so that node v has probability q v , which may vary from node to node. This is intended to model the situation where different individuals have different tendency of turning negative to a product. However, the extension introduces too many parameters to the model and making it much less tractable for analysis and computation. For example, the influence spread set function may no longer be monotone and submodular. To see this, we can consider the extreme case where some node v has q v = 0 and other nodes have positive quality factors. Since v's influence is always negative, it is quite easy to construct examples where the positive influence set function is neither monotone nor submodular, due to the possible addition of v into the seed set. In fact, we can go even further and show that as long as there are two different quality factors used by the nodes, and even if only one node uses a different quality factor from others, it is enough to construct examples that are not monotone or submodular, as formally stated below 考(S 1 )). Therefore, we have 考(S n1 ) &lt; 0, so long as n 1 is sufficiently large, which is a contradiction.</p><p>On the other hand, by introducing a single parameter q, we aim at modeling the situation where positive or negative opinions are mostly determined by the quality of the product, which can be controlled and assessed before the product is put on the market. Companies could use the quality factor q and its associated IC-N model to analyze and predict potential influence and select seeds for influence maximization. Therefore, we feel that using a single quality factor already provides substantial benefits for influence maximization, while introducing individualized q v parameters is less significant and tractable. THEOREM 7.1. For any q 1 and q 2 with 0 ≒ q 2 &lt; q 1 ≒ 1, there exists an influence graph G = (V, E, p) such that only one node uses q 1 as the quality factor and all other nodes use q 2 as the quality factor, but positive influence spread as a set function in G is neither monotone nor submodular.</p><p>Stronger negative influence probabilities. In this paper, we model that on any directed edge, negative opinions and positive opinions propagate with the same probability. In many situations, however, it seems that negative opinions are more likely to propagate than positive ones, as captured by an old Chinese adage: "Good deeds do not go out the door, but bad deeds travel a thousand miles". To capture stronger negative influence, we need to assign large propagation probabilities on edges when the source is negative. For an edge (u, v), let p + (u, v) and p ? (u, v) denote positive and negative propagation probabilities, respectively. When</p><formula xml:id="formula_37">p ? (u, v) &gt; p + (u, v)</formula><p>, it is possible that the positive influence spread is not monotone or submodular as long as q &lt; 1, as shown below.</p><p>Proof. Let us consider a bipartite graph where V = S ﹍ T and for every pair of nodes s ﹋ S and t ﹋ T , there exists a directed edge (s, t). Let S = {s 1 , s 2 , ..., s n1 } and T = {t 1 , t 2 , ..., t n2 . Also, define S i = {s 1 , ..., s i } for 1 ≒ i ≒ n 1 . Let s 1 be the unique node with quality factor q 1 ; the rest of nodes all have quality factor q 2 . Finally, let the propagation probability be 1 across all the edges.</p><p>For any v ﹋ V and subset U ? V , define 考(U, v) be the probability that u will be positively activated if the seed set is U . Accordingly, the expected number of positively activated nodes is defined as 考(U ) = v﹋V 考(U, v). We shall show that the function 考(﹞) is neither monotone nor submodular.</p><p>To show that 考(﹞) is non-monotone, let us consider 考(S 1 ) and 考(S 2 ), where S 1 ? S 2 . For any specific v ﹋ T , we have 考(S 1 , v) = q THEOREM 7.2. For any quality factor q &lt; 1, for any p 1 and p 2 such that 0 ≒ p 1 &lt; p 2 ≒ 1, there exists an influence graph G = (V, E, p + , p ? ) in which for any e ﹋ E either p + (e) = p ? (e) or p + (e) = p 1 and p ? (e) = p 2 , and the positive influence spread as a set function in G is neither monotone nor submodular.</p><formula xml:id="formula_38">2 1 while 考(S 2 , v) = q 1 q 2 2 + q 1 (1 ? q 2 )/2 + q 2 (1 ? q 1 )/2. Let us view 考(S 2 , v)</formula><p>as a quadratic function with respect to q 2 . It is not difficult to see that the function is maximized when q 2 ↙ q 1 (and the function is strictly increasing in the left neighbor of q 2 ). Therefore, 考(S 1 , v) ? 考(S 2 , v) &gt; 0 and hence 考(S 1 ) &gt; 考(S 2 ), so long as n 2 is sufficiently large.</p><p>Next, we show that 考(﹞) is neither submodular by contradiction.</p><p>Suppose 考(﹞) were submodular.</p><formula xml:id="formula_39">We have 考(S n1 ) ? 考(S n1?1 ) ≡ 考(S n1?1 ) ? 考(S n1?2 ) ≡ ... ≡ 考(S 2 ) ? 考(S 1 ). Now 考(S n1 ) = 考(S 1 ) + Proof.</formula><p>Our construction is similar to the proof for Theorem 7.1. Consider a bipartite graph where V = S ﹍ T and for every pair of nodes s ﹋ S and t ﹋ T , there exists a directed edge (s, t). Let S = {s 1 , s 2 , ..., s n1 } and T = {t 1 , ..., t n2 }. Also, define S i = {s 1 , ..., s i } for 1 ≒ i ≒ n 1 . The propagation probabilities for the edges are defined as follows:</p><formula xml:id="formula_40">p + (s 1 , t) = p ? (s 1 , t) = 1 for all t ﹋ T .</formula><p>And for the rest of the edges, set p + (e) = p 1 and p ? (e) = p 2 . Finally, let 考(U, v) be the probability that v will be positively activated when the seed set is U and let 考(U ) = v﹋V 考(U, v). We shall show that the function 考(﹞) is neither monotone nor submodular.</p><p>To show that 考(﹞) is non-monotone, let us consider 考(S 1 ) and 考(S 2 ), where S 1 ? S 2 . For any specific v ﹋ T ,</p><formula xml:id="formula_41">1≒i≒n1?1 考(S i+1 )?考(S i ) ≒ 考(S 1 )?(n 1 ?1)(考(S 2 )? we have 考(S 1 , v) = q 2 and 考(S 2 , v) = q 3 + q 2 (1 ? q) (1 ? p 2 ) + p 2 /2 +q 2 (1 ? q)p 1 /2 = q ﹞ q 2 + q(1 ? q)(1 ? p 2 /2 + p 1 /2 &lt; q ﹞ q 2 + q(1 ? q) = q 2 .</formula><p>Therefore, 考(S 1 ) &gt; 考(S 2 ) as long as n 2 is sufficiently large. Next, let us sketch the proof for non-submodularness: suppose on the contrary 考(﹞) is submodular, using the same argument appeared in the proof of Theorem 7.1, we have</p><formula xml:id="formula_42">考(S n1 ) ≒ 考(S 1 ) ? (n 1 ? 1)(考(S 2 ) ? 考(S 1 )</formula><p>). Therefore, 考(S n1 ) &lt; 0, as long as n 1 is sufficiently large, which is a contradiction. Without monotonicity and submodularity, it is unclear how to tackle the influence maximization problem. One possibility is to ignore the stronger negative propagation probabilities, and use the algorithms proposed in this paper to find seeds, hoping that it will not be too far off from the real optimal solution. By investigating into the graphs used in the proof of Theorem 7.2, we see that ignoring stronger negative propagation probabilities may lead to very poor seed choices far from the optimal. However, these graphs are artificial, so we did further experiments on real datasets.</p><p>In our experiments, we set p ? (e) = 1 ? (1 ? p + (e)) for every edge e, where 汐 ≡ 1 is a parameter denoting the strength of negative opinion. When 汐 = 1, p ? (e) = p + (e); and when 汐 = +﹢, p ? (e) = 1 for all p + (e) &gt; 0. Intuitively, when 汐 is an integer, the above formula means for every chance that a positive u influences v, a negative u will have 汐 chances to influence v. We use seeds selected by our greedy algorithm for 汐 = 1, and run simulations to check the positive influence spread when 汐 is greater than 1. Surprisingly, our simulation results, shown in <ref type="figure" target="#fig_17">Figure 6</ref>, indicates that the positive influence spread has almost no change when 汐 increases, and only negative influnece spread increases. The result suggests that, even though negative influence spreads wider, it does not intercept the spread of positive influence in such real graphs. The reason is likely to be the combined effects of the sparsity of the graphs, the small number of seeds selected, and the exponential decay in likelihood of influence propagation along any path. It would be interesting to further investigate under what conditions the positive influence spread is not significantly affected by stronger negative influence propagations. bility distribution such as the exponential distribution, which is already incorporated into a competitive influence cascade model in <ref type="bibr" target="#b1">[2]</ref>. We note that without negative opinions, this extension is unnecessary, because as long as node u activates its out-neighbor v, it does not matter how long this activation takes. However, with negative opinions, propagation delays do matter since positive and negative opinions are competing to be the first to reach neutral nodes.</p><p>By fixing both edge selections and edge delays first, the authors of <ref type="bibr" target="#b1">[2]</ref> show that the influence spread of one product in a competitive environment is still monotone and submodular. This argument, however, does not apply to our case of negative opinions. A key observation is that a node u may have a very short delay path to a node v but the path has many hops. Thus when adding u into the seed set, u will be the one reaching v the fastest, but since the path traverses many nodes, v only has a very small chance to be positive. Hence, after adding edge delays, the influence spread may no longer be monotone and submodular. Therefore, although adding edge delays would make the model more realistic, it also adds more parameters to the model and makes the model less tractable.</p><p>Different propagation delays. In the IC-N model, once a node is activated, it always tries to activate all of its outneighbors in the next step. In reality, people's interaction intervals are not deterministic and vary from person to person. We may model this by extending the IC-N model so that propagation delay on every edge follows certain probaAlternative objective functions. In this paper, we focus on maximizing positive influence spread as our objective, because positive influence spread corresponds to the sale of products. However, one may also want to minimize the negative influence spread, because negative influence may prohibit sales of future products of the company. A simple objective function that incorporates both positive and negative influence spread is the difference between positive and negative spread, which we refer as net influence spread. However, with this objective function, we can only guarantee monotonicity and submodularity when q is large enough, as shown by the following theorem.</p><p>Summarizing above, we have 考 THEOREM 7.3. For any influence graph G = (V, E, p), let ? = max{d G (u, v) | there is a path from u to v}. For any q ≡ 2 ?1/(?+1) , the net influence spread is monotone and submodular.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proof.</head><p>Let us mimic the proof for Lemma 2.1 though here we have more cases to analyze. Again, let us define 考 G (S, q) to be the net influence spread when the seed set is S and the quality factor is q, i.e., the expected difference between the number of positively activated nodes and the number of negatively activated nodes. Also, let v ﹋ V and pap G (v, S, q) be the expected difference between the probability v become positively activated and the probability that v become negatively activated.</p><p>When a node v is reachable from the seed set S, we have pap G (v, S, q) = 2q d G (S,v)+1 ? 1. Otherwise, we have pap G (v, S, q) = 0. We shall show that pap G (v, S, q) is a monotone and submodular function when v and q are fixed.</p><p>First, it is clear that pap G (v, ?, q) = 0 in this setting. To show that pap G (S, q) is both submodular and monotone when q ≡ 2 ?1/(?+1) . For smaller q values, adding new seed nodes may cause negative net influence spread, and thus the net influence spread is not monotone or submodular.</p><p>Another possible objective is to maximize the ratio between positive influence spread and negative influence, which is very similar to the net-promotor score proposed in <ref type="bibr" target="#b21">[22]</ref>. However, this would also suffer as the net influence spread objective causing the object function not monotone or submodular. Therefore, while it is interesting to study net influence maximization or similar objectives that incorporate negative influence spread, except for q values close to 1, it may requires new techniques and is left open as a future research direction.</p><p>In summary, all of the above extensions and their implications could be interesting for future research. We hope that our study could motivate more work on the algorithmic aspects of social influence propagations that include both positive and negative opinions. G (v, ﹞, q) is monotone, let us consider two subsets S ? T ? V . In case the node v is reachable from S, we have 2q</p><formula xml:id="formula_43">d G (T,v) ? 1 ≡ 2q d G (S,v)?1 ≡ 0.</formula><p>The last inequality holds because of the assumption q ≡ 2 ?1/(?+1) . In case the node v is not reachable from S but reachable from T , we have pap</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>13: if state(u) = positive then 14: state(v ) = positive with probability q, otherwise state(v ) = negative 15:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>k</head><label></label><figDesc>, C 1 , ..., C k }, in which C i are stars of size This yields a contradiction.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>+1 and C i are lines of size k ? 1?q ?1. Then we have qsr G,k (q) ＞ n n k (1 ? q) = ?( k ). Our lemma therefore always holds.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: An example of graph to reach large qsr G,k rate. In this example, the value k = 1 and the graph only consists of two components {C</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>2 i</head><label>2</label><figDesc>(i ﹋ [k]) are one- way directed lines of size n 2 = n k ? n 1 . Propagation proba- bilities on all edges are 1. Figure 1 represents an example of the graph when k = 1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>LEMMA 4. 2 .</head><label>2</label><figDesc>For any u ﹋ V and any integer t ≡ 0, we have</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Influence Spread vs. the quality factor for the NetHEPT network.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Positive influence spread for NetHEPT.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Positive influence Spread for WikiVote and Epinions, for q = 0.9.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Running time results. (a) running time for three real-world networks; (b) scalability test on synthetic powerlaw graphs. All use q = 0.9.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head>cases</head><label></label><figDesc>, our MIA-N algorithm is orders of magnitude faster than the greedy algorithm (the speedup is 307,112,33,285 times, respectively).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_17"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: Positive and negative influence spread in NetHEPT network when negative propagation probabilities are higher. The 50 seeds used are selected by the greedy algorithm when 汐 = 1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="true"><head>Table 1 : Statistics of the three real-world networks.</head><label>1</label><figDesc></figDesc><table>Dataset 
NetHEPT WikiVote Epinions 
number of nodes 
15K 
7K 
76K 
number of edges 
31K 
101K 
509K 
average degree 
4.12 
26.64 
13.4 
maximal degree 
64 
1065 
3079 
number 
of 
connected com-
ponents 

largest 
compo-
nent size 
6794 
7066 
76K 

average compo-
nent size 
8.55 
296.46 
6.9K 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><head>Table 2 :</head><label>2</label><figDesc></figDesc><table>Quality-sensitivity ratios when edge propagation 
probabilities are 1 and one seed is selected. 
WikiVote 
NetHEPT 
NetHEPT 
(undirected) 
(directed) 
q 
qsr(q) q 

 *  

qsr(q) q 

 *  

qsr(q) q 

 *  

</table></figure>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgment</head><p>G (v, S, q) = 0 while pap G (v, T, q) ≡ 0. Finally, in the case v is not reachable from T , we have pap G (v, S, q) = pap G (v, T, q) = 0. In all three cases, the function pap This project was initiated as a summer project in the program of Research in Industrial Projects for Students (RIPS) 2009, jointly hosted by Institute for Pure and Applied Mathematics (IPAM), University of California at Los Angeles and Microsoft Research Asia (MSRA). We thank IPAM and MSRA for the generous support of this project.</p><p>Again let the subsets S ? T ? V . We analyze three cases separately based on whether v is reachable from S or T .</p><p>Case 1: The node v is not reachable from T . We need to show that for all u ﹋ V , the following inequality holds:</p><p>where S = S ﹍ {u} and T = T ﹍ {u}. Notice that pap <ref type="figure">, q)</ref>. Therefore, the inequality holds.</p><p>Case 2: The node v is not reachable from S but reachable from T . In this case, we have pap</p><p>. Therefore, in this case, the pap G (v, ﹞, q) function is also submodular. Case 3: The node v is reachable from S. In this case, we have pap <ref type="figure">T, q)</ref>, which also suggests pap G (v, ﹞, q) is submodular.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Bad is stronger than good</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">F</forename><surname>Baumeister</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Bratslavsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Finkenauer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Review of General Psychology</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="323" to="370" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Competitive influence maximization in social networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Bharathi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Kempe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Salek</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 3rd International Workshop on Internet and Network Economics</title>
		<meeting>the 3rd International Workshop on Internet and Network Economics</meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="306" to="311" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">On the approximability of influence in social networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 19th ACM-SIAM Symposium on Discrete Algorithms</title>
		<meeting>the 19th ACM-SIAM Symposium on Discrete Algorithms</meeting>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="1029" to="1037" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Scalable influence maximization for prevalent viral marketing in large scale social networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 16th ACM SIGKDD Conference on Knowledge Discovery and Data Mining</title>
		<meeting>the 16th ACM SIGKDD Conference on Knowledge Discovery and Data Mining</meeting>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Efficient influence maximization in social networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Yang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 15th ACM SIGKDD Conference on Knowledge Discovery and Data Mining</title>
		<meeting>the 15th ACM SIGKDD Conference on Knowledge Discovery and Data Mining</meeting>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Scalable influence maximization in social networks under the linear threshold model</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Yuan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 10th IEEE International Conference on Data Mining</title>
		<meeting>the 10th IEEE International Conference on Data Mining</meeting>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">DIGG: DynamIc Graph Generator</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Cowen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Brady</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Schmid</surname></persName>
		</author>
		<ptr target="http://digg.cs.tufts.edu" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Mining the network value of customers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Domingos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Richardson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 7th ACM SIGKDD Conference on Knowledge Discovery and Data Mining</title>
		<meeting>the 7th ACM SIGKDD Conference on Knowledge Discovery and Data Mining</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="57" to="66" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A threshold of ln n for approximating set cover</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Feige</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the ACM</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="634" to="652" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Maximizing the spread of influence through a social network</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Kempe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">M</forename><surname>Kleinberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Tardos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 9th ACM SIGKDD Conference on Knowledge Discovery and Data Mining</title>
		<meeting>the 9th ACM SIGKDD Conference on Knowledge Discovery and Data Mining</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="137" to="146" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Influential nodes in a diffusion model for social networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Kempe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">M</forename><surname>Kleinberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Tardos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 32nd International Conference on Automata, Languages, and Programming</title>
		<meeting>the 32nd International Conference on Automata, Languages, and Programming</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="1127" to="1138" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Tractable models for information diffusion in social networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kimura</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Saito</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 10th European Conference on Principles and Practice of Knowledge Discovery in Databases</title>
		<meeting>the 10th European Conference on Principles and Practice of Knowledge Discovery in Databases</meeting>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="page" from="259" to="271" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Finding effectors in social networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Lappas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Terzi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Gunopulos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Mannila</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 16th ACM SIGKDD Conference on Knowledge Discovery and Data Mining</title>
		<meeting>the 16th ACM SIGKDD Conference on Knowledge Discovery and Data Mining</meeting>
		<imprint>
			<date type="published" when="2010" />
			<biblScope unit="page" from="1059" to="1068" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Epinions social network</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Leskovec</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Wikipedia vote network</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Leskovec</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Cost-effective outbreak detection in networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Leskovec</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Krause</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Guestrin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Faloutsos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Vanbriesen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">S</forename><surname>Glance</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 13th ACM SIGKDD Conference on Knowledge Discovery and Data Mining</title>
		<meeting>the 13th ACM SIGKDD Conference on Knowledge Discovery and Data Mining</meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="420" to="429" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Mining social networks using heat diffusion processes for marketing candidates selection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">R</forename><surname>Lyu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>King</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 17th ACM Conference on Information and Knowledge Management</title>
		<meeting>the 17th ACM Conference on Information and Knowledge Management</meeting>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="233" to="242" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Determining the top-k nodes in social networks using the shapley value</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Narayanam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Narahari</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 7th International Joint Conference on Autonomous Agents and Multiagent Systems</title>
		<meeting>the 7th International Joint Conference on Autonomous Agents and Multiagent Systems</meeting>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="1509" to="1512" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">A shapley value based approach to discover influential nodes in social networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Narayanam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Narahari</surname></persName>
		</author>
		<ptr target="http://clweb.csa.iisc.ernet.in/nrsuri/social-networks-nrsuri-2010.pdf" />
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Automation Science and Engineering</title>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
	<note>to appear. Online version available at</note>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">An analysis of the approximations for maximizing submodular set functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Nemhauser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Wolsey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Fisher</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mathematical Programming</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="265" to="294" />
			<date type="published" when="1978" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Positive-negative asymmetry in evaluations: The distinction between affective and informational negativity effects</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Peeters</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Czapinski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European Review of Social Psychology</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="33" to="60" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">The one number you need to grow</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">F</forename><surname>Reichheld</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Harvard Business Review</title>
		<imprint>
			<date type="published" when="2003-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Mining knowledge-sharing sites for viral marketing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Richardson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Domingos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 8th ACM SIGKDD Conference on Knowledge Discovery and Data Mining</title>
		<meeting>the 8th ACM SIGKDD Conference on Knowledge Discovery and Data Mining</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="61" to="70" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Negativity bias, negativity dominance, and contagion</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Rozin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">B</forename><surname>Royzman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Personality and Social Psychology Review</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="296" to="320" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Asymmetrical effects of positive and negative events: The mobilization-minimization hypothesis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">E</forename><surname>Taylor</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Psychological Bulletin</title>
		<imprint>
			<biblScope unit="volume">110</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="67" to="85" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Community-based greedy algorithm for mining top-k influential nodes in mobile social networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Cong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Xie</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 16th ACM SIGKDD Conference on Knowledge Discovery and Data Mining</title>
		<meeting>the 16th ACM SIGKDD Conference on Knowledge Discovery and Data Mining</meeting>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
